[tox]
envlist = py

isolated_build = true

[testenv]
basepython = python3
description = Run the unit test suite
# Install in "editable mode" to get correct coverage results
usedevelop = true
deps =
    -rrequirements.txt
    -rrequirements-dev.txt
    -rrequirements-internal.txt
commands =
    {envpython} -m coverage run --source=fedempy --module pytest --doctest-modules --junit-xml=pytest-{envname}.xml -c pyproject.toml test {posargs}
    {envpython} -m coverage report
    {envpython} -m coverage xml -o coverage-py-{envname}.xml
    {envpython} -m coverage html -d htmlcov-{envname}
setenv =
    PIP_CONFIG_FILE=pip.conf

[testenv:lint]
basepython = python3
description = Check code formatting and linting
deps =
    black
    isort
    pylint
commands =
    {envpython} -m isort --check --diff setup.py src
    {envpython} -m black --config=pyproject.toml --check --diff setup.py src
    {envpython} -m pylint -j 0 -r n --fail-under=9 --rcfile=.pylintrc setup.py src

[testenv:docs]
description = Invoke sphinx-build to generate HTML docs
basepython = python3
changedir = doc
deps =
    sphinx >= 2.3.0
    numpydoc
    sphinx-rtd-theme
commands = sphinx-build -b html -d {envtmpdir}/doctrees source {envtmpdir}/html

[testenv:fmt]
basepython = python3
description = Automatically format python code
deps =
    black
    isort
commands =
    {envpython} -m isort setup.py src
    {envpython} -m black --config={toxinidir}/pyproject.toml setup.py src

[testenv:type]
basepython = python3
description = Run mypy type check
deps =
    mypy
commands =
    {envpython} -m mypy --config-file mypy.ini src/fedempy
