C     SPDX-FileCopyrightText: 2023 SAP SE
C
C     SPDX-License-Identifier: Apache-2.0
C
C     This file is part of FEDEM - https://openfedem.org
C
      SUBROUTINE IPRI31(EK,XG,YG,ZG,YOUNG,RNY,IEL,INTT,INTZE,
     1                  IW,IPSW,IERR)
C
C***********************************************************************
C
C   F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IPRI31
C
C
C     IPRI31 COMPUTES THE STIFFNESS MATRIX OF AN ISOPARAMETRIC TRI-
C     ANGULAR PRISM,WITH 15 NODES AND THREE DEGREES OF FREEDOM AT
C     EACH NODE.
C     THE EDGES MAY BE STRAIGHT OR CURVED.
C     THE STIFFNESS MATRIX IS REFERRED TO THE GLOBAL CARTESIAN COOR-
C     DINATE SYSTEM
C
C     PROGRAMMED BY: J.H.WERGELAND AND H.F. KLEM
C
C     DATE/VERSION : 11.12.73 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,ZG,YG IS 15,(I=1,15)
C     YOUNG - YOUNGS MODULUS OF ELASTICITY
C     RNY   - POISSONS RATIO
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     INTT  - NUMBER OF INTEGRATION POINTS IN THE TRIANGLE PLANE.
C             LEGAL VALUES ARE 3,4 AND 7.
C     INTZE  - NUMBER OF INTEGRATION POINTS IN THE ZETA DIRECTION.
C             LEGAL VALUES : 2,3 OR 4.
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C     IW    - WRITE UNIT. E.G. WRITE (IW,6010)
C
C   OUTPUT:
C
C     EK    - UPPER HALF OF ELEMENT STIFFNESS MATRIX K. EK IS A ONE
C             DIMENSION ARRAY WITH DIMENSION: EK(1080). THE STIFF-
C             NESS MATRIX CONSISTS OF 3X3 SUBMATRICES. EACH SUBM-
C             MATRIX IS STORED COLUMNWISE AND THE SUBMATRICES ARE
C             STORED LINEWISE.
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: THE
C             DETERMINANT OF THE JACOBIAN MATRIX IS NUMERICALLY ZERO.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     EK(1080)  ,    DNL1(15)  ,    DNL2(15)  ,
     1              DNZE(15)  ,    JI(3,3)   ,
     2              HI(4)     ,    WT(4,4)   ,    XV(4,4)   ,
     3              RL1(7)    ,    RL2(7)    ,    ZE(4)     ,
     4              XG(15)    ,    YG(15)    ,    ZG(15)    ,
     5              B(15,3)   ,    DB(15,6,3),    EKIJ(3,3) ,
     6              WK(7)     ,    RL3(7)
      DOUBLE PRECISION JI
C
C
C
C
      IERR=0
      MEK=15
C
C     PRINT ?
C
      IF (IPSW-2) 30,10,10
    5 IF (IPSW-2) 15,25,25
   10 CONTINUE
      WRITE(IW,6000)IEL
   15 WRITE(IW,6010)
      DO 20 I1=1,MEK
      WRITE(IW,6020) I1 , XG(I1),YG(I1),ZG(I1)
   20 CONTINUE
      WRITE(IW,6030) YOUNG,RNY
      WRITE(IW,6115)INTT
      WRITE(IW,6040) INTZE
   25 CONTINUE
      IF (IERR) 300,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C     DIMENSION OF EK IS 9*MEK*(MEK+1)/2
C
      IDIM=9*MEK*(MEK+1)/2
      DO 40 I1=1,IDIM
      EK(I1)=0.0
   40 CONTINUE
      DO 60 I1=1,4
      DO 50 J1=1,4
      XV(I1,J1)=0.0
      WT(I1,J1)=0.0
   50 CONTINUE
   60 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX
C
      D=YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
      D2=D*(1.-2.*RNY)/(2.*(1.-RNY))
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,2)=-.577350269
      XV(2,2)=+.577350269
      XV(1,3)=-.774596669
      XV(2,3)= .0
      XV(3,3)=+.774596669
      XV(1,4)=-.861136312
      XV(2,4)=-.339981044
      XV(3,4)=+.339981044
      XV(4,4)=+.861136312
C
C     WEIGHING FUNCTION IN GAUSSIAN QUADRATURE INTEGRATION
C
      WT(1,2)=1.000000000
      WT(2,2)=1.000000000
      WT(1,3)= .555555556
      WT(2,3)= .888888889
      WT(3,3)= .555555556
      WT(1,4)= .347854845
      WT(2,4)= .652145155
      WT(3,4)= .652145155
      WT(4,4)= .347854845
C
C @@@@@@@@@@@@@@@@@@@@@@@@@@@@ TILF\ID AV KETIL AAMNES @@@@@@@@@@@@@
C
      DO 65 I=1,4
         ZE(I)=XV(I,INTZE)
         HI(I)=WT(I,INTZE)
   65 CONTINUE
C
C @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C
C     CHOOSE ABSCISSAES AND WEIGHTS. THESE ARE DEPENDANT ON WHETHER
C     INT1 ARE 2,3 OR 4.
C
      DO 70 I=1,4
      DO 70 J=1,4
      DO 70 K=1,4
   70 CONTINUE
C
C     TEST IF THE VALUE OF INTT HAS ALLOWABLE VALUE.IF NOT- *ERROR*
C
      IF(INTT-3)90,95,75
   75 IF(INTT-4)90,95,80
   80 IF(INTT-7)90,95,90
   90 IERR=-1
      WRITE(IW,6100)
      WRITE(IW,6110)IERR
      WRITE(IW,6115)INTT
      IF(IPSW-2)15,330,330
   95 CONTINUE
      GOTO(90,90,100,110,90,90,120),INTT
  100 CONTINUE
C
C     AREA COORDINATES FOR QUADRATIC INTEGRATION
C     IN THE TRIANGLE PLANE.
C
      RL1(1)=.5
      RL2(1)=.5
      RL3(1)=.0
      RL1(2)=.0
      RL2(2)=.5
      RL3(2)=.5
      RL1(3)=.5
      RL2(3)=.0
      RL3(3)=.5
C
C     WEIGHTS FOR QUADRATIC INTEGRATION.
C
      WK(1) =.3333333333333333*.5
      WK(2) =.3333333333333333*.5
      WK(3) =.3333333333333333*.5
      GOTO 130
  110 CONTINUE
C
C     AREA COORDINATES FOR CUBIC INTEGRATION
C     IN THE TRIANGLE PLANE.
C
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=.6
      RL2(2)=.2
      RL3(2)=.2
      RL1(3)=.2
      RL2(3)=.6
      RL3(3)=.2
      RL1(4)=.2
      RL2(4)=.2
      RL3(4)=.6
C
C     WEIGHTS FOR CUBIC INTEGRATION.
C
      WK(1) =-(27./48.)*.5
      WK(2) =  25./48. *.5
      WK(3) =  25./48. *.5
      WK(4) =  25./48. *.5
      GOTO 130
  120 CONTINUE
C
C     ARE COORDINATES FOR NUMERICAL INTEGRATION. QUINTIC INTEGRATION
C     IN THE TRIANGLE PLANE AFTER HAMMER ET AL.
C
      ALFA1=0.0597158717890
      BETA1=0.4701420641055
      ALFA2=0.7974269853530
      BETA2=0.1012865073235
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
C
C     WEIGHTS FOR QINTIC INTEGRATION
C
      WK(1)=0.225*.5
      WK(2)=0.132394152788*.5
      WK(3)=0.132394152788*.5
      WK(4)=0.132394152788*.5
      WK(5)=0.125939180544*.5
      WK(6)=0.125939180544*.5
      WK(7)=0.125939180544*.5
  130 CONTINUE
C
C     GAUSS QUADRATURE INTEGRATION IN ZETA DIRECTION AND DIFFERENT
C     INTEGRATIONS IN THE TRIANGLE PLANE (L1 AND L2).
C     COMPUTING THE STIFFNESS MATRIX
C
C
C
C @@@@@@@@@@@@@@@@@@@@@@@@@@@@ TILF\ID AV KETIL AAMNES @@@@@@@@@@@@@
      DO 270 L=1,INTZE
      DO 280 K=1,INTT
C @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C
C     COMPUTE THE PARTIAL DERVATIVES OF THE SHAPE FUNCTION
C
      CALL DN1531(DNL1,DNL2,DNZE,RL1(K),RL2(K),RL3(K),ZE(L))
C
C     COMPUTE THE JACOBIAN MATRIX, ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN IERR=-1
C
      IF (IERR) 5,200,200
  200 CONTINUE
C
C     COMPUTE THE MATRIXES B AND D*B
C
      DO 210 J=1,MEK
C
      B(J,1)=JI(1,1)*DNL1(J)+JI(1,2)*DNL2(J)+JI(1,3)*DNZE(J)
      B(J,2)=JI(2,1)*DNL1(J)+JI(2,2)*DNL2(J)+JI(2,3)*DNZE(J)
      B(J,3)=JI(3,1)*DNL1(J)+JI(3,2)*DNL2(J)+JI(3,3)*DNZE(J)
C
      DB(J,1,1)=D*B(J,1)
      DB(J,2,1)=D1*B(J,1)
      DB(J,3,1)=DB(J,2,1)
      DB(J,4,1)=D2*B(J,2)
      DB(J,5,1)=D2*B(J,3)
      DB(J,6,1)=0.0
      DB(J,1,2)=D1*B(J,2)
      DB(J,2,2)=D*B(J,2)
      DB(J,3,2)=DB(J,1,2)
      DB(J,4,2)=D2*B(J,1)
      DB(J,5,2)=0.0
      DB(J,6,2)=DB(J,5,1)
      DB(J,1,3)=D1*B(J,3)
      DB(J,2,3)=DB(J,1,3)
      DB(J,3,3)=D*B(J,3)
      DB(J,4,3)=0.0
      DB(J,5,3)=DB(J,4,2)
      DB(J,6,3)=DB(J,4,1)
C
  210 CONTINUE
C
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND THE JACOBIAN DETERMINANT
C
      COF=WK(K)*HI(L)*DETJ
C
C     MULTIPLICATION OF THE B-MATRIX NUMBER I WITH COF.
C
      DO 220 I=1,MEK
      B(I,1)=COF*B(I,1)
      B(I,2)=COF*B(I,2)
      B(I,3)=COF*B(I,3)
  220 CONTINUE
C
C     CALCULATE UPPER TRIANGLE OF EK (ELEMENT STIFFNESS MATRIX)
C
      IPK=0
      DO 260 I=1,MEK
      DO 250 J=I,MEK
C
      EKIJ(1,1)=B(I,1)*DB(J,1,1)+B(I,2)*DB(J,4,1)+B(I,3)*DB(J,5,1)
      EKIJ(2,1)=B(I,2)*DB(J,2,1)+B(I,1)*DB(J,4,1)
      EKIJ(3,1)=B(I,3)*DB(J,3,1)+B(I,1)*DB(J,5,1)
      EKIJ(1,2)=B(I,1)*DB(J,1,2)+B(I,2)*DB(J,4,2)
      EKIJ(2,2)=B(I,2)*DB(J,2,2)+B(I,1)*DB(J,4,2)+B(I,3)*DB(J,6,2)
      EKIJ(3,2)=B(I,3)*DB(J,3,2)+B(I,2)*DB(J,6,2)
      EKIJ(1,3)=B(I,1)*DB(J,1,3)+B(I,3)*DB(J,5,3)
      EKIJ(2,3)=B(I,2)*DB(J,2,3)+B(I,3)*DB(J,6,3)
      EKIJ(3,3)=B(I,3)*DB(J,3,3)+B(I,1)*DB(J,5,3)+B(I,2)*DB(J,6,3)
C
      DO 240 II=1,3
      DO 230 JJ=1,3
      IPK=IPK+1
      EK(IPK)=EK(IPK)+EKIJ(JJ,II)
  230 CONTINUE
  240 CONTINUE
C
  250 CONTINUE
  260 CONTINUE
C
  280 CONTINUE
  270 CONTINUE
C
C     PRINT IF IN ERROR
C
      GO TO 320
  300 CONTINUE
      WRITE(IW,6100)
      WRITE(IW,6110) IERR
      WRITE(IW,6120) IEL
      WRITE(IW,6130) K,L
      WRITE(IW,6150) IEL
      GOTO 340
C
  320 CONTINUE
C
C     PRINT ?
C
      IF (IPSW-2) 340,330,330
  330 CONTINUE
      WRITE(IW,6160) IEL
      IDIM1=1
      IDIM2=1080
      CALL MPRT30(EK,IDIM1,IDIM2,IW)
      WRITE(IW,6150) IEL
C
  340 CONTINUE
C
C
 6000 FORMAT(////29H ENTERING IPRI31 FOR ELEMENT ,I7,2H :)
 6010 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6020 FORMAT(I9,6X,1P3E12.4)
 6030 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,23HPOISSONS NUMBER
     2 (RNY)= ,0PF5.3)
 6040 FORMAT(/5X,62HNUMBER OF INTEGRATION POINTS IN THE ZETA-DIRECTION (
     2INTZE) =  ,I1)
 6100 FORMAT(///33H *** ERROR RETURN FROM IPRI31 ***)
 6110 FORMAT(/24H     ERROR FLAG (IERR) =,I3)
 6115 FORMAT(/,5X,5HINTT=,I4,3X,31HWHILE LEGAL VALUES ARE 3,4 OR 7)
 6120 FORMAT(/13H     ELEMENT ,I7,11H   IN ERROR)
 6130 FORMAT(/66H     THE DETERMINANT OF THE JACOBIAN MATRIX FOR INTEGRA
     2TION POINT ,2I5, 18H  IS EQUAL TO ZERO)
 6150 FORMAT(/28H LEAVING IPRI31 FOR ELEMENT ,I7)
 6160 FORMAT(//33H     ELEMENT STIFFNESS MATRIX NO.,I7)
C
      RETURN
      END
      SUBROUTINE IPRI32(SIG,XGP,YGP,ZGP,V,EPS0I,XG,YG,ZG,YOUNG,RNY,
     1                  NSTRP,NSTRPZ,IOPXP,IOPE0,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C   F I N I T E  E L E M E N T  L I B  R A R Y  SUBROUTINE :  IPRI32
C
C
C     IPRI32 CALCULATES THE STRESSES IN POINTS SPECIFIED WITH NSTRP,
C     NSTRPZ INSIDE AN ISOPARAMETRIC TRIANGULAR PRISM. NUMBER OF
C     STRESS POINTS IS NSTRP*NSTRPZ.
C             IPRI32 CALCULATES ALSO THE GLOBAL COORDINATES XGP, YGP AND
C             ZGP OF THE STRESS POINTS.
C     THE STRESSES ARE REFERRED TO THE GLOBAL CARTESIAN COORDINATE
C     SYSTEM, ACCORDING TO: SIGM=D(EPS-EPS0) WHERE EPS0 IS INITIAL
C     STRAIN, AND: EPS=B'*V
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 29.04.74 / 01      LAST UPDATING DATE:
C
C     REVISED BY: Knut Morten Okstad  21.05 2010
C                 Reinstated stress evaluation in Gauss points again.
C                 Evaluation at nodes is now performed if NSTRP=6.
C
C***********************************************************************
C
C   INPUT:
C
C     V     - THE DISPLACEMENTS U,V AND W IN THE 15 NODES OF THE
C             ELEMENT. STORED IN A ONE DIMENSIONAL ARRAY:(U1,V1,W1,
C             U2,V2,W2,------ U15,V15,W15). DIMENSION OF V IS 45.
C     EPS0I - INITIAL STRAIN IN THE THREE GLOBAL DIRECTIONS. E.G.:
C             (ALFAX*T,ALFAY*T,ALFAZ*T) FOR THE NODES. THE VALUE IN THE
C             MIDDLE NODES SHOULD BE THE MEAN VALUE OF THE TWO
C             NEIGHBOURING NODES. DIMENSION OF EPS0I IS 45.
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY OF THE
C     ZG    - ELEMENT. DIMENSION OF  XG,YG AND ZG IS 15.
C     YOUNG - YOUNGS MODULUS OF ELASTICITY.
C     RNY   - POISSONS RATIO.
C     NSTRP - NUMBER OF STRESS-POINTS IN THE TRIANGLE PLANE.
C             LEGAL VALUES ARE 1,3,4,6 AND 7. 6 means at nodal points.
C     NSTRPZ- NUMBER OF STRESS-POINTS IN THE ZETA DIRECTION.
C             LEGAL VALUES ARE 1,2 AND 3. 3 means at nodes when NSTRP=6.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT.  E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT- UNLESS ERROR.
C
C   OUTPUT:
C
C     SIG   - THE STRESSES COLUMNWISE FOR ALL THE STRESSPOINTS. THE
C             STRESSES ARE: SIGMX, SIGMY, SIGMZ, TAUXY,TAUXZ AND TAUYZ.
C             SIG HAS THE DIMENSION: (6,NSTRP*NSTRPZ)
C     XGP   -
C     YGP   - GLOBAL COORDINATES FOR THE STRESSPOINTS. XGP,YGP AND ZGP
C     ZGP   - HAS THE DIMENSION (NSTRP*NSTRPZ).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN ERROR
C             WAS DETECTED.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     SIG(6,21) ,    XGP(21)   ,    YGP(21)   ,
     1              ZGP(21)   ,    V(45)     ,    EPS0(3)   ,
     2              XG(15)    ,    YG(15)    ,    ZG(15)    ,
     3              B(3)      ,    RN(15)    ,
     4              JI(3,3)   ,    DNL1(15)  ,
     5              DNL2(15)  ,    DNZE(15)  ,    RL1(7)    ,
     6              RL2(7)    ,    RL3(7)    ,    ZE(3)     ,
     7              DB(15,6,3),    EPS0I(45)
C
      DOUBLE PRECISION  JI
C
      IERR=0
      MEK=15
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 CONTINUE
      WRITE(IW,6020)
      CALL MPRT30 (V,45,1,IW)
      IF (IOPE0) 22,22,21
   21 WRITE(IW,6040)
      CALL MPRT30 (EPS0I,45,1,IW)
   22 WRITE(IW,6060)
      DO 25 I1=1,MEK
      WRITE(IW,6080) I1,XG(I1),YG(I1),ZG(I1)
   25 CONTINUE
      WRITE(IW,6100) YOUNG,RNY
      WRITE(IW,6120) NSTRP
      WRITE(IW,6140) NSTRPZ
      IF (IERR)   630,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO  90 I=1,7
      RL1(I)=0.0
      RL2(I)=0.0
      RL3(I)=0.0
   90 CONTINUE
C
      DO 110 I=1,3
      ZE(I)=0.0
  110 CONTINUE
C
      NSTR=NSTRP*NSTRPZ
      DO 130 I=1,6
      DO 130 J=1,21
      SIG(I,J)=0.0
  130 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
      D2=D*(1.-2.*RNY)/(2.*(1.-RNY))
C
C     TEST IF THE VALUE OF NSTRP HAS ALLOWABLE VALUE. IF NOT-  *ERROR*
C
      IF (NSTRP-1) 170,150,150
  150 IF (NSTRP-7) 190,190,170
  170 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) NSTRP
      IF (IPSW-2)  20,550,550
  190 CONTINUE
C
C     SET THE AREA COORDINATES FOR THE STRESS POINTS IN THE  TRIANGLE
C     PLANE.
C
      GO TO (210,170,230,240,170,260,270),NSTRP
C
  210 CONTINUE
      RL1(1)=1./3.
      RL2(1)=1./3.
      RL3(1)=1./3.
      GOTO 280
  230 CONTINUE
      RL1(1)=.5
      RL2(1)=.5
      RL3(1)=.0
      RL1(2)=.0
      RL2(2)=.5
      RL3(2)=.5
      RL1(3)=.5
      RL2(3)=.0
      RL3(3)=.5
      GOTO 280
  240 CONTINUE
      RL1(1)=1./3.
      RL2(1)=1./3.
      RL3(1)=1./3.
      RL1(2)=.6
      RL2(2)=.2
      RL3(2)=.2
      RL1(3)=.2
      RL2(3)=.6
      RL3(3)=.2
      RL1(4)=.2
      RL2(4)=.2
      RL3(4)=.6
      GOTO 280
  260 CONTINUE
C     Nodal points
      RL1(1)=1.0
      RL1(2)=0.5
      RL2(2)=0.5
      RL2(3)=1.0
      RL2(4)=0.5
      RL3(4)=0.5
      RL3(5)=1.0
      RL1(6)=0.5
      RL3(6)=0.5
      GOTO 280
  270 CONTINUE
      ALFA1=.0597158717890
      BETA1=.4701420641055
      ALFA2=.7974269853530
      BETA2=.1012865073235
      RL1(1)=1./3.
      RL2(1)=1./3.
      RL3(1)=1./3.
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
C
C     TEST IF THE VALUE OF NSTRPZ HAS ALLOWABLE VALUE. IF NOT - ERROR
C
  280 IF (NSTRPZ-1) 310,290,290
  290 IF (NSTRPZ-3) 330,330,310
  310 IERR=-1
      WRITE (IW,6300)
      WRITE(IW,6320) IERR
      WRITE (IW,6360) NSTRPZ
      IF(IPSW-2)  20,550,550
  330 CONTINUE
C
C     SET THE ZETA-COORDINATES FOR THE STRESS POINTS.
C
      GO TO (400,370,390),NSTRPZ
C
  370 CONTINUE
      ZE(1)=-.577350269189626
      ZE(2)= .577350269189626
      GOTO 400
  390 CONTINUE
      ZE(1)=-.774596669241483
      ZE(3)= .774596669241483
      IF (NSTRP-6) 400,395,400
  395 CONTINUE
C     Nodal points
      ZE(1)=-1.0
      ZE(3)= 1.0
C
C
C     CALCULATE THE STRESS-MATRIX SIG(6,NSTR) FOR THE ELEMENT.
C
  400 CONTINUE
      N=0
      DO 530 L=1,NSTRPZ
      DO 510 K=1,NSTRP
C
C     CALCULATE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION FOR THIS
C     STRESS-POINT.
C
      CALL DN1531(DNL1,DNL2,DNZE,RL1(K),RL2(K),RL3(K),ZE(L))
C
C     CALCULATE THE GLOBAL COORDINATES FOR THE STRESS-POINT
C
      N=N+1
      IF (IOPXP) 402,402,401
  401 CALL XYZ15(XGP(N),YGP(N),ZGP(N),XG,YG,ZG,RL1(K),RL2(K),RL3(K),
     1           ZE(L),IEL,IW,IPSW)
C
C     COMPUTE THE JACOBIAN MATRIX, ITS  INVERSE AND ITS DETERMINANT
C     FOR THE POINT.
C
  402 CALL JACI31(JI,DETJ,DNL1,DNL2,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN IERR=-1
C
      IF (IERR) 410,430,430
  410 WRITE(IW,6300)
      IF (IPSW-2) 630,550,550
  430 CONTINUE
C
C
C     COMPUTE THE MATRICES B AND D*B   (B(3))
C
      DO 450 J=1,MEK
C
      B(1)=JI(1,1)*DNL1(J)+JI(1,2)*DNL2(J)+JI(1,3)*DNZE(J)
      B(2)=JI(2,1)*DNL1(J)+JI(2,2)*DNL2(J)+JI(2,3)*DNZE(J)
      B(3)=JI(3,1)*DNL1(J)+JI(3,2)*DNL2(J)+JI(3,3)*DNZE(J)
C
      DB(J,1,1)=D *B(1)
      DB(J,2,1)=D1*B(1)
      DB(J,3,1)=DB(J,2,1)
      DB(J,4,1)=D2*B(2)
      DB(J,5,1)=D2*B(3)
      DB(J,6,1)=0.0
      DB(J,1,2)=D1*B(2)
      DB(J,2,2)=D *B(2)
      DB(J,3,2)=DB(J,1,2)
      DB(J,4,2)=D2*B(1)
      DB(J,5,2)=0.0
      DB(J,6,2)=DB(J,5,1)
      DB(J,1,3)=D1*B(3)
      DB(J,2,3)=DB(J,1,3)
      DB(J,3,3)=D *B(3)
      DB(J,4,3)=0.0
      DB(J,5,3)=DB(J,4,2)
      DB(J,6,3)=DB(J,4,1)
  450 CONTINUE
C
C
C     CALCULATION OF THE STRESS MATRIX SIG(6,NSTRP*NSTRPZ)
C     SIGMA=(D*B')*V
C
      DO 490 I=1,MEK
      I1=(I-1)*3+1
      I2=I1+1
      I3=I2+1
C
      DO 470 J=1,6
C
      SIG(J,N)=SIG(J,N)+DB(I,J,1)*V(I1)+DB(I,J,2)*V(I2)+DB(I,J,3)*V(I3)
C
  470 CONTINUE
  490 CONTINUE
C
C     CALCULATE THE INITIAL STRAIN IN THE POINT.
C
      IF (IOPE0) 510,510,495
  495 CALL RN15(RN,RL1(K),RL2(K),RL3(K),ZE(L))
C
      DO 505 NN=1,3
      EPS0(I)=0.0
      DO 500 I=1,MEK
      EPS0(NN)=EPS0(NN)+RN(I)*EPS0I((I-1)*3+NN)
  500 CONTINUE
  505 CONTINUE
C
C     CALCULATE  SIGMA=SIGMA-D*EPS0  (TAKE INTO ACCOUNT INITIAL STRAIN)
C
      SIG(1,N)=SIG(1,N)-D *EPS0(1)-D1*EPS0(2)-D1*EPS0(3)
      SIG(2,N)=SIG(2,N)-D1*EPS0(1)-D *EPS0(2)-D1*EPS0(3)
      SIG(3,N)=SIG(3,N)-D1*EPS0(1)-D1*EPS0(2)-D *EPS0(3)
C
  510 CONTINUE
  530 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 700,550,550
  550 WRITE(IW,6500)
      CALL MPRT30(SIG,6,NSTR,IW)
      IF (IOPXP) 630,630,590
  590 WRITE(IW,6520)
      DO 600 I1=1,NSTR
      WRITE(IW,6080) I1,XGP(I1),YGP(I1),ZGP(I1)
  600 CONTINUE
  630 WRITE(IW,6540) IEL
 6000 FORMAT(////32H ENTERING IPRI32 FOR ELEMENT NO.,I7,2H :)
 6020 FORMAT(/5X,22HNODAL DISPLACEMENTS V:)
 6040 FORMAT(/5X,34HINITIAL STRAIN EPS0I IN THE NODES:)
 6060 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6080 FORMAT(I9,6X,1P3E12.4)
 6100 FORMAT(/5X,21HYOUNG'S MODULUS (E)= ,1PE10.4,5X,23HPOISSON'S NUMBER
     1 (RNY)= ,0PF5.3)
 6120 FORMAT(/5X,55HNUMBER OF STRESS POINTS IN THE TRIANGLE PLANE (NSTRP
     1)= ,I3,3X,28HLEGAL VALUES ARE 1,3,4 OR 7.)
 6140 FORMAT(/5X,56HNUMBER OF STRESS POINTS IN THE ZETA DIRECTION (NSTRP
     1Z)= ,I3,3X,26HLEGAL VALUES ARE 1,2 OR 3.)
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IPRI32 ***)
 6320 FORMAT(/17H     ERROR FLAG =,I3)
 6340 FORMAT(/5X,22HTHE VALUE OF NSTRP IS:,I4,39H   WHILE IT SHOULD HAVE
     1 BEEN 1,3,4 OR 7)
 6360 FORMAT(/5X,23HTHE VALUE OF NSTRPZ IS:,I4,37H   WHILE IT SHOULD HAV
     1E BEEN 1,2 OR 3)
C
 6500 FORMAT(/5X,83HTHE STRESS MATRIX (SIG(6,NSTRP*NSTRPZ)). (SIG(1)=SIG
     1XX, SIG(2)=SIGYY, SIG(3)=SIGZZ,/5X,44HSIG(4)=TAUXY, SIG(5)=TAUXZ,
     2 SIG(6)=TAUYZ.) :)
 6520 FORMAT( /,'     STRESS POINT COORDINATES:'
     1        /,'     POINT       XGP         YGP         ZGP')
 6540 FORMAT(/31H LEAVING IPRI32 FOR ELEMENT NO:,I7)
C
C
  700 CONTINUE
      RETURN
      END
      SUBROUTINE IPRI33(FE,XG,YG,ZG,GI,ISURF,IOPT,RO,NR,INTXI,INTZE,
     1                  INTT,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E NET  L I B R A R Y  SUBROUTINE :  IPRI33
C
C     IPRI33 CALCULATES THE NODAL FORCES (LOADS), FE, IN A 15 NODES
C     ISOPARAMETRIC TRIANGULAR PRISM DUE TO: 1. GIVEN NODAL ACCELE-
C     RATIONS IN THE GLOBAL DIRECTIONS. 2. GIVEN NODAL-PRESSURE IN
C     GLOBAL COMPONENT FROM. 3. GIVEN NODAL NORMAL-PRESSURE. POINT 2
C     AND 3 IS CALCULATED FOR ONE OR MORE OF THE PRISM'S 5 SURFACES,
C     DEPENDING ON THE CORRESPONDING VALUE OF ISURF (WITH DIMENSION :
C     ISURF(NO. OF LOADCASES)).
C     THE ROUTINE CALCULATES THE NODAL LOADS FOR NR LOADCASES (SEE THE
C     DIMENSION STATEMENTS).
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE RESULTANT NODAL
C     FORCES ARE REFERRED TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 07.11.74/01        LAST UPDATING DATE:
C***********************************************************************
C   INPUT:
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. DIMENSION
C     ZG    - OF XG,YG,ZG IS 15.
C     GI    - GIVEN NODAL ACCELERATIONS, -PRESSURE IN COMPONENT FROM
C             OR NORMAL PRESSURE, DEPENDANT ON IOPT BEEING 1,2 OR 3.
C             DIMENSION GI(45,NR). IN THE COLUMNS OF GI THE VALUES ARE
C             STORED NODEVISE.
C     ISURF - OPTION SPECIFYING THE SURFACES TO BE LOADED WHEN IOPT
C             EQUALS 2 OR 3 (SEE BELOW). DIMENSION ISURF(NR). THE
C             VALUES TO BE GIVEN WILL FOR INSTANCE BE 01001, WHICH
C             MEANS THAT SURFACE NO. 2 AND 5 HAVE LOADS IN THIS LOAD-
C             CASE.
C     IOPT  - OPTION SPECIFYING WHETHER THE ROUTINE IS TO CALCULATE:
C             1. VOLUME FORCES, 2. SURFACE FORCES FROM PRESSURE IN
C             COMPONENT FORM, 3. SURFACE FORCES FROM NORMAL PRESSURE.
C             THE VALUE BEEING 1,2 OR 3.
C     RO    - MASS PER UNIT VOLUME OF THE MATERIAL
C     NR    - NUMBER OF LOADCASES TO BE CALCULATED.
C     INTZE - NUMBER OF INTERGRATION POINTS IN THE ZE-DIRECTION
C     INTXI - NUMBER OF INTERGRATION POINTS IN THE DIRECTION
C             PERPENDICULAR TO THE ZE-DIRECTION IN THE FOUR-EDGED
C             SURFACES. LEGAL VALUES FOR INTXI AND INTZE ARE 1,2,3 AND
C             4  (ONLY 3 AND 4 FOR INTZE IF IOPT=1).
C     INTT  - NUMBER OF INTEGRATION POINTS IN THE TRIANGLE PLANE. LEGAL
C             VALUES ARE 1,3,4  AND 7 (ONLY 7 IF IOPT=1)
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FE    - NODAL ELEMENT FORCES (LOADS) IN THE GLOBAL DIRECTIONS.
C             THE FORCES ARE STORED NODEWISE. DIMENSION FE(45,NR)
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN ERROR
C             DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FE(45,NR) ,    GI(45,NR) ,    ISURF(NR) ,
     1              XG(15)    ,    YG(15)    ,    ZG(15)    ,
     2              RL1(7)    ,    RL2(7)    ,    RL3(7)    ,
     3              WK(7)     ,    XI(4)     ,    WTXI(4)   ,
     4              XV(4,4)   ,    WT(4,4)   ,
     5              RN(15)    ,    EM(1080)  ,    EML(45)   ,
     6              ISURFR(5) ,    EMR(15,15),    RNTN(8,8,5),
     7              RNTCN(24,8,5), IER(5,8)  ,    ZE(4)     ,
     8              WTZE(4)
C
      EQUIVALENCE(EM,EML,RNTN,RNTCN)
C
C     SET THE NODENUMBERS FOR THE 5 SURFACES.
C
      DATA((IER(I,J),J=1,8),I=1,5)/
     1                               3,  4,  5,  8,  9, 12, 13, 14,
     2                               1,  5,  6,  7,  9, 10, 14, 15,
     3                               1,  2,  3,  7,  8, 10, 11, 12,
     4                               1,  2,  3,  4,  5,  6,  0,  0,
     5                              10, 11, 12, 13, 14, 15,  0,  0/
C
C     SET CONSTANTS
C
      MEK=15
      NEK=3*MEK
      NDFL=NEK*NR
      IONE=1
      NDOF=3
      NSFNOD=8
      NSURF=5
C
      LUMP=0
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060)
      CALL MPRT30(GI,NEK,NR,IW)
      WRITE(IW,6080)
      WRITE(IW,6100) (I,ISURF(I),I=1,NR)
      WRITE(IW,6120) IOPT,RO,NR
      WRITE(IW,6140) INTXI,INTZE,INTT
      IF (IERR) 1150,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,4
      XI(I)  =0.0
      WTXI(I)=0.0
   70 CONTINUE
      DO 90 I=1,NEK
      DO 90 J=1,NR
      FE(I,J)=0.0
   90 CONTINUE
      DO 110 I=1,NSURF
      ISURFR(I)=0
  110 CONTINUE
      DO 130 I=1,4
      DO 130 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
  130 CONTINUE
      DO 150 I=1,MEK
      RN(I)=0.0
  150 CONTINUE
C
C     ABSCISSAES IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,1)=0.0
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)=+.339981043584856
      XV(4,4)=+.861136311594053
C
C     WEIGHT FACTORS FOR GAUSSIAN INTERGRATION
C
      WT(1,1)=2.0
C
      WT(1,2)=1.0
      WT(2,2)=1.0
C
      WT(1,3)= .555555555555556
      WT(2,3)= .888888888888888
      WT(3,3)= .555555555555555
C
      WT(1,4)= .347854845137454
      WT(2,4)= .652145154862546
      WT(3,4)= .652145154862546
      WT(4,4)= .347854845137454
C
C     CHOOSE ABSCISSAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUES
C     OF INTXI AND INTET.
C
      DO 170 I=1,4
      XI(I)  =XV(I,INTXI)
      ZE(I)  =XV(I,INTZE)
      WTXI(I)=WT(I,INTXI)
      WTZE(I)=WT(I,INTZE)
  170 CONTINUE
C
C     AREA COORDINATES AND WEIGHTS FOR NUMERICAL INTERGRATION IN THE
C     TRIANGLE PLANE. LINEAR, QUADRATIC, CUBIC AND QUINTIC INTERGRATION.
C
C     TEST IF THE VALUE OF INTT HAS ALLOWABLE VALUE. IF NOT-  *ERROR*
C
      IF (INTT-1) 250,270,190
  190 IF (INTT-3) 250,270,210
  210 IF (INTT-4) 250,270,230
  230 IF (INTT-7) 250,270,250
  250 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) INTT
      IF (IPSW-2) 20,1130,1130
  270 CONTINUE
C
      GO TO (290,250,310,330,250,250,350),INTT
C
  290 CONTINUE
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
C
      WK(1) =1.*.5
      GO TO 370
  310 RL1(1)=.5
      RL2(1)=.5
      RL3(1)=.0
      RL1(2)=.0
      RL2(2)=.5
      RL3(2)=.5
      RL1(3)=.5
      RL2(3)=.0
      RL3(3)=.5
C
      WK(1) =.3333333333333333*.5
      WK(2) =.3333333333333333*.5
      WK(3) =.3333333333333333*.5
      GO TO 370
  330 CONTINUE
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=.6
      RL2(2)=.2
      RL3(2)=.2
      RL1(3)=.2
      RL2(3)=.6
      RL3(3)=.2
      RL1(4)=.2
      RL2(4)=.2
      RL3(4)=.6
      WK(1) =-(27./48.)*.5
      WK(2) =  25./48. *.5
      WK(3) =  25./48. *.5
      WK(4) =  25./48. *.5
      GO TO 370
  350 CONTINUE
      ALFA1 =.0597158717890
      BETA1 =.4701420641055
      ALFA2 =.7974269853530
      BETA2 =.1012865073235
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
C
      WK(1) =.225*.5
      WK(2) =.132394152788*.5
      WK(3) =.132394152788*.5
      WK(4) =.132394152788*.5
      WK(5) =.125939180544*.5
      WK(6) =.125939180544*.5
      WK(7) =.125939180544*.5
  370 CONTINUE
C
C     TEST IF THE VALUE OF IOPT IS LEGAL. IF NOT-  *ERROR*
C
      IF (IOPT-1) 410,430,390
  390 IF (IOPT-3) 430,430,410
  410 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6360) IOPT
      IF (IPSW-2) 20,1130,1130
  430 CONTINUE
C
      GO TO (450,710,710),IOPT
C
C     CALCULATE THE LOADS FROM GIVEN ACCELERATIONS IF IOPT=1
C
  450 CONTINUE
C
C     CHECK THAT INTZE EQUALS 3 OR 4, INTT EQUALS 7 AND CALCULATE THE
C     MASS MATRIX.
C
      IF (INTZE-3) 510,490,470
  470 IF (INTZE-4) 510,490,510
  490 IF (INTT-7)  510,530,510
  510 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6380) INTZE,INTT
      IF (IPSW-2) 20,1130,1130
  530 CONTINUE
      CALL IPRI35(EM,EML,XG,YG,ZG,RO,INTZE,LUMP,IEL,IW,IPSW,IERR)
      IF(IERR)540,545,545
  540 WRITE(IW,6300)
      IF(IPSW-2)1150,1130,1130
  545 CONTINUE
C**** HERE THE MASS MATRIX MAY BE STORED ON FILE IF LATER DYNAMIC ANALYSIS *****
C
C     RESTORE THE CONSISTENT MASS MATRIX IN A 2-DIMENSIONAL ARRAY. THE
C     ARRAY SHOULD HAVE BEEN 45*45, BUT IT IS 15*15 SINCE THE DIAGONAL
C     TERMS IN THE 3*3 #NODE# SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL
C     TERMS IN THE 3*3 MATRIXES ARE ZERO.
C
      IPK=-8
C
      DO 570 I=1,MEK
      DO 550 J=I,MEK
C
      IPK=IPK+9
      EMR(I,J)=EM(IPK)
  550 CONTINUE
  570 CONTINUE
C
C     ADD IN THE SYMMETRICAL PART OF EMR.
C
      DO 610 I=2,MEK
      I1=I-1
      DO 590 J=1,I1
      EMR(I,J)=EMR(J,I)
  590 CONTINUE
  610 CONTINUE
C
C     LOADCASE LOOP
C
      DO 690 I=1,NR
C
C     MULTIPLY THE COMPRESSED MASS MATRIX WITH THE ACCELERATION VECTOR
C     NUMBER I.
C
      DO 670 J=1,MEK
      J1=(J-1)*3
      DO 650 K=1,NDOF
      K1=K+J1
      DO 630 L=1,MEK
      L1=(L-1)*3+K
      FE(K1,I)=FE(K1,I)-EMR(J,L)*GI(L1,I)
  630 CONTINUE
  650 CONTINUE
  670 CONTINUE
  690 CONTINUE
      GO TO 1110
C
C     CALCULATE THE LOADS FROM COMPONENT PRESSURE IF IOPT=2 OR FROM
C     NORMAL PRESSURE IF IOPT=3.
C
  710 CONTINUE
C
C     LOADCASE LOOP
C
      DO 1090 I=1,NR
      ISRC=ISURF(I)
C
C     SURFACE LOOP
C
      DO 1070 J=1,NSURF
C
C     TEST FOR THE VALUE OF THE I'TH DIGIT IN ISURF(I).
C
      J1=NSURF-J
      IEX=10**J1
      ISRF=ISRC/IEX
      IF (ISRF-1) 1070,730,1070
  730 ISRC=ISRC-IEX
      IT=ISRF-ISURFR(J)
      IF (IT) 810,810,750
C
C     IF THIS SURFACE HAS NOT BEEN LOADED BEFORE, CALCULATE THE INTEGRAL
C     OF NTN OR NTCN FOR THIS SURFACE.
C
  750 CALL NTN15(RNTN,RNTCN,XG,YG,ZG,IOPT,J,INTXI,INTZE,INTT,XI,ZE,RL1,
     1           RL2,RL3,WTXI,WTZE,WK,IER,IEL,IW,IPSW,IERR)
      IF (IERR) 770,790,790
  770 WRITE(IW,6300)
      IF (IPSW-2) 1150,1130,1130
  790 ISURFR(J)=1
  810 CONTINUE
C
C     SET THE NUMBER OF NODES FOR THE SURFACE (SURFACE NO J).
C
      GO TO (830,830,830,850,850),J
  830 NSFNOD=8
      GO TO 870
  850 NSFNOD=6
  870 IF (IOPT-2) 970,890,970
C
C     IF COMPONENT PRESSURE (IOPT=2), MULTIPLY THE CORRECT LOAD INTEN-
C     SITIES FOR THIS SURFACE WITH THE 8*8 MATRIX NTN(IT SHOULD HAVE
C     BEEN 24*24, BUT THE DIAGONAL TERMS IN THE 3*3 #NODE# SUBMATRIXES
C     ARE EQUAL AND THE OFF-DIAGONAL TERMS IN THE 3*3 MATRIXES ARE
C     ZERO). FOR THE TRIANGLE SURFACES (SURFACE NO. 4 AND 5) THE LAST
C     TWO LINES AND COLUMNS IN NTN ARE ZERO.
C
  890 CONTINUE
C
      DO 950 K=1,NSFNOD
      K1=IER(J,K)
      K2=(K1-1)*3
      DO 930 L=1,NDOF
      L1=K2+L
      DO 910 M=1,NSFNOD
      M1=IER(J,M)
      M2=(M1-1)*3
      L2=M2+L
      FE(L1,I)=FE(L1,I)+RNTN(K,M,J)*GI(L2,I)
  910 CONTINUE
  930 CONTINUE
  950 CONTINUE
      GO TO 1070
C
C     IF NORMAL PRESSURE (IOPT=3) MULTIPLY THE CORRECT LOAD-INTENSITIES
C     FOR THIS SURFACE WITH THE 24*8 MATRIX NTCN (IT SHOULD HAVE BEEN
C     24*24, BUT COLUMN NO. 2,3,5,6,8,9,11,12 ETC. ARE ZERO). FOR THE
C     TRIANGLE SURFACES (SURFACE NO. 4 AND 5) THE LAST 6 LINES AND 2
C     COLUMNS IN NTCN ARE ZERO.
C
  970 CONTINUE
C
      DO 1030 K=1,NSFNOD
      K1=IER(J,K)
      K2=(K1-1)*3
      K3=(K-1) *3
      DO 1010 L=1,NDOF
      L1=K2+L
      L2=K3+L
      DO  990 M=1,NSFNOD
      M1=(IER(J,M)-1)*3+1
      FE(L1,I)=FE(L1,I)+RNTCN(L2,M,J)*GI(M1,I)
  990 CONTINUE
 1010 CONTINUE
 1030 CONTINUE
C
C
C
 1070 CONTINUE
 1090 CONTINUE
C
 1110 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 1500,1130,1130
 1130 WRITE(IW,6500) IEL
      CALL MPRT30(FE,NEK,NR,IW)
 1150 WRITE(IW,6520) IEL
C
C
 1500 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IPRI33 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,90HTHE ACCELERATION- OR PRESSURE-VECTORS (GI) FOR THE
     1  DIFFERENT LOADCASES. STORED NODEWISE : )
 6080 FORMAT(/5X,64HTHE SURFACE SPECIFICATIONS (ISURF) FOR THE DIFFERENT
     1 LOADCASES :)
 6100 FORMAT(5X,I5,I12)
 6120 FORMAT(/5X,19HLOAD OPTION (IOPT)=,I4,3X,21HSPECIFIC MASS (RO)=  ,1
     1PE10.4,3X,25HNUMBER OF LOADCASES (NR)=,I5)
 6140 FORMAT(/5X,' NUMBER OF INTEGRATION POINTS IN THE XI-DIRECTION (IN'
     1'TXI)=',I3,3X,'IN THE ZETA-DIRECTION (INTZE)=',I3,
     2/5X,'HIN THE TRIANGLE PLANE (INTT)=',I3,3X,
     3'LEGAL VALUES FOR INTXI AND INTZE ARE 1,2,3 AND 4 (ONLY 3 AND 4 F'
     4'OR INTZE IF IOPT=1).',/5X,'LEGAL VALUES FOR INTT ARE 1,3,4 AND 7'
     5' (ONLY 7 IF IOPT=1).')
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IPRI33 ***)
 6320 FORMAT(/'     ERROR FLAG=',I3)
 6340 FORMAT(/10H     INTT=,I4,3X,34HWHILE LEGAL VALUES ARE 1,3,4 OR 7.)
 6360 FORMAT(/10H     IOPT=,I4,3X,32HWHILE LEGAL VALUES ARE 1,2 OR 3.)
 6380 FORMAT(/11H     INTZE=,I4,3X, 5HINTT=,I4,3X,60HLEGAL VALUES WHEN I
     1OPT=1 : FOR INTZE= 3 OR 4 AND FOR INTT=7.)
C
C
 6500 FORMAT(//,5X,96HTHE FORCE VECTOR (FE) FOR THE SPECIFIED LOADCASES
     1 DUE TO BODY OR SURFACE FORCES FOR ELEMENT NO :,I7)
 6520 FORMAT(/28H LEAVING IPRI33 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE IPRI34(FEPS0,XG,YG,ZG,YOUNG,RNY,EPS0I,INTZE,IEL,IW,IPSW
     1                 ,IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IPRI34
C
C     IPRI34 CALCULATES THE NODAL FORCES (LOADS), FEPS0, IN A 15 NODES
C     ISOPARAMETRIC TRIANGULAR PRISM DUE TO INITIAL STRAIN, FOR ONE
C     LOADCASE.
C     SINCE THE DISPLACEMENT FIELD IS DESCRIBED ALONG THE
C     EDGES WITH A SECOND DEGREE POLYNOMIAL, THE INITIAL STRAIN MUST
C     VARY LINEARLY; CONSEQUENTLY ARE THE VALUES IN THE MID-EDGE
C     NODES CALCULATED AS A LINEAR INTERPOLATION BETWEEN THE TWO
C     NABOURING CORNER NODES. THIS IS DONE IN THE ROUTINE.
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE FORCES ARE REFERRED
C     TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 23.08.74 / 01      LAST UPDATING DATE:
C***********************************************************************
C   INPUT
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 15.
C     YOUNG - YOUNG'S MODULUS OF ELASTICITY.
C     RNY   - POISSON'S RATIO
C     EPS0I - INITIAL STRAIN FOR EACH OF THE CORNER NODES IN THE THREE
C             GLOBAL DIRECTIONS. THE VALUES IN THE MID-EDGE NODES
C             ARE FOUND BY LINEAR INTERPOLATION IN THE PROGRAM.
C             DIMENSION OF EPS0I: DIM(3,15). VALUES GIVEN FOR THE MID-
C             EDGE NODES ARE OVERRULED IN THIS PROGRAM.
C     INTZE - NUMBER OF INTEGRATION POINTS IN THE ZETA DIRECTION. LEGAL
C             VALUES ARE 2,3 AND 4.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FEPS0 - NODAL FORCES IN THE GLOBAL DIRECTIONS. THE FORCES ARE
C             STORED NODEWISE. DIMENSION FEPS0(45).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FEPS0(45) ,    EPS0I(45) ,    B(3)      ,
     1              XG(15)    ,    YG(15)    ,    ZG(15)    ,
     2              DNL1(15)  ,    DNL2(15)  ,    DNZE(15)  ,
     3              RL1(7)    ,    RL2(7)    ,    RL3(7)    ,
     4              ZE(4)     ,    WK(7)     ,    WTZE(4)   ,
     5              XV(4,4)   ,    WT(4,4)   ,    BTD(3,3)  ,
     6              JI(3,3)   ,    RN(15)    ,
     7              EPS0(3)   ,    IER(27)
C
      DOUBLE PRECISION JI
C
C     SET THE RELATION BETWEEN INTERPOLATED NODENUMBERS AND THE
C     NABOURING NODE-NUMBERS. NUMBER OF NODES WHERE THE VALUES WILL BE
C     INTERPOLATED (THE MID-SIDE NODES) ARE 9.
C
      DATA (IER(I),I=1,27)/       2,   1,   3,   4,   3,   5,
     1                            6,   1,   5,   7,   1,  10,
     2                            8,   3,  12,   9,   5,  14,
     3                           11,  10,  12,  13,  12,  14,
     4                           15,  14,  10/
C
      MEK=15
      NEK=3*MEK
      IONE=1
      IDIM=3
      NOIV=27
C
      IERR=0
C
C     PRINT OF INPUT?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) YOUNG,RNY
      WRITE(IW,6080)
      CALL MPRT30(EPS0I,NEK,IONE,IW)
      WRITE(IW,6100) INTZE
      IF (IERR) 650,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,4
      ZE(I)  =0.0
      WTZE(I)=0.0
   70 CONTINUE
      DO 90 I=1,NEK
      FEPS0(I)=0.0
   90 CONTINUE
      DO 110 I=1,4
      DO 110 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
  110 CONTINUE
      DO 130 I=1,3
      B(I)   =0.0
  130 CONTINUE
      DO 150 I=1,3
      DO 150 J=1,3
      BTD(I,J)=0.0
  150 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX (WITHOUT SHEAR TERMS).
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION.
C
      WT(1,2)=1.0
      WT(2,2)=1.0
C
      WT(1,3)=.555555555555556
      WT(2,3)=.888888888888888
      WT(3,3)=.555555555555556
C
      WT(1,4)=.347854845137454
      WT(2,4)=.652145154862546
      WT(3,4)=.652145154862546
      WT(4,4)=.347854845137454
C
C     CHOOSE ABSCISSIAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUE
C     OF INTZE.
C
      DO 170 I=1,4
      ZE(I)  =XV(I,INTZE)
      WTZE(I)=WT(I,INTZE)
  170 CONTINUE
C
C     AREA COORDINATES FOR NUMERICAL INTERGRATION. QUINTIC INTEGRATION
C     IN THE TRIANGLE PLANE AFTER HAMMER ET AL.
C
      ALFA1 =.0597158717890
      BETA1 =.4701420641055
      ALFA2 =.7974269853530
      BETA2 =.1012865073235
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
C
C     WEIGHTS FOR QUINTIC INTEGRATION
C
      WK(1)=.225*.5
      WK(2)=.132394152788*.5
      WK(3)=.132394152788*.5
      WK(4)=.132394152788*.5
      WK(5)=.125939180544*.5
      WK(6)=.125939180544*.5
      WK(7)=.125939180544*.5
C
C     FIND THE VALUES OF THE INITIAL STRAIN IN THE MID-EDGE NODES BY
C     LINEAR INTERPOLATION.
C
C
      II=IER(I)
      JJ=IER(I+1)
      KK=IER(I+2)
      IP=(II-1)*3
      JP=(JJ-1)*3
      KP=(KK-1)*3
C
      DO 180 M=1,3
      IPP=IP+M
      JPP=JP+M
      KPP=KP+M
      EPS0I(IPP)=.5*(EPS0I(JPP)+EPS0I(KPP))
  180 CONTINUE
C
C     GAUSS QUADRATURE INTEGRATION IN ZETA-DIRECTION AND
C     INTEGRATION BY HAMMER ET AL. IN THE TRIANGLE PLANE. COMPUTING
C     THE NODAL FORCES DUE TO THE INITIAL STRAIN FOR ONE LOADCASE.
C
      DO 470 L=1,INTZE
      DO 450 K=1,7
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN1531(DNL1,DNL2,DNZE,RL1(K),RL2(K),RL3(K),ZE(L))
C
C     COMPUTE THE JACOBIAN MATRIX, IT'S INVERSE AND IT'S DETERMINANT.
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO FOR
C     THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1
C
      IF (IERR) 210,230,230
  210 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  230 CONTINUE
C
C     CALCULATE THE 15 TERMS OF THE SHAPE FUNCTION N IN THIS POINT.
C
      CALL RN15(RN,RL1(K),RL2(K),RL3(K),ZE(L))
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND THE JACOBIAN DETERMINANT.
C
      COF=WK(K)*WTZE(L)*DETJ
C
C     CALCULATE THE INITIAL STRAIN IN THE POINT.
C
      DO 240 I=1,3
      EPS0(I)=0.0
  240 CONTINUE
C
      DO 270 I=1,MEK
      II=(I-1)*3
      DO 250 N=1,3
      NI=II+N
      EPS0(N)=EPS0(N)+RN(I)*EPS0I(NI)
  250 CONTINUE
  270 CONTINUE
C
C     MULTIPLICATION OF THE INITIAL STRAIN WITH COF.
C
      EPS0(1)=EPS0(1)*COF
      EPS0(2)=EPS0(2)*COF
      EPS0(3)=EPS0(3)*COF
C
C     CALCULATE THE MATRIXES B AND BTD'.
C
      IPK=0
      DO 330 I=1,MEK
C
      B(1)=JI(1,1)*DNL1(I)+JI(1,2)*DNL2(I)+JI(1,3)*DNZE(I)
      B(2)=JI(2,1)*DNL1(I)+JI(2,2)*DNL2(I)+JI(2,3)*DNZE(I)
      B(3)=JI(3,1)*DNL1(I)+JI(3,2)*DNL2(I)+JI(3,3)*DNZE(I)
C
      BTD(1,1)=D *B(1)
      BTD(2,1)=D1*B(2)
      BTD(3,1)=D1*B(3)
C
      BTD(1,2)=D1*B(1)
      BTD(2,2)=D *B(2)
      BTD(3,2)=BTD(3,1)
C
      BTD(1,3)=BTD(1,2)
      BTD(2,3)=BTD(2,1)
      BTD(3,3)=D *B(3)
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT (K,L) AND
C     THIS NODE (I) TO THE FORCE VECTOR.
C
      DO 310 J=1,3
      IPK=IPK+1
      FEPS0(IPK)=FEPS0(IPK)+BTD(J,1)*EPS0(1)+BTD(J,2)*EPS0(2)+BTD(J,3)*
     1           EPS0(3)
  310 CONTINUE
C
  330 CONTINUE
C
  450 CONTINUE
  470 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 670,590,590
  590 CONTINUE
      WRITE(IW,6500)
      CALL MPRT30(EPS0I,NEK,IONE,IW)
      WRITE(IW,6520) IEL
      CALL MPRT30(FEPS0,NEK,IONE,IW)
  650 WRITE(IW,6540) IEL
C
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IPRI34 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,23HPOISSON'S RATIO
     1 (RNY)= ,0PF5.3)
 6080 FORMAT(/5X,48HTHE INITIAL STRAIN VECTOR BEFORE INTERPOLATION :)
 6100 FORMAT(/5X,59HNUMBER OF INTEGRATION POINTS IN THE ZETA-DIRECTION (
     1INTZE)=,I3,3X,26HLEGAL VALUES ARE 2,3 AND 4)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IPRI34 ***)
C
C
 6500 FORMAT(/5X,47HTHE INITIAL STRAIN VECTOR AFTER INTERPOLATION :)
 6520 FORMAT(//5X,62HTHE FORCE VECTOR (FEPS0) DUE TO INITIAL STRAIN FOR
     1 ELEMENT NO:,I7)
 6540 FORMAT(/28H LEAVING IPRI34 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE IPRI35(EM,EML,XG,YG,ZG,RO,INT,LUMP,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IPRI35
C
C
C     IPRI35 CALCULATES THE MASS MATRIX OF AN ISOPARAMETRIC TRIANGULAR
C     PRISM, WITH 15 NODES AND THREE DEGREES OF FREEDOM AT EACH NODE.
C     THE EDGES MAY BE STRAIGHT OR CURVED.
C     THE MASS-MATRIX REFERS TO THE GLOBAL CARTESIAN COORDINATE SYSTEM
C     AND MAY BE CONSISTENT OR LUMPED.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 08/07/74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     YG    - YG(I)=YI,ZG(I)=ZI. DIMENSION OF XG,YG,XG IS 15
C     ZG    -
C     RO    - MASS PER UNIT VOLUME OF THE MATERIAL
C     INT   - NUMBER OF INTEGRATION POINTS IN THE ZETA DIRECTION.
C             LEGAL VALUES 3 OR 4.
C     LUMP  - SWITCH. LUMP=0, THE PROGRAM CALCULATES A CONSISTENT
C             MASS MATRIX. LUMP=1, THE PROGRAM CALCULATES A LUMPED
C             MASS MATRIX.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C
C     EM    - UPPER HALF OF ELEMENT MASS MATRIX M. EM IS A ONE
C             DIMENSIONAL ARRAY WITH DIMENSION: EM(1080). THE MASS-
C             MATRIX CONSISTS OF 3X3 SUBMATRIXES. EACH SUBMATRIX IS
C             STORED COLUMNWISE AND THE SUBMATRIXES IS STORED LINE-
C             WISE.
C     EML   - THE DIAGONAL OF THE LUMPED MASS-MATRIX IF LUMP=1.
C             DIMENSION: EML(45)
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     EM(1080)  ,    DNL1(15)  ,    DNL2(15)  ,
     1              DNZE(15)  ,    JI(3,3)   ,
     2              XV(4,4)   ,    WT(4,4)   ,    ZE(4)     ,
     3              WTZE(4)   ,    RL1(7)    ,    RL2(7)    ,
     4              RL3(7)    ,    XG(15)    ,    YG(15)    ,
     5              ZG(15)    ,    RN(15)    ,    EML(45)   ,
     6              WK(7)     ,    BUFMD(15)
      DOUBLE PRECISION JI
      IERR=0
C!!!
      IPK=0
C!!!
      MEK=15
      NEK=45
      IONE=1
      IDIM=1080
      ZM =0.0
      ZMD=0.0
      EMIJ=0.0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 25 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   25 CONTINUE
      WRITE(IW,6060) RO
      WRITE(IW,6080) INT
      WRITE(IW,6100) LUMP
      IF (IERR) 650,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 50 I=1,4
      ZE(I)=0.0
      WTZE(I)=0.0
   50 CONTINUE
C
      DO 60 I=1,15
      BUFMD(I)=0.0
   60 CONTINUE
C
      DO 70 I=1,1080
      EM(I)=0.0
   70 CONTINUE
C
      DO 80 I=1,45
      EML(I)=0.0
   80 CONTINUE
C
      DO 90 I=1,4
      DO 90 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
   90 CONTINUE
C
C     ABSCISSAES IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)=+.339981043584856
      XV(4,4)=+.861136311594053
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION.
C
      WT(1,3)=.555555555555556
      WT(2,3)=.888888888888888
      WT(3,3)=.555555555555556
C
      WT(1,4)=.347854845137454
      WT(2,4)=.652145154862546
      WT(3,4)=.652145154862546
      WT(4,4)=.347854845137454
C
C     CHOOSE ABSCISSAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUE
C     OF INT.
C
      DO 130 I=1,4
      ZE(I)  =XV(I,INT)
      WTZE(I)=WT(I,INT)
  130 CONTINUE
C
C     AREA COORDINATES FOR NUMERICAL INTEGRATION. QUINTIC INTEGRATION
C     IN THE TRIANGLE PLANE AFTER HAMMER ET AL.
C
      ALFA1=.0597158717890
      BETA1=.4701420641055
      ALFA2=.7974269853530
      BETA2=.1012865073235
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
C
C     WEIGHTS FOR QUINTIC INTEGRATION
C
      WK(1)=.225*.5
      WK(2)=.132394152788*.5
      WK(3)=.132394152788*.5
      WK(4)=.132394152788*.5
      WK(5)=.125939180544*.5
      WK(6)=.125939180544*.5
      WK(7)=.125939180544*.5
C
C     GAUSS QUADRATURE INTEGRATION IN ZETA-DIRECTION AND
C     INTEGRATION BY HAMMER ET AL. IN THE TRIANGLE PLANE (L1 AND L2).
C     COMPUTING THE CONSISTENT OR LUMPED MASS MATRIX.
C
      DO 450 M=1,INT
      DO 430 L=1,7
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION
C
      CALL DN1531(DNL1,DNL2,DNZE,RL1(L),RL2(L),RL3(L),ZE(M))
C
C     CONPUTE THE JACOBIAN MATRIX, IT'S INVERSE AND IT'S DETERMINANT.
C     ONLY THE DETERMINANT IS USED IN THIS ROUTINE.
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1
C
      IF (IERR) 170,190,190
  170 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  190 CONTINUE
C
C     THE PRODUCT OF INTEGRATION WEIGHTS, THE DETERMINANT AND THE
C     MASS DENSITY.
C
      COF=WK(L)*WTZE(M)*DETJ*RO
C
C     CALCULATE THE 15 TERMS OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN15(RN,RL1(L),RL2(L),RL3(L),ZE(M))
C
C     CALCULATE THE UPPER TRIANGLE OF EM (ELEMENT MASS MATRIX) IF THIS
C     IS TO BE A CONSISTENT MASS MATRIX.
C
C
      IF (LUMP-1) 210,370,210
  210 CONTINUE
C!!!
      IPK = -8
C!!!
      DO 270 I=1,MEK
      DO 250 J=I,MEK
      IPK=IPK+9
C
C     PUT THE CONTRIBUTION FROM THIS NODE INTERSECTION (I,J) AND THIS
C     INTEGRATION POINT (L,M) INTO THE MASS MATRIX.
C
      EM(IPK)=EM(IPK)+COF*RN(I)*RN(J)
C
  250 CONTINUE
  270 CONTINUE
C
      GO TO 420
C
C     CALCULATE THE LUMPED MASS MATRIX IF LUMP=1
C
C     COMPUTE THE TOTAL SUM OF THE MASS AND THE SUM OF THE DIAGONAL.
C
  370 CONTINUE
      DO 410 I=1,MEK
      DO 390 J=I,MEK
C
      ZM=ZM+RN(I)*RN(J)*COF
C
  390 CONTINUE
C
      BUFMD(I)=BUFMD(I)+RN(I)*RN(I)*COF
C
  410 CONTINUE
C
  420 CONTINUE
C
  430 CONTINUE
  450 CONTINUE
C
      IF (LUMP-1) 530,475,530
  475 CONTINUE
      DO 480 I=1,MEK
      ZMD=ZMD+BUFMD(I)
  480 CONTINUE
C
C
C     FIND THE TOTAL MASS OF THE ELEMENT, NOT ONLY FOR THE SYMMETRIC
C     PART OF THE MATRIX.
C
      ZM=2.0*ZM-ZMD
C
C     CALCULATE THE SCALED DIAGONAL MATRIX OF M-LUMPED. ZM/ZMD IS THE
C     SCALING FACTOR.
C
      SF=ZM/ZMD
      ICL=0
C
      DO 510 I=1,MEK
C
      EMIJ=SF*BUFMD(I)
C
      DO 490 II=1,3
      ICL=ICL+1
      EML(ICL)=EMIJ
C
  490 CONTINUE
  510 CONTINUE
      GOTO 570
C
  530 CONTINUE
C
C     PUT IN THE EQUAL TERMS IN THE 3*3 #NODE# SUBMATRIXES OF EM (CONS.
C     ELEMENT MASS MATRIX).
C
      IPK=-8
C
      DO 560 I=1,MEK
      DO 550 J=I,MEK
      IPK=IPK+9
      IPM=IPK
C
      DO 540 II=1,2
      IPM=IPM+4
      EM(IPM)=EM(IPK)
C
  540 CONTINUE
C
  550 CONTINUE
  560 CONTINUE
C
C     PRINT OF OUTPUT?
C
  570 IF(IPSW-2)670,590,590
  590 CONTINUE
      WRITE(IW,6500) IEL
      IF (LUMP-1) 610,630,610
  610 CALL MPRT30(EM,IONE,IDIM,IW)
      GO TO 650
  630 CALL MPRT30(EML,IONE,NEK,IW)
  650 CONTINUE
      WRITE(IW,6520) IEL
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IPRI35 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,21HSPECIFIC MASS (RO)=  ,1PE10.4)
 6080 FORMAT(/5X,55HNUMBER OF INTEGRATION POINTS IN THE ZE-DIRECTION (IN
     1T)=,I3,3X,24HLEGAL VALUES ARE 3 AND 4)
 6100 FORMAT(/5X,19HTHE LUMP SWITCH IS:,I4)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IPRI35 ***)
C
C
 6500 FORMAT(//,5X,35HELEMENT MASS MATRIX FOR ELEMENT NO: ,I7)
 6520 FORMAT(/28H LEAVING IPRI35 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE IPRL34(FEPS0,XG,YG,ZG,YOUNG,RNY,EPS0I,NR,INTZE,IEL,IW,
     1                  IPSW,IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IPRI34
C
C     IPRL34 CALCULATES THE NODAL FORCES (LOADS), FEPS0, IN A 15 NODES
C     ISOPARAMETRIC TRIANGULAR PRISM DUE TO INITIAL STRAIN, FOR NR
C     LOADCASES (NR=NUMBER OF LOADCASES).
C     THIS ROUTINE SHOULD BE USED WHEN LARGE NUMBER OF LOADCASES WITH
C     LOAD FROM INITIAL STRAIN FOR THE ELEMENT. THE INITIAL COST AND
C     NEED OF SPACE FOR ARRAYS ARE LARGER THAN FOR IPRI34, BUT THE COST
C     PER ADDITIONAL LOADCASE IS SMALLER THAN FOR IPRI34.
C     SINCE THE DISPLACEMENT FIELD IS DESCRIBED ALONG THE
C     EDGES WITH A SECOND DEGREE POLYNOMIAL, THE INITIAL STRAIN MUST
C     VARY LINEARLY; CONSEQUENTLY ARE THE VALUES IN THE MID-EDGE
C     NODES CALCULATED AS A LINEAR INTERPOLATION BETWEEN THE TWO
C     NABOURING CORNER NODES. THIS IS DONE IN THE ROUTINE.
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE FORCES ARE REFERRED
C     TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 23.08.74 / 01      LAST UPDATING DATE:
C***********************************************************************
C   INPUT
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 15.
C     YOUNG - YOUNG'S MODULUS OF ELASTICITY.
C     RNY   - POISSON'S RATIO
C     EPS0I - INITIAL STRAIN FOR EACH OF THE CORNER NODES IN THE THREE
C             GLOBAL DIRECTIONS. THE VALUES IN THE MID-EDGE NODES
C             ARE FOUND BY LINEAR INTERPOLATION IN THE PROGRAM.
C             DIMENSION OF EPS0I: DIM(45,NR). VALUES GIVEN FOR THE MID-
C             EDGE NODES ARE OVERRULED IN THIS PROGRAM.
C     NR    - NUMBER OF LOADCASES TO BE CALCULATED IN THE ROUTINE.
C     INTZE - NUMBER OF INTEGRATION POINTS IN THE ZETA DIRECTION. LEGAL
C             VALUES ARE 2,3 AND 4.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FEPS0 - NODAL FORCES IN THE GLOBAL DIRECTIONS. THE FORCES ARE
C             STORED NODEWISE. DIMENSION FEPS0(45,NR).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FEPS0(45,NR),  EPS0I(45,NR),  B(3)      ,
     1              XG(15)    ,    YG(15)    ,    ZG(15)    ,
     2              DNL1(15)  ,    DNL2(15)  ,    DNZE(15)  ,
     3              RL1(7)    ,    RL2(7)    ,    RL3(7)    ,
     4              ZE(4)     ,    WK(7)     ,    WTZE(4)   ,
     5              XV(4,4)   ,    WT(4,4)   ,    BTD(3,3)  ,
     6              JI(3,3)   ,    RN(15)    ,
     7              IER(27)   ,    BTDN(45,45)
C
      DOUBLE PRECISION JI
C
C     SET THE RELATION BETWEEN INTERPOLATED NODENUMBERS AND THE
C     NABOURING NODE-NUMBERS. NUMBER OF NODES WHERE THE VALUES WILL BE
C     INTERPOLATED (THE MID-SIDE NODES) ARE 9.
C
      DATA (IER(I),I=1,27)/       2,   1,   3,   4,   3,   5,
     1                            6,   1,   5,   7,   1,  10,
     2                            8,   3,  12,   9,   5,  14,
     3                           11,  10,  12,  13,  12,  14,
     4                           15,  14,  10/
C
      MEK=15
      NEK=3*MEK
      NDFL=NEK*NR
      NEK2=NEK*NEK
      NOIV=27
C
      IERR=0
C
C     PRINT OF INPUT?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) YOUNG,RNY
      WRITE(IW,6080)
      CALL MPRT30(EPS0I,NEK,NR,IW)
      WRITE(IW,6090) NR
      WRITE(IW,6100) INTZE
      IF (IERR) 650,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,4
      ZE(I)  =0.0
      WTZE(I)=0.0
   70 CONTINUE
      DO 90 I=1,NEK
      DO 90 J=1,NR
      FEPS0(I,J)=0.0
   90 CONTINUE
      DO 110 I=1,16
  110 CONTINUE
      DO 130 I=1,3
      B(I)   =0.0
  130 CONTINUE
      DO 150 I=1,3
      DO 150 J=1,3
      BTD(I,J)=0.0
  150 CONTINUE
      DO 160 I=1,NEK
      DO 160 J=1,NEK
      BTDN(I,J)=0.0
  160 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX (WITHOUT SHEAR TERMS).
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION.
C
      WT(1,2)=1.0
      WT(2,2)=1.0
C
      WT(1,3)=.555555555555556
      WT(2,3)=.888888888888888
      WT(3,3)=.555555555555556
C
      WT(1,4)=.347854845137454
      WT(2,4)=.652145154862546
      WT(3,4)=.652145154862546
      WT(4,4)=.347854845137454
C
C     CHOOSE ABSCISSIAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUE
C     OF INTZE.
C
      DO 170 I=1,4
      ZE(I)  =XV(I,INTZE)
      WTZE(I)=WT(I,INTZE)
  170 CONTINUE
C
C     AREA COORDINATES FOR NUMERICAL INTERGRATION. QUINTIC INTEGRATION
C     IN THE TRIANGLE PLANE AFTER HAMMER ET AL.
C
      ALFA1 =.0597158717890
      BETA1 =.4701420641055
      ALFA2 =.7974269853530
      BETA2 =.1012865073235
      RL1(1)=.3333333333333333
      RL2(1)=.3333333333333333
      RL3(1)=.3333333333333333
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
C
C     WEIGHTS FOR QUINTIC INTEGRATION
C
      WK(1)=.225*.5
      WK(2)=.132394152788*.5
      WK(3)=.132394152788*.5
      WK(4)=.132394152788*.5
      WK(5)=.125939180544*.5
      WK(6)=.125939180544*.5
      WK(7)=.125939180544*.5
C
C     GAUSS QUADRATURE INTEGRATION IN ZETA-DIRECTION AND
C     INTEGRATION BY HAMMER ET AL. IN THE TRIANGLE PLANE. COMPUTING
C     THE MATRIX BTD'N
C
      DO 470 L=1,INTZE
      DO 450 K=1,7
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN1531(DNL1,DNL2,DNZE,RL1(K),RL2(K),RL3(K),ZE(L))
C
C     COMPUTE THE JACOBIAN MATRIX, IT'S INVERSE AND IT'S DETERMINANT.
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO FOR
C     THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1
C
      IF (IERR) 210,230,230
  210 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  230 CONTINUE
C
C     CALCULATE THE 15 TERMS OF THE SHAPE FUNCTION N IN THIS POINT.
C
      CALL RN15(RN,RL1(K),RL2(K),RL3(K),ZE(L))
C
C     THE PRODUCT OF INTERGRATION WEIGHTS AND THE JACOBIAN DETERMINANT.
C
      COF=WK(K)*WTZE(L)*DETJ
C
C     MULTIPLICATION OF THE INVERTED JACOBI MATRIX WITH COF.
C
      DO 270 N=1,3
      DO 250 M=1,3
      JI(M,N)=JI(M,N)*COF
  250 CONTINUE
  270 CONTINUE
C
C     CALCULATE THE MATRIXES B AND BTD'.
C
      DO 330 I=1,MEK
C
      B(1)=JI(1,1)*DNL1(I)+JI(1,2)*DNL2(I)+JI(1,3)*DNZE(I)
      B(2)=JI(2,1)*DNL1(I)+JI(2,2)*DNL2(I)+JI(2,3)*DNZE(I)
      B(3)=JI(3,1)*DNL1(I)+JI(3,2)*DNL2(I)+JI(3,3)*DNZE(I)
C
      BTD(1,1)=D *B(1)
      BTD(2,1)=D1*B(2)
      BTD(3,1)=D1*B(3)
C
      BTD(1,2)=D1*B(1)
      BTD(2,2)=D *B(2)
      BTD(3,2)=BTD(3,1)
C
      BTD(1,3)=BTD(1,2)
      BTD(2,3)=BTD(2,1)
      BTD(3,3)=D *B(3)
C
C     CALCULATE THE CONTRIBUTION TO THE MATRIX BTD'N FROM THIS
C     INTEGRATION POINT.
C
      IP=(I-1)*3
C
      DO 310 J=1,MEK
      JP=(J-1)*3
      DO 290 N=1,3
      JPP=JP+N
      DO 280 M=1,3
      IPP=IP+M
C
      BTDN(IPP,JPP)=BTDN(IPP,JPP)+BTD(M,N)*RN(J)
C
  280 CONTINUE
  290 CONTINUE
C
  310 CONTINUE
  330 CONTINUE
C
  450 CONTINUE
  470 CONTINUE
C
C     LOADCASE LOOP.
C
      DO 570 LN=1,NR
C
C     FIND THE VALUES OF THE INITIAL STRAIN IN THE MID-EDGE NODES BY
C     LINEAR INTERPOLATION.
C
C
      II=IER(I)
      JJ=IER(I+1)
      KK=IER(I+2)
      IP=(II-1)*3
      JP=(JJ-1)*3
      KP=(KK-1)*3
C
      DO 480 M=1,3
      IPP=IP+M
      JPP=JP+M
      KPP=KP+M
      EPS0I(IPP,LN)=.5*(EPS0I(JPP,LN)+EPS0I(KPP,LN))
  480 CONTINUE
C
C     CALCULATE THE FORCE VECTOR (FEPS0) FROM THIS LOADCASE DUE TO THE
C     INITIAL NODAL STRAIN VECTOR EPS0I NUMBER LN.
C
      DO 550 I=1,NEK
      DO 530 J=1,NEK
C
      FEPS0(I,LN)=FEPS0(I,LN)+BTDN(I,J)*EPS0I(J,LN)
C
  530 CONTINUE
  550 CONTINUE
C
  570 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 670,590,590
  590 CONTINUE
      WRITE(IW,6500)
      CALL MPRT30(EPS0I,NEK,NR,IW)
      WRITE(IW,6520) IEL
      CALL MPRT30(FEPS0,NEK,NR,IW)
  650 WRITE(IW,6540) IEL
C
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IPRL34 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,23HPOISSON'S RATIO
     1 (RNY)= ,0PF5.3)
 6080 FORMAT(/5X,59HTHE INITIAL STRAIN VECTOR(S) (EPS0I) BEFORE INTERPOL
     1ATION :)
 6090 FORMAT(/5X,25HNUMBER OF LOADCASES (NR)=,I5)
 6100 FORMAT(/5X,59HNUMBER OF INTEGRATION POINTS IN THE ZETA-DIRECTION (
     1INTZE)=,I3,3X,26HLEGAL VALUES ARE 2,3 AND 4)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IPRL34 ***)
C
C
 6500 FORMAT(/5X,58HTHE INITIAL STRAIN VECTOR(S) (EPS0I) AFTER INTERPOLA
     1TION :)
 6520 FORMAT(//5X,65HTHE FORCE VECTOR(S) (FEPSO) DUE TO INITIAL STRAIN F
     1OR ELEMENT NO:,I7)
 6540 FORMAT(/28H LEAVING IPRL34 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE NTN15(RNTN,RNTCN,XG,YG,ZG,IOPT,JS,INTXI,INTZE,INTT,XI,
     1                 ZE,RL1,RL2,RL3,WTXI,WTZE,WK,IER,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  NTN15
C
C     NTN15 CALCULATES THE INTEGRAL OF N TRANSPOSED MULTIPLIED WITH N
C     FOR ONE SPECIFIED SURFACE IN A 15 NODE ISOPARAMETRIC TRIANGULAR
C     PRISM. THE CHOICE OF SURFACE IS DEPENDANT ON THE VALUE OF JS. IF
C     IOPT=3, THEN THE PROGRAM WILL ASSUME THE PRESSURE TO BE NORMAL TO
C     THE SURFACE AND CONSEQUENTLY MULTIPLY THE TERMS IN NTN WITH THE
C     CORRESPONDING DIRECTION COSINES FOR THE SURFACE NORMAL. THIS MEANS
C     THAT THE INTEGRAL WILL BE STORED IN ARRAY RNTN IF IOPT=2 AND IN
C     RNTCN IF IOPT=3
C
C     FOR IOPT=2 (COMPONENT PRESSURE) THE INTEGRAL SHOULD HAVE BEEN
C     STORED IN ARRAY RNTN(24,24,NSURF), WHERE NSURF IS THE ELEMENT'S
C     NUMBER OF SURFACES, BUT SINCE THE DIAGONAL TERMS IN THE 3*3 #NODE#
C     SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL TERMS IN THE 3*3 MATRI-
C     XES ARE ZERO IT IS SUFFICIENT WITH THE DIMENSION RNTN(8,8,NSURF).
C
C     FOR IOPT=3 (NORMAL PRESSURE) THE INTEGRAL SHOULD HAVE BEEN STORED
C     IN AN ARRAY RNTCN(24,24,ISURF), BUT SINCE COLUMN NO. 2,3,5,6,8,9,
C     11,12 ETC. ARE ZERO, IT IS SUFFICIENT WHIT THE DIMENSION
C     RNTCN(24,8,NSURF).
C
C     IT IS ADVICEABLE TO EQUIVALENCE RNTN AND RNTCN OUTSIDE THIS PRO-
C     GRAM DUE TO THE THEIR SIZE AND EXCLUSIVENESS.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 13.11.74 / 01           LAST UPDATING DATE :
C***********************************************************************
C   INPUT:
C     XG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. DIMENSION
C     YG    - OF XG,YG,ZG IS 15.
C     ZG    -
C     IOPT  - OPTION. IOPT=2: THE ROUTINE CALCULATES THE INTEGRAL OVER
C             SURFACE NO. JS OF N TRANSPOSED MULTIPLIED WITH N (FOR
C             COMPONENT PRESSURE).
C             IOPT=3: THE ROUTINE CALCULATES THE INTEEGRAL OVER SURFACE
C             NO. JS OF N TRANSPOSED MULTIPLIED WITH THE DIRECTION
C             COSINES AND N (FOR NORMAL PRESSURE).
C     JS    - THE TRIANGULAR PRISM'S SURFACE NUMBER FOR WHICH THE
C             INTEGRAL IS TAKEN.
C     INTZE - NUMBER OF INTERGRATION POINTS IN THE ZETA-DIRECTION.
C     INTXI - NUMBER OF INTEGRATION POINTS IN THE DIRECTION
C             PERPENDICULAR TO THE ZETA-DIRECTION IN THE FOUR-EDGED
C             SURFACES. LEGAL VALUES FOR INTXI AND INTZE ARE 1,2,3 AND 4
C     INTT  - NUMBER OF INTEGRATION POINTS IN THE TRIANGLE PLANE. LEGAL
C             VALUES ARE 1,3,4 AND 7.
C     XI    - POINTS IN NORMALIZED COORDINATES WHERE THE NUMERIC
C     ZE    - INTEGRAL IS TO BE SAMPLED. DIMENSION: XI(4),ZE(4)
C     RL1   - POINTS IN AREA COORDINATES WHERE THE NUMERIC INTERGRAL
C     RL2   - OVER THE TRIANGULAR SURFACES IS TO BE SAMPLED.
C     RL3   -
C     WTXI  - WEIGHT FACTORS FOR THE NUMERIC GAUSS INTEGRATION.
C     WTZE  - DIMENSION WTXI(4),WTZE(4)
C     WK    - WEIGHT FAKTORS FOR INTEGRATION IN THE TRIANGLE SURFACES.
C     IER   - ARRAY WITH LOCAL ELEMENT NODE NUMBERS FOR EACH OF THE 5
C             SURFACES. DIMENSION IER(5,8). THE LAST TWO VALUES IN 4TH
C             AND 5TH LINE (NODES FROM TRIANGULAR SURFACES WITH 6 NODES
C             ) ARE ALWAYS ZERO.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<3: NO PRINT.
C
C   OUTPUT:
C     RNTN  - ARRAY WITH DIMENSION RNTN(8,8,NSURF). RNTN CONTAINS THE
C             INTEGRAL OVER SURFACE NO. JS OF N TRANSPOSED MULTIPLIED
C             WITH N, IF IOPT=2. THE INTEGRAL IS STORED IN PAGE (THE
C             THIRD DIMENSION) NO. JS OF RNTN
C     RNTCN - ARRAY WITH DIMENSION RNTCN(24,8,NSURF). RNTCN CONTAINS THE
C             INTEGRAL OVER SURFACE NO. JS OF N TRANSPOSED MULTIPLIED
C             WITH THE DIRECTION COSINES AND N, IF IOPT=3. THE INTEGRAL
C             IS STORED IN PAGE NO. JS OF RNTCN.
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN ERROR
C             DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     RNTN(8,8,5),   RNTCN(24,8,5), IER(5,8)  ,
     1              XG(15)    ,    YG(15)    ,    ZG(15)    ,
     2              XI(4)     ,    ZE(4)     ,    RL1(7)    ,
     3              RL2(7)    ,    RL3(7)    ,    WTXI(4)   ,
     4              WTZE(4)   ,    WK(7)     ,
     5              DNZE(15)  ,    DNL1(15)  ,    DNL2(15)  ,
     6              RN(15)    ,    V1(3)     ,    V2(3)     ,
     7              DCOSI(3)  ,    JA(3,3)   ,
     8              RK1(7)    ,    RK2(7)    ,    RK3(7)    ,
     9              RK4(7)    ,    WT1(7)    ,    WT2(7)
C
      DOUBLE PRECISION JA
C
C     SET CONSTANTS
C
      NSFNOD=8
      IONE=1
      NSURF=5
      MEK=15
      NINT=4
      NSFDOF=NSFNOD*3
      NINTT=7
C
      IERR=0
      NN=0
      MM=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-3) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) IOPT,JS
      WRITE(IW,6080) INTXI,INTZE,INTT
      WRITE(IW,6100)
      CALL MPRT30(XI,NINT,IONE,IW)
      CALL MPRT30(ZE,NINT,IONE,IW)
      WRITE(IW,6120)
      CALL MPRT30(RL1,NINTT,IONE,IW)
      CALL MPRT30(RL2,NINTT,IONE,IW)
      CALL MPRT30(RL3,NINTT,IONE,IW)
      WRITE(IW,6140)
      CALL MPRT30(WTXI,NINT,IONE,IW)
      CALL MPRT30(WTZE,NINT,IONE,IW)
      CALL MPRT30(WK,NINTT,IONE,IW)
      WRITE(IW,6160)
      WRITE(IW,6180) ((IER(I,J),J=1,NSFNOD),I=1,NSURF)
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      GOTO(1270,60,100),IOPT
   60 CONTINUE
      DO 90 I=1,NSFNOD
      DO 70 J=1,NSFNOD
      RNTN(I,J,JS)=0.0
   70 CONTINUE
   90 CONTINUE
      GOTO 150
  100 CONTINUE
C
      DO 130 I=1,NSFDOF
      DO 110 J=1,NSFNOD
      RNTCN(I,J,JS)=0.0
  110 CONTINUE
  130 CONTINUE
  150 CONTINUE
C
C     FIND OUT WHETHER JS (THE SURFACE NUMBER) IS ODD OR EVEN
C
      RJ=JS/2.
      JT=INT(RJ)
      RJ=RJ-JT
C
C     RJ HAS NOW THE VALUE 0.5 (JS IS ODD) OR 0.0 (JS IS EVEN).
C
C     SET THE VALUES FOR THE SPESIFIC SURFACE.
C
      GO TO (200,300,400,500,510),JS
C
C     SURFACE NO. 1 (L1=0)
C
  200 CONTINUE
      MM=2
      NN=3
      INT1=INTXI
      INT2=INTZE
      DO 230 I=1,4
      RK1(I)=0.0
      RK2(I)=.5*XI(I)+.5
      RK3(I)=1.-RK2(I)
      RK4(I)=ZE(I)
C
      WT1(I)=WTXI(I)*.5
      WT2(I)=WTZE(I)
  230 CONTINUE
      GO TO 570
C
C     SURFACE NO. 2 (L2=0)
C
  300 CONTINUE
      MM=3
      NN=1
      INT1=INTXI
      INT2=INTZE
      DO 330 I=1,4
      RK1(I)=.5*XI(I)+.5
      RK2(I)=0.0
      RK3(I)=1.-RK1(I)
      RK4(I)=ZE(I)
C
      WT1(I)=WTXI(I)*.5
      WT2(I)=WTZE(I)
  330 CONTINUE
      GO TO 570
C
C     SURFACE NO. 3 (L3=0)
C
  400 CONTINUE
C
C     CONSERNING THE SURFACE NORMAL, THIS SURFACE WILL HAVE SPECIAL
C     TREATMENT BELOW.
C
      INT1=INTXI
      INT2=INTZE
      DO 430 I=1,4
      RK1(I)=.5*XI(I)+.5
      RK2(I)=1.-RK1(I)
      RK3(I)=0.0
      RK4(I)=ZE(I)
C
      WT1(I)=WTXI(I)*.5
      WT2(I)=WTZE(I)
  430 CONTINUE
      GO TO 570
C
C     SURFACE NO. 4 AND 5 (ZE=- OR +1.)
C
  500 CONTINUE
      MM=1
      NN=2
      GO TO 530
  510 CONTINUE
      MM=2
      NN=1
  530 CONTINUE
      INT1=INTT
      INT2=1
      DO 550 I=1,7
      RK1(I)=RL1(I)
      RK2(I)=RL2(I)
      RK3(I)=RL3(I)
      RK4(I)=RJ*4.-1.
C
      WT1(I)=WK(I)
      WT2(I)=1.
  550 CONTINUE
      NSFNOD=6
  570 CONTINUE
C
C     GAUSSIAN INTEGRATION OVER THE QUADRILATERAL SURFACES OR DIFFERENT
C     NUMERIC INTEGRATIONS OVER THE TRIANGULAR SURFACES. THE INTEGRAL IS
C     CALCULATED FOR NTN OR NTCN DEPENDING ON THE VALUE OF IOPT (2 OR 3)
C     FOR THE SPECIFIED SURFACE.
C
      DO 970 L=1,INT2
      DO 950 K=1,INT1
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION.
C
      CALL DN1531(DNL1,DNL2,DNZE,RK1(K),RK2(K),RK3(K),RK4(L))
C
C     COMPUTE THE JACOBIAN MATRIX
C
      CALL JACO31(JA,DNL1,DNL2,DNZE,XG,YG,ZG,MEK)
C
C     CALCULATE THE RELATION BETWEEN DA (DIFFERENTIAL OF A (AREA)) AND
C     FOR INSTANCE DL1*DZETA (THE DIFFERENTIAL OF THE AREA COORDINATE
C     AND THE NORMALIZED COORDINATE IN THE SPECIFIED SURFACE). THIS
C     RELATION IS LATER CALLED THE MAP FACTOR.
C
C
C     SPECIAL TREATMENT FOR SURFACE NO. 3.
      IF (JS-3) 670,630,670
  630 CONTINUE
      DO 650 I=1,3
      V1(I)=JA(1,I)-JA(2,I)
      V2(I)=JA(3,I)
  650 CONTINUE
      GO TO 710
  670 CONTINUE
      DO 690 I=1,3
      V1(I)=JA(MM,I)
      V2(I)=JA(NN,I)
  690 CONTINUE
C
  710 CALL DADCOS(V1,V2,SVXV,DCOSI)
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND MAP FACTOR.
C
      COF=WT1(K)*WT2(L)*SVXV
C
C     CALCULATE THE VALUES OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN15(RN,RK1(K),RK2(K),RK3(K),RK4(L))
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT IN THE
C     SPECIFIED SURFACE OF NTN IF THE LOADS CONNECTED TO THIS
C     CALCULATION ARE COMPONENT PRESSURE (IOPT=2)
C
      IF (IOPT-2) 830,730,830
  730 CONTINUE
C
      DO 770 I=1,NSFNOD
      II=IER(JS,I)
      DO 750 J=I,NSFNOD
      JJ=IER(JS,J)
C
      RNTN(I,J,JS)=RNTN(I,J,JS)+COF*RN(II)*RN(JJ)
C
  750 CONTINUE
  770 CONTINUE
      GO TO 950
C
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT IN THE
C     SPECIFIED SURFACE OF NTCN IF LOADS CONNECTED TO THIS
C     CALCULATION ARE NORMAL PRESSURE (IOPT=3).
C
  830 CONTINUE
      DO 890 I=1,NSFNOD
      II=IER(JS,I)
      DO 870 J=I,NSFNOD
      JJ=IER(JS,J)
C
      RNTCNI=COF*RN(II)*RN(JJ)
C
C     MULTIPLY THE TERM WITH THE CORRESPONDING DIRECTION COSINE.
C
      DO 850 N=1,3
      NI=(I-1)*3+N
C
      RNTCN(NI,J,JS)=RNTCN(NI,J,JS)+RNTCNI*DCOSI(N)
C
  850 CONTINUE
  870 CONTINUE
  890 CONTINUE
C
  950 CONTINUE
  970 CONTINUE
C
      IF (IOPT-2) 1050,990,1050
C
C     IF IOPT=2, ADD IN THE SYMMETRIC PART OF RNTN
C
  990 CONTINUE
      DO 1030 I=2,NSFNOD
      I1=I-1
      DO 1010 J=1,I1
      RNTN(I,J,JS)=RNTN(J,I,JS)
 1010 CONTINUE
 1030 CONTINUE
      GO TO 1130
C
C     IF IOPT=3, ADD IN THE SYMMETRIC PART OF RNTCN.
C
 1050 CONTINUE
      DO 1110 I=2,NSFNOD
      I1=I-1
      I2=(I-1)*3
      DO 1090 J=1,I1
      J2=(J-1)*3
      DO 1070 N=1,3
      NI=I2+N
      NJ=J2+N
C
      RNTCN(NI,J,JS)=RNTCN(NJ,I,JS)
C
 1070 CONTINUE
 1090 CONTINUE
 1110 CONTINUE
C
 1130 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-3) 1270,1150,1150
 1150 CONTINUE
      WRITE(IW,6500) JS,IEL
      IF (IOPT-2) 1210,1170,1210
 1170 CONTINUE
      DO 1190 I=1,NSFNOD
      WRITE(IW,6520) (RNTN(I,J,JS),J=1,NSFNOD)
 1190 CONTINUE
      GO TO 1250
 1210 DO 1230 I=1,NSFDOF
      WRITE(IW,6520) (RNTCN(I,J,JS),J=1,NSFNOD)
 1230 CONTINUE
 1250 WRITE(IW,6540) IEL,JS
C
C
 1270 CONTINUE
C
C
 6000 FORMAT(///28H ENTERING NTN15 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,' PRESSURE OPTION (COMPONENT (2) OR NORMAL (3)) (IOPT)'
     1'=',I4,3X,'SURFACE NO (JS)=',I4)
 6080 FORMAT(/5X,' NUMBER OF INTEGRATION POINTS IN THE XI (DIRECTION NO'
     1'RMAL TO THE ZETA DIRECTION IN THE QUADRILATERAL',/5X,' SURFACES)'
     2' AND ZETA DIRECTION, AND IN THE TRIANGLE PLANE. (INTXI)=',I4,3X,
     3' (INTZE)=',I4,3X,' (INTT)=',I4)
 6100 FORMAT(/5X,89HCOORDINATES FOR THE INTEGRATION POINTS IN THE QUADRI
     1LATERAL SURFACES. XI AND ZETA VALUES:)
 6120 FORMAT(/5X,80HAREA COORDINATES L1,L2 AND L3 FOR THE INTEGRATION PO
     1INTS IN THE TRIANGLE PLANES:)
 6140 FORMAT(/5X,64HWEIGHTS FOR THE DIFFERENT INTEGRATION POINTS. WTXI,
     1 WTZE AND WK:)
 6160 FORMAT(/5X,87HTHE ARRAY (IER) CONTAINING THE LOCAL NODES CONNECTED
     1TO EACH OF THE ELEMENT'S SURFACES :)
 6180 FORMAT(5X,8I8)
C
 6500 FORMAT(//5X,14HPAGE NO. (JS):,I3,3X,49HOF THE ARRAY RNTN OR RNTCN
     1FOR ELEMENT NO. (IEL):,I7)
 6520 FORMAT(5X,1P6E12.4)
 6540 FORMAT(//,30H LEAVING NTN15 FOR ELEMENT NO:,I7,3X,11HSURFACE NO:,
     1I4)
C
      RETURN
      END
      SUBROUTINE RN15(RN,RL1,RL2,RL3,ZE)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  RN15
C
C
C     RN15 CALCULATES THE 15 TERMS IN THE SHAPE FUNCTION FOR A GIVEN
C     POINT IN THE L1,L2,L3 AND ZETA COORDINATE SYSTEM WITHIN A
C     FIFTEEN NODES ISOPARAMETRIC TRIANGULAR PRISM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 04.07.74 / 01      LAST UPDATING DATE :
C
C***********************************************************************
C
C   INPUT:
C
C     L1    -
C     L2    - TRIANGULAR AREA COORDINATES FOR THE POINT IN THE PRISM.
C     L3    -
C     ZE    - COORDINATE IN THE ZETA-DIRECTION FOR THE POINT IN THE
C             PRISM.
C
C   OUTPUT:
C
C     RN    - AN ARRAY CONTAINING THE 15 TERMS OF THE SHAPE FUNCTION
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     RN(15)
C
C
C
C     CALCULATE THE VALUE OF THE SHAPE FUNCTION IN THE POINT.
C
      RL1RL1=RL1*RL1
      RL2RL2=RL2*RL2
      RL3RL3=RL3*RL3
      ZEZE=ZE*ZE
      RN( 1)=-RL1+.5*ZE*RL1+.5*ZEZE*RL1+RL1RL1-ZE*RL1RL1
      RN( 3)=-RL2+.5*ZE*RL2+.5*ZEZE*RL2+RL2RL2-ZE*RL2RL2
      RN( 5)=-RL3+.5*ZE*RL3+.5*ZEZE*RL3+RL3RL3-ZE*RL3RL3
      RN(10)=-RL1-.5*ZE*RL1+.5*ZEZE*RL1+RL1RL1+ZE*RL1RL1
      RN(12)=-RL2-.5*ZE*RL2+.5*ZEZE*RL2+RL2RL2+ZE*RL2RL2
      RN(14)=-RL3-.5*ZE*RL3+.5*ZEZE*RL3+RL3RL3+ZE*RL3RL3
      RN( 2)=2.*(1.-ZE)*RL1*RL2
      RN( 4)=2.*(1.-ZE)*RL2*RL3
      RN( 6)=2.*(1.-ZE)*RL3*RL1
      RN(11)=2.*(1.+ZE)*RL1*RL2
      RN(13)=2.*(1.+ZE)*RL2*RL3
      RN(15)=2.*(1.+ZE)*RL3*RL1
      RN( 7)=(1.-ZEZE)*RL1
      RN( 8)=(1.-ZEZE)*RL2
      RN( 9)=(1.-ZEZE)*RL3
C
C
      RETURN
      END
      SUBROUTINE XYZ15(X,Y,Z,XG,YG,ZG,RL1,RL2,RL3,ZE,IEL,IW,IPSW)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  XYZ15
C
C
C     XYZ15 CALCULATES THE GLOBAL COORDINATES FOR POINTS IN AN ISO-
C     PARAMETRIC TRIANGULAR PRISM WITH 15 NODES.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 07.05.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY OF THE
C     ZG    - ELEMENT. DIMENSION OF XG,YG AND ZG IS 15.
C     RL1   -
C     RL2   - TRIANGULAR AREA COORDINATES FOR THE POINT IN THE TRIAN-
C     RL3   - GULAR PRISM.
C     ZE    - NORMALIZED COORDINATE FOR THE POINT IN THE TRIANGULAR
C             PRISM.
C
C   OUTPUT:
C
C     X     -
C     Y     - GLOBAL COORDINATES FOR THE POINT IN THE PRISN.
C     Z     -
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     XG(15)    ,    YG(15)    ,    ZG(15)    ,    RN(15)
C
      MEK=15
C
C     PRINT OF INPUT?
C
      IF (IPSW-3) 30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 20 I1=1,MEK
      WRITE(IW,6040) I1,XG(I1),YG(I1),ZG(I1)
   20 CONTINUE
      WRITE(IW,6060)RL1,RL2,RL3
      WRITE(IW,6080)ZE
   30 CONTINUE
C
C     CALCULATE THE VALUE OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN15(RN,RL1,RL2,RL3,ZE)
C
C     NULLIFY X,Y AND Z
C
      X=0.0
      Y=0.0
      Z=0.0
C
C     CALCULATE THE X,Y AND Z- COORDINATES IN THE POINT.
C
      DO 70 I=1,MEK
      X=X+RN(I)*XG(I)
      Y=Y+RN(I)*YG(I)
      Z=Z+RN(I)*ZG(I)
   70 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-3) 110,90,90
   90 WRITE(IW,6120)X,Y,Z
      WRITE(IW,6140)IEL
  110 CONTINUE
 6000 FORMAT(///31H ENTERING XYZ15 FOR ELEMENT NO:,I7)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,33HTRIANGULAR AREA COORDINATES: RL1=,F7.4,3X,4HRL2=,
     1     F7.4,3X,4HRL3=,F7.4)
 6080 FORMAT(/5X,20HZETA COORDINATE: ZE=,F7.4)
 6120 FORMAT(/5X,40HTHE GLOBAL COORDINATES IN THE POINT:  X=,1PE12.5,3X,
     1     2HY=,1PE12.5,3X,2HZ=,1PE12.5)
 6140 FORMAT(/30H LEAVING XYZ15 FOR ELEMENT NO:,I7)
C
      RETURN
      END
      SUBROUTINE DN1531(DNL1,DNL2,DNZE,RL1,RL2,RL3,ZE)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  DN1531
C
C     DN1531 CALCULATES THE PARTIAL DERIVATIES OF THE SHAPE FUNCTION
C     WITH RESPECT TO L1,L2,AND ZETA, FOR A POINT WITHIN A 15 NODES
C     ISOPARAMETRIC TRIANGULAR PRISM ELEMENT.
C
C     PROGRAMMED BY: H.F.KLEM
C
C     DATE/VERSION : 21.1.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     RL1   - TRIANGULAR AREA COORDINATES FOR THE POINT WHERE THE
C     RL2   - DERIVATIES OF THE SHAPE FUNCTION IS TAKEN.
C     RL3   -
C     ZE    - COORDINATE IN THE ZETA DIRECTION FOR THE POINT WHERE THE
C             DERIVATIES OF THE SHAPE FUNCTION IS TAKEN.
C
C
C   OUTPUT:
C
C     DNL1  - THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L1
C     DNL2  - THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L2
C     DNZE  - THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO ZE.
C             ALL DERIVATIVES IS TAKEN IN THE POINT SPECIFIED ABOVE.
C             DIMENSIONS FOR DNL1,DNL2,DNZE IS (15).
C
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     DNL1(15)  ,    DNL2(15)  ,    DNZE(15)
C
      RL1RL1=RL1*RL1
      RL1RL2=RL1*RL2
      RL1RL3=RL1*RL3
      RL1ZE=RL1*ZE
      RL2RL2=RL2*RL2
      RL2RL3=RL2*RL3
      RL2ZE =RL2*ZE
      RL3RL3=RL3*RL3
      RL3ZE=RL3*ZE
      ZEZE  =ZE*ZE
C
C     CALCULATE THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L1
C
      DNL1(1) =-1.+0.5*ZE+0.5*ZEZE+2.*RL1-2.*RL1ZE
      DNL1(2) =2.*RL2-2.*RL2ZE
      DNL1(3) =0.
      DNL1(4) =-2.*RL2+2.*RL2ZE
      DNL1(5) =1.-0.5*ZE-0.5*ZEZE-2.*RL3+2.*RL3ZE
      DNL1(6) =2.*(1.-ZE)*(RL3-RL1)
      DNL1(7) =1.-ZEZE
      DNL1(8) =0.
      DNL1(9) =-1.+ZEZE
      DNL1(10)=-1.-0.5*ZE+0.5*ZEZE+2.*RL1+2.*RL1ZE
      DNL1(11)=2.*RL2+2.*RL2ZE
      DNL1(12)=0.
      DNL1(13)=-2.*RL2-2.*RL2ZE
      DNL1(14)=1.+0.5*ZE-0.5*ZEZE-2.*RL3-2.*RL3ZE
      DNL1(15)=2.*(1.+ZE)*(RL3-RL1)
C
C     CALCULATE THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L2
C
      DNL2(1) =0.
      DNL2(2) =2.*RL1-2.*RL1ZE
      DNL2(3) =-1.+0.5*ZE+0.5*ZEZE+2.*RL2-2.*RL2ZE
      DNL2(4) =2.*(RL3-RL2)*(1.-ZE)
      DNL2(5) =1.-0.5*ZE-0.5*ZEZE-2.*RL3+2.*RL3ZE
      DNL2(6) =-2.*RL1+2.*RL1ZE
      DNL2(7) =0.
      DNL2(8) =1.-ZEZE
      DNL2(9) =-1.+ZEZE
      DNL2(10)=0.
      DNL2(11)=2.*RL1+2.*RL1ZE
      DNL2(12)=-1.-0.5*ZE+0.5*ZEZE+2.*RL2+2.*RL2ZE
      DNL2(13)=2.*(RL3-RL2)*(1.+ZE)
      DNL2(14)=1.+0.5*ZE-0.5*ZEZE-2.*RL3-2.*RL3ZE
      DNL2(15)=-2.*RL1-2.*RL1ZE
C
C     CALCULATE THE DERIVATIVES OF THE SHAPE FUNCTION WITH RESPECT TO ZE
C
      DNZE(1) =0.5*RL1+RL1ZE-RL1RL1
      DNZE(2) =-2.*RL1RL2
      DNZE(3) =0.5*RL2+RL2ZE-RL2RL2
      DNZE(4) =-2.*RL2RL3
      DNZE(5) =0.5*RL3+RL3ZE-RL3RL3
      DNZE(6) =-2.*RL1RL3
      DNZE(7) =-2.*RL1ZE
      DNZE(8) =-2.*RL2ZE
      DNZE(9) =-2.*RL3ZE
      DNZE(10)=-0.5*RL1+RL1ZE+RL1RL1
      DNZE(11)=2.*RL1RL2
      DNZE(12)=-0.5*RL2+RL2ZE+RL2RL2
      DNZE(13)=2.*RL2RL3
      DNZE(14)=-0.5*RL3+RL3ZE+RL3RL3
      DNZE(15)=2.*RL1RL3
C
      RETURN
      END
