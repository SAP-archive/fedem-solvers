C     SPDX-FileCopyrightText: 2023 SAP SE
C
C     SPDX-License-Identifier: Apache-2.0
C
C     This file is part of FEDEM - https://openfedem.org
C
      SUBROUTINE DN1031(DNL1,DNL2,DNL3,RL1,RL2,RL3,RL4)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L B R A R Y  SUBROUTINE :  DN1031
C
C     DN1031 CALCULATES THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION
C     WITH RESPECT TO L1,L2 AND L3, FOR A POINT WITHIN A 10 NODES ISO-
C     PARAMETRIC TETRAHEDRA ELEMENT.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 17.4.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     RL1   - VOLUME COORDINATES FOR THE POINT WHERE THE DERIVATIVES
C     RL2   - OF THE SHAPE FUNCTION IS CALCULATED. (RL4=1-RL1-RL2-RL3)
C     RL3   -
C     RL4   -
C
C   OUTPUT:
C
C     DNL1  - THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L1
C     DNL2  - THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L2
C     DNL3  - THE DERIVATIVE OF THE SHAPE FUNCTION WITH RESPECT TO L3
C             ALL DERIVATIVES IS TAKEN IN THE POINT SPECIFIED ABOVE.
C             DIMENSIONS FOR DNL1,DNL2,DNL3 IS (10).
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     DNL1(10)  ,    DNL2(10)  ,    DNL3(10)
C
C
C
C
C     CALCULATE THE DERIVATIVES OF THE SHAPE FUNCTION WITH RESPECT TO L1
C
      DNL1(1) =4.*RL1-1.
      DNL1(2) =4.*RL2
      DNL1(3) =0.
      DNL1(4) =0.
      DNL1(5) =0.
      DNL1(6) =4.*RL3
      DNL1(7) =4.*(RL4-RL1)
      DNL1(8) =-4.*RL2
      DNL1(9) =-4.*RL3
      DNL1(10)=-4.*RL4+1.
C
C     CALCULATE THE DERIVATIVES OF THE SHAPE FUNCTION WITH RESPECT TO L2
C
      DNL2(1) =0.
      DNL2(2) =4.*RL1
      DNL2(3) =4.*RL2-1.
      DNL2(4) =4.*RL3
      DNL2(5) =0.
      DNL2(6) =0.
      DNL2(7) =-4.*RL1
      DNL2(8) =4.*(RL4-RL2)
      DNL2(9) =-4.*RL3
      DNL2(10)=-4.*RL4+1.
C
C     CALCULATE THE DERIVATIVES OF THE SHAPE FUNCTION WITH RESPECT TO L3
C
      DNL3(1) =0.
      DNL3(2) =0.
      DNL3(3) =0.
      DNL3(4) =4.*RL2
      DNL3(5) =4.*RL3-1.
      DNL3(6) =4.*RL1
      DNL3(7) =-4.*RL1
      DNL3(8) =-4.*RL2
      DNL3(9) =4.*RL4-4.*RL3
      DNL3(10)=-4.*RL4+1.
C
      RETURN
      END
      SUBROUTINE ITEL34(FEPS0,XG,YG,ZG,YOUNG,RNY,EPS0I,NR,INT,IEL,IW,
     1                  IPSW,IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  ITET34
C
C     ITEL34 CALCULATES THE NODAL FORCES (LOADS), FEPS0, IN A 10 NODES
C     ISOPARAMETRIC TETRAHEDRON DUE TO INITIAL STRAIN, FOR ONE LODCASE.
C     LOADCASES (NR=NUMBER OF LOADCASES).
C     THIS ROUTINE SHOULD BE USED WHEN LARGE NUMBER OF LOADCASES WITH
C     LOAD FROM INITIAL STRAIN FOR THE ELEMENT. THE INITIAL COST AND
C     NEED OF SPACE FOR ARRAYS ARE LARGER THAN FOR ITET34, BUT THE COST
C     PER ADDITIONAL LOADCASE IS SMALLER THAN FOR ITET34.
C     SINCE THE DISPLACEMENT FIELD IS DESCRIBED ALONG THE
C     EDGES WITH A SECOND DEGREE POLYNOMIAL, THE INITIAL STRAIN MUST
C     VARY LINEARLY; CONSEQUENTLY ARE THE VALUES IN THE MID-EDGE
C     NODES CALCULATED AS A LINEAR INTERPOLATION BETWEEN THE TWO
C     NABOURING CORNER NODES. THIS IS DONE IN THE ROUTINE.
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE FORCES ARE REFERRED
C     TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 26.08.74
C***********************************************************************
C   INPUT:
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI,ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 10.
C     YOUNG - YOUNG'S MODULUS OF ELASTICITY.
C     RNY   - POISSON'S RATIO.
C     EPS0I - INITIAL STRAIN FOR EACH OF THE CORNER NODES IN THE THREE
C             GLOBAL DIRECTIONS. THE VALUES IN THE MID EDGE NODES ARE
C             FOUND BY LINEAR INTERPOLATION IN THE PROGRAM.
C             DIMENSION OF EPS0I: EPS0I(30,NR). VALUES GIVEN FOR THE
C             MID-EDGE NODES ARE OVERRULED IN THIS PROGRAM.
C     NR    - NUMBER OF LOADCASES TO BE CALCULATED IN THE ROUTINE.
C     INT   - NUMBER OF INTEGRATION POINTS IN THE TETRAHEDRON. LEGAL
C             VALUES ARE 1,4 AND 5.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NO.)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FEPS0 - NODAL FORCES IN THE GLOBAL DIRECTIONS. THE FORCES ARE
C             STORED NODEWISE. DIMENSION FEPS0(30,NR).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FEPS0(30,NR),  EPS0I(30,NR),  B(3)      ,
     1              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     2              DNL1(10)  ,    DNL2(10)  ,    DNL3(10)  ,
     3              RL1(5)    ,    RL2(5)    ,    RL3(5)    ,
     4              RL4(5)    ,    WT(5)     ,    RN(10)    ,
     5              JI(3,3)   ,
     6              BTD(3,3)  ,    IER(18)   ,    BTDN(30,30)
      DOUBLE PRECISION JI
C
C     SET THE RELATION BETWEEN INTERPOLATED NODENUMBERS AND THE
C     NABOURING NODE-NUMBERS. NUMBER OF NODES WHERE THE VALUES WILL BE
C     INTERPOLATED (THE MID-SIDE NODES) ARE 6.
C
      DATA (IER(I),I=1,18)/       2,   1,   3,   4,   3,   5,
     1                            6,   1,   5,   7,   1,  10,
     2                            8,   3,  10,   9,   5,  10/
C
      MEK=10
      NEK=3*MEK
      NDFL=NEK*NR
      NEK2=NEK*NEK
      NOIV=18
C
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) YOUNG,RNY
      WRITE(IW,6080)
      CALL MPRT30(EPS0I,NEK,NR,IW)
      WRITE(IW,6090) NR
      WRITE(IW,6100) INT
      IF (IERR) 750,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,5
      RL1(I)=0.0
      RL2(I)=0.0
      RL3(I)=0.0
      RL4(I)=0.0
      WT(I) =0.0
   70 CONTINUE
      DO 90 I=1,NEK
      DO 90 J=1,NR
      FEPS0(I,J)=0.0
   90 CONTINUE
      DO 110 I=1,3
      B(I)   =0.0
  110 CONTINUE
      DO 130 I=1,3
      DO 130 J=1,3
      BTD(I,J)=0.0
  130 CONTINUE
      DO 140 I=1,NEK
      DO 140 J=1,NEK
      BTDN(I,J)=0.0
  140 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX (WITHOUT SHEAR TERMS).
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
C
C     TEST IF THE VALUE OF INT IS LEGAL. IF NOT- *ERROR*
C
      IF (INT-1) 170,150,150
  150 IF (INT-5) 190,190,170
  170 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) INT
      IF (IPSW-2) 20,690,690
  190 CONTINUE
C
C     VOLUME COORDINATES AND THE WEIGHTS FOR NUMERIC INTEGRATION FROM
C     HAMMER MARLOWE AND STROUD. THE VOLUME OF A TETRAHEDRON IS THE
C     VOLUME OF A CUBE/6
C
      GO TO (210,170,170,230,250),INT
  210 CONTINUE
C
      RL1(1)=.25
      RL2(1)=.25
      RL3(1)=.25
      RL4(1)=.25
      WT(1) =1./6.
      GO TO 270
C
  230 CONTINUE
      WT(1) =.25/6.
      WT(2) =.25/6.
      WT(3) =.25/6.
      WT(4) =.25/6.
      ALFA  =.585410196625
      BETA  =.138196601125
      RL1(1)=ALFA
      RL2(1)=BETA
      RL3(1)=BETA
      RL4(1)=BETA
      RL1(2)=BETA
      RL2(2)=ALFA
      RL3(2)=BETA
      RL4(2)=BETA
      RL1(3)=BETA
      RL2(3)=BETA
      RL3(3)=ALFA
      RL4(3)=BETA
      RL1(4)=BETA
      RL2(4)=BETA
      RL3(4)=BETA
      RL4(4)=ALFA
      GO TO 270
C
  250 CONTINUE
      WT(1) =-.80/6.
      WT(2) = .45/6.
      WT(3) = .45/6.
      WT(4) = .45/6.
      WT(5) = .45/6.
      ALFA  = .50000000000000000
      BETA  = .16666666666666666
      RL1(1)= .25
      RL2(1)= .25
      RL3(1)= .25
      RL4(1)= .25
      RL1(2)= ALFA
      RL2(2)= BETA
      RL3(2)= BETA
      RL4(2)= BETA
      RL1(3)= BETA
      RL2(3)= ALFA
      RL3(3)= BETA
      RL4(3)= BETA
      RL1(4)= BETA
      RL2(4)= BETA
      RL3(4)= ALFA
      RL4(4)= BETA
      RL1(5)= BETA
      RL2(5)= BETA
      RL3(5)= BETA
      RL4(5)= ALFA
  270 CONTINUE
C
C     NUMERIC INTEGRATION IN THE TETRAHEDRON. COMPUTING THE MATRIX BTD'N
C
      DO 530 K=1,INT
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN1031(DNL1,DNL2,DNL3,RL1(K),RL2(K),RL3(K),RL4(K))
C
C     COMPUTE THE JACOBIAN MATRIX. ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNL3,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO FOR
C     THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1.
C
      IF (IERR) 310,330,330
  310 WRITE(IW,6300)
      IF (IPSW-2) 750,690,690
  330 CONTINUE
C
C     CALCULATE THE 10 TERMS OF THE SHAPE FUNCTION N IN THIS POINT.
C
      CALL RN10(RN,RL1(K),RL2(K),RL3(K),RL4(K))
C
C     THE PRODUCT OF INTEGRATION WEIGHT AND THE JACOBIAN DETERMINANT.
C
      COF=WT(K)*DETJ
C
C     MULTIPLICATION OF THE INVERTED JACOBI MATRIX WITH COF.
C
      DO 370 N=1,3
      DO 350 M=1,3
      JI(M,N)=JI(M,N)*COF
  350 CONTINUE
  370 CONTINUE
C
C     CALCULATE THE MATRIXES B AND BTD'
C
      DO 430 I=1,MEK
      B(1)=JI(1,1)*DNL1(I)+JI(1,2)*DNL2(I)+JI(1,3)*DNL3(I)
      B(2)=JI(2,1)*DNL1(I)+JI(2,2)*DNL2(I)+JI(2,3)*DNL3(I)
      B(3)=JI(3,1)*DNL1(I)+JI(3,2)*DNL2(I)+JI(3,3)*DNL3(I)
C
      BTD(1,1)=D *B(1)
      BTD(2,1)=D1*B(2)
      BTD(3,1)=D1*B(3)
      BTD(1,2)=D1*B(1)
      BTD(2,2)=D *B(2)
      BTD(3,2)=BTD(3,1)
      BTD(1,3)=BTD(1,2)
      BTD(2,3)=BTD(2,1)
      BTD(3,3)=D *B(3)
C
C     CALCULATE THE CONTRIBUTION TO THE MATRIX BTD'N FROM THIS
C     INTEGRATION POINT.
C
      IP=(I-1)*3
C
      DO 410 J=1,MEK
      JP=(J-1)*3
      DO 390 N=1,3
      JPP=JP+N
      DO 380 M=1,3
      IPP=IP+M
C
      BTDN(IPP,JPP)=BTDN(IPP,JPP)+BTD(M,N)*RN(J)
C
  380 CONTINUE
  390 CONTINUE
C
  410 CONTINUE
  430 CONTINUE
C
  530 CONTINUE
C
C     LOADCASE LOOP.
C
      DO 670 LN=1,NR
C
C     FIND THE VALUES OF THE INITIAL STRAIN IN THE MID-EDGE NODES BY
C     LINEAR INTERPOLATION.
C
C
      II=IER(I)
      JJ=IER(I+1)
      KK=IER(I+2)
      IP=(II-1)*3
      JP=(JJ-1)*3
      KP=(KK-1)*3
C
      DO 580 M=1,3
      IPP=IP+M
      JPP=JP+M
      KPP=KP+M
      EPS0I(IPP,LN)=.5*(EPS0I(JPP,LN)+EPS0I(KPP,LN))
  580 CONTINUE
C
C     CALCULATE THE FORCE VECTOR (FEPS0) FROM THIS LOADCASE DUE TO THE
C     INITIAL NODAL STRAIN VECTOR EPS0I NUMBER LN.
C
      DO 650 I=1,NEK
      DO 630 J=1,NEK
C
      FEPS0(I,LN)=FEPS0(I,LN)+BTDN(I,J)*EPS0I(J,LN)
C
  630 CONTINUE
  650 CONTINUE
C
  670 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 770,690,690
  690 CONTINUE
      WRITE (IW,6500)
      CALL MPRT30(EPS0I,NEK,NR,IW)
      WRITE(IW,6520) IEL
      CALL MPRT30(FEPS0,NEK,NR,IW)
  750 WRITE(IW,6540) IEL
C
C
  770 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING ITEL34 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,24HPOISSON'S NUMBE
     1R (RNY)= ,0PF5.3)
 6080 FORMAT(/5X,51HTHE INITIAL STRAIN VECTOR(S) BEFORE INTERPOLATION :)
 6090 FORMAT(/5X,25HNUMBER OF LOADCASES (NR)=,I5)
 6100 FORMAT(/5X,55HNUMBER OF INTEGRATION POINTS IN THE TETRAHEDRON (INT
     1)= ,I3,3X,25HLEGAL VALUES ARE 1,4 OR 5)
C
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM ITEL34 ***)
 6320 FORMAT(/'     ERROR FLAG=',I3)
 6340 FORMAT(/5X,20HTHE VALUE OF INT IS:,I4,37H   WHILE IT SHOULD HAVE B
     1EEN 1,4 OR 5)
C
C
C
 6500 FORMAT(/5X,58HTHE INITIAL STRAIN VECTOR(S) (EPS0I) AFTER INTERPOLA
     1TION :)
 6520 FORMAT(//5X,64HTHE LOAD VECTOR(S) (FEPS0) DUE TO INITIAL STRAIN FO
     1R ELEMENT NO:,I7)
 6540 FORMAT(/28H LEAVING ITEL34 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE  ITET31(EK,XG,YG,ZG,YOUNG,RNY,IEL,INT,IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  ITET31
C
C
C     ITET31 COMPUTES THE STIFFNESS-MATRIX OF AN ISOPARAMETRIC
C     TETRAHEDRON WITH 10 NODES AND THREE DEGREES OF FREEDOM AT
C     EACH NODE.
C     THE EDGES MAY BE STRAIGHT OR CURVED.
C     THE STIFFNESS-MATRIX IS REFERRED TO THE GLOBAL CARTESIAN CO-
C     ORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION :05.04.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,ZG,YG IS 10,(I=1,10)
C     YOUNG - YOUNGS MODULUS OF ELASTICITY
C     RNY   - POISSONS RATIO
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     INT   - NUMBER OF INTERGRATION POINTS IN THE TETRAHEDRON
C             LEGAL VALUE : 5
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C     IW    - WRITE UNIT. E.G. WRITE (IW,6010)
C
C   OUTPUT:
C
C     EK    - UPPER HALF OF ELEMENT STIFFNESS MATRIX K. EK IS A ONE
C             DIMENSIONAL ARRAY WITH DIMENSION: EK(495) . THE STIFF-
C             NESS MATRIX CONSISTS OF 3X3 SUBMATRIXES. EACH SUBM-
C             MATRIX IS STORED COLUMNWISE AND THE SUBMATRIXES IS
C             STORED LINEWISE.
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: THE
C             DETERMINANT OF THE JACOBIAN MATRIX IS NUMERICALLY ZERO.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     EK(495)   ,    DNL1(10)  ,    DNL2(10)  ,
     1              DNL3(10)  ,    JI(3,3)   ,
     2              WT(5)     ,    RL1(5)    ,    RL2(5)    ,
     3              RL3(5)    ,    RL4(5)    ,
     4              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     5              B(10,3)   ,    DB(10,6,3),    EKIJ(3,3)
C
      DOUBLE PRECISION JI
C
      IERR=0
      MEK=10
C
C     PRINT ?
C
      IF (IPSW-2) 30,10,10
    5 IF (IPSW-2) 10,25,25
   10 WRITE(IW,6000) IEL
      WRITE(IW,6010)
      DO 20 I1=1,MEK
      WRITE(IW,6020) I1 , XG(I1),YG(I1),ZG(I1)
   20 CONTINUE
      WRITE(IW,6030) YOUNG,RNY
      WRITE(IW,6040) INT
   25 CONTINUE
      IF (IERR) 300,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C     DIMENSION OF EK IS 9*MEK*(MEK+1)/2
C
      IDIM=9*MEK*(MEK+1)/2
      DO 40 I1=1,IDIM
      EK(I1)=0.0
   40 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX
C
      D=YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
      D2=D*(1.-2.*RNY)/(2.*(1.-RNY))
C
C     VOLUME COORDINATES FOR CUBIC INTEGRATION FROM HAMMER, MARLOWE
C     AND STROUD.
C
      ALFA=.50000000000000000
      BETA=.16666666666666666
      RL1(1)=.25
      RL2(1)=.25
      RL3(1)=.25
      RL4(1)=.25
      RL1(2)=ALFA
      RL2(2)=BETA
      RL3(2)=BETA
      RL4(2)=BETA
      RL1(3)=BETA
      RL2(3)=ALFA
      RL3(3)=BETA
      RL4(3)=BETA
      RL1(4)=BETA
      RL2(4)=BETA
      RL3(4)=ALFA
      RL4(4)=BETA
      RL1(5)=BETA
      RL2(5)=BETA
      RL3(5)=BETA
      RL4(5)=ALFA
C
C     WEIGHTS IN CUBIC NUMERIC INTEGRATION. THE VOLUME OF A TETRAHEDRON
C     IS THE GROUND AREA*HEIGTH/3
C
      WT(1)=-.8/6.
      WT(2)=.45/6.
      WT(3)=.45/6.
      WT(4)=.45/6.
      WT(5)=.45/6.
C
C     COMPUTING THE STIFFNESS MATRIX BY NUMERIC CUBIC INTEGRATION
C     IN THE TETRAHEDRON (L1, L2, L3 AND L4)
C
      DO 270 L=1,INT
C
C     COMPUTE THE PARTIAL DERVATIVES OF THE SHAPE FUNCTION
C
      CALL DN1031(DNL1,DNL2,DNL3,RL1(L),RL2(L),RL3(L),RL4(L))
C
C     COMPUTE THE JACOBIAN MATRIX, ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNL3,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN IERR=-1
C
      IF (IERR) 5,200,200
  200 CONTINUE
C
C     COMPUTE THE MATRIXES B AND D*B
C
      DO 210 J=1,MEK
C
      B(J,1)=JI(1,1)*DNL1(J)+JI(1,2)*DNL2(J)+JI(1,3)*DNL3(J)
      B(J,2)=JI(2,1)*DNL1(J)+JI(2,2)*DNL2(J)+JI(2,3)*DNL3(J)
      B(J,3)=JI(3,1)*DNL1(J)+JI(3,2)*DNL2(J)+JI(3,3)*DNL3(J)
C
      DB(J,1,1)=D*B(J,1)
      DB(J,2,1)=D1*B(J,1)
      DB(J,3,1)=DB(J,2,1)
      DB(J,4,1)=D2*B(J,2)
      DB(J,5,1)=D2*B(J,3)
      DB(J,6,1)=0.0
      DB(J,1,2)=D1*B(J,2)
      DB(J,2,2)=D*B(J,2)
      DB(J,3,2)=DB(J,1,2)
      DB(J,4,2)=D2*B(J,1)
      DB(J,5,2)=0.0
      DB(J,6,2)=DB(J,5,1)
      DB(J,1,3)=D1*B(J,3)
      DB(J,2,3)=DB(J,1,3)
      DB(J,3,3)=D*B(J,3)
      DB(J,4,3)=0.0
      DB(J,5,3)=DB(J,4,2)
      DB(J,6,3)=DB(J,4,1)
C
  210 CONTINUE
C
C
C     THE PRODUCT OF INTEGRATION WEIGHT  AND THE JACOBIAN DETERMINANT
C
      COF=WT(L)*DETJ
C
C     MULTIPLICATION OF THE B-MATRIX NUMBER I WITH COF.
C
      DO 220 I=1,MEK
      B(I,1)=COF*B(I,1)
      B(I,2)=COF*B(I,2)
      B(I,3)=COF*B(I,3)
  220 CONTINUE
C
C     CALCULATE UPPER TRIANGLE OF EK (ELEMENT STIFFNESS MATRIX)
C
      IPK=0
      DO 260 I=1,MEK
      DO 250 J=I,MEK
C
      EKIJ(1,1)=B(I,1)*DB(J,1,1)+B(I,2)*DB(J,4,1)+B(I,3)*DB(J,5,1)
      EKIJ(2,1)=B(I,2)*DB(J,2,1)+B(I,1)*DB(J,4,1)
      EKIJ(3,1)=B(I,3)*DB(J,3,1)+B(I,1)*DB(J,5,1)
      EKIJ(1,2)=B(I,1)*DB(J,1,2)+B(I,2)*DB(J,4,2)
      EKIJ(2,2)=B(I,2)*DB(J,2,2)+B(I,1)*DB(J,4,2)+B(I,3)*DB(J,6,2)
      EKIJ(3,2)=B(I,3)*DB(J,3,2)+B(I,2)*DB(J,6,2)
      EKIJ(1,3)=B(I,1)*DB(J,1,3)+B(I,3)*DB(J,5,3)
      EKIJ(2,3)=B(I,2)*DB(J,2,3)+B(I,3)*DB(J,6,3)
      EKIJ(3,3)=B(I,3)*DB(J,3,3)+B(I,1)*DB(J,5,3)+B(I,2)*DB(J,6,3)
C
      DO 240 II=1,3
      DO 230 JJ=1,3
      IPK=IPK+1
      EK(IPK)=EK(IPK)+EKIJ(JJ,II)
  230 CONTINUE
  240 CONTINUE
C
  250 CONTINUE
  260 CONTINUE
C
  270 CONTINUE
C
C     PRINT IF IN ERROR
C
      GO TO 320
  300 CONTINUE
      WRITE(IW,6100)
      WRITE(IW,6110) IERR
      WRITE(IW,6120) IEL
      WRITE(IW,6130)   L
      WRITE(IW,6150) IEL
      GOTO 340
C
  320 CONTINUE
C
C     PRINT ?
C
      IF (IPSW-2) 340,330,330
  330 CONTINUE
      WRITE(IW,6160) IEL
      IDIM1=1
      IDIM2=495
      CALL MPRT30(EK,IDIM1,IDIM2,IW)
      WRITE(IW,6150) IEL
C
  340 CONTINUE
C
C
 6000 FORMAT(////29H ENTERING ITET31 FOR ELEMENT ,I7,2H :)
 6010 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6020 FORMAT(I9,6X,1P3E12.4)
 6030 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,23HPOISSONS NUMBER
     2 (RNY)= ,0PF5.3)
 6040 FORMAT(/5X,'NUMBER OF INTEGRATION POINTS IN THE TETRAHEDRON',
     2     'ARE TO BE 5 AND IT IS :',I3)
 6100 FORMAT(///33H *** ERROR RETURN FROM ITET31 ***)
 6110 FORMAT(/24H     ERROR FLAG (IERR) =,I3)
 6120 FORMAT(/13H     ELEMENT ,I7,11H   IN ERROR)
 6130 FORMAT(/66H     THE DETERMINANT OF THE JACOBIAN MATRIX FOR INTEGRA
     2TION POINT , I5, 18H  IS EQUAL TO ZERO)
 6150 FORMAT(/28H LEAVING ITET31 FOR ELEMENT ,I7)
 6160 FORMAT(//33H     ELEMENT STIFFNESS MATRIX NO.,I7)
C
      RETURN
      END
      SUBROUTINE ITET32(SIG,XGP,YGP,ZGP,V,EPS0I,XG,YG,ZG,YOUNG,RNY,
     &                  NSTRP,IOPXP,IOPE0,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE : ITET32
C
C
C     ITET32 CALCULATES THE STRESSES IN POINTS SPECIFIED WITH NSTRP,
C     INSIDE AN SIOPARAMETRIC TETRAHEDRON. NUMBER OF STRESS POINTS IS
C     NSTRP.
C     ITET32 CALCULATES ALSO THE GLOBAL COORDINATES XGP, YGP AND
C     ZGP OF THE STRESS POINTS.
C     THE STRESSES ARE REFERRED TO THE GLOBAL CARTESIAN COORDINATE
C     SYSTEM, ACCORDING TO: SIG=D(EPS-EPS0) WHERE EPS0 IS INITIAL
C     STRAIN AND: EPS=B'*V
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 08.05.74 / 01      LAST UPDATING DATE:
C                    09.03.88 / 02      TERJE ROLVAG
C                    27.11.97 / 03      Bjorn Haugen
C                    22.05.10 / 04      Knut Morten Okstad
C
C***********************************************************************
C
C  INPUT:
C
C     V     - THE DISPLACEMENTS U,V AND W IN THE 10 NODES OF THE
C             ELEMENT. STORED IN A ONE DIMENSIONAL ARRAY:(U1,V1,W1,
C             U2,V2,W2,------  U10,V10,W10). DIMENSION OF V IS (3,10).
C     EPS0I - INITIAL STRAIN IN THE THREE GLOBAL DIRECTIONS. E.G.:
C             (ALFAX*T,ALFAY*T,ALFAZ*T) FOR THE NODES.THE VALUE IN THE
C             MIDDLE NODES SHOULD BE THE MEAN VALUE OF THE TWO
C             NEIGHBOURING NODES. DIMENSION OF EPS0I IS (3,10).
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY OF THE
C     ZG    - ELEMENT. DIMENSION OF  XG,YG AND ZG IS 10.
C     YOUNG - YOUNGS MODULUS OF ELASTICITY.
C     RNY   - POISSONS RATIO.
C     NSTRP - NUMBER OF STRESS-POINTS IN THE TETRAHEDRON.
C             LEGAL VALUES ARE 1,4,5 AND 10. 10 means at nodal points.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT.  E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT- UNLESS ERROR.
C
C   OUTPUT:
C
C     SIG   - THE STRESSES COLUMNWISE FOR ALL THE STRESSPOINTS. THE
C             STRESSES ARE: SIGMX, SIGMY, SIGMZ, TAUXY,TAUXZ AND TAUYZ.
C             SIG HAS THE DIMENSION: (6,NSTRP)
C     XGP   -
C     YGP   - GLOBAL COORDINATES FOR THE STRESSPOINTS. XGP,YGP AND ZGP
C     ZGP   - HAS THE DIMENSION (NSTRP)
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR WAS DETECTED.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     SIG(6,NSTRP),  XGP(NSTRP),    YGP(NSTRP),
     &              ZGP(NSTRP),    V(3,10)   ,    EPS0(3)   ,
     &              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     &              B(3)      ,    JI(3,3)   ,
     &              DNL1(10)  ,    DNL2(10)  ,    DNL3(10)  ,
     &              RL1(10)   ,    RL2(10)   ,    RL3(10)   ,
     &              RL4(10)   ,    DB(15,6,3),    RN(10)    ,
     &              EPS0I(3,10)
C
      DOUBLE PRECISION JI
C
      IERR=0
      MEK=10
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2)  30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 CONTINUE
      WRITE(IW,6020)
      CALL MPRT30(V,30,1,IW)
      IF (IOPE0) 22,22,21
   21 WRITE(IW,6040)
      CALL MPRT30(EPS0I,30,1,IW)
   22 WRITE(IW,6060)
      DO 25 I1=1,MEK
      WRITE(IW,6080) I1,XG(I1),YG(I1),ZG(I1)
   25 CONTINUE
      WRITE(IW,6100) YOUNG,RNY
      WRITE(IW,6120) NSTRP
      IF (IERR)  630,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 50 I1=1,6
         DO 50 J1=1,NSTRP
            SIG(I1,J1)=0.0
   50 CONTINUE
      DO 90 I1=1,NSTRP
         RL1(I1)=0.0
         RL2(I1)=0.0
         RL3(I1)=0.0
         RL4(I1)=0.0
   90 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX
C
      D=YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
      D2=D*(1.-2.*RNY)/(2.*(1.-RNY))
C
C     TEST IF THE VALUE OF NSTRP HAS ALLOWABLE VALUE. IF NOT- *ERROR*
C
      IF (NSTRP-1)  170,150,150
  150 IF (NSTRP-10) 190,190,170
  170 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) NSTRP
      IF(IPSW-2) 20,550,550
  190 CONTINUE
C
C     SET THE VOLUME COORDINATES FOR THE STRESS POINTS IN THE
C     TETRAHEDRON.
C
      GO TO (210,170,170,240,250,170,170,170,170,300),NSTRP
C
  210 CONTINUE
      RL1(1)=.25
      RL2(1)=.25
      RL3(1)=.25
      GO TO 400
  240 CONTINUE
      ALFA=.585410196625
      BETA=.138196601125
      RL1(1)=ALFA
      RL2(1)=BETA
      RL3(1)=BETA
      RL1(2)=BETA
      RL2(2)=ALFA
      RL3(2)=BETA
      RL1(3)=BETA
      RL2(3)=BETA
      RL3(3)=ALFA
      RL1(4)=BETA
      RL2(4)=BETA
      RL3(4)=BETA
      GO TO 400
  250 CONTINUE
      ALFA=.50000000000000000
      BETA=.16666666666666666
      RL1(1)=.25
      RL2(1)=.25
      RL3(1)=.25
      RL1(2)=ALFA
      RL2(2)=BETA
      RL3(2)=BETA
      RL1(3)=BETA
      RL2(3)=ALFA
      RL3(3)=BETA
      RL1(4)=BETA
      RL2(4)=BETA
      RL3(4)=ALFA
      RL1(5)=BETA
      RL2(5)=BETA
      RL3(5)=BETA
      GO TO 400
C
  300 CONTINUE
C     POSITIONING THE STRESS POINTS AT THE NODAL POINTS
      RL1(1)=1.0
      RL1(2)=0.5
      RL2(2)=0.5
      RL2(3)=1.0
      RL2(4)=0.5
      RL3(4)=0.5
      RL3(5)=1.0
      RL1(6)=0.5
      RL3(6)=0.5
      RL1(7)=0.5
      RL2(8)=0.5
      RL3(9)=0.5
C
  400 CONTINUE
C
C
C     CALCULATE THE STRESS-MATRIX SIG(6,NSTR) FOR THE ELEMENT.
C
      DO 530 L=1,NSTRP
         RL4(L) = 1.0 - RL1(L) - RL2(L) - RL3(L)
C        CALCULATE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION FOR THIS
C        STRESS POINT.
         CALL DN1031(DNL1,DNL2,DNL3,RL1(L),RL2(L),RL3(L),RL4(L))
C        CALCULATE THE GLOBAL COORDINATES FOR THE STRESS-POINT
         IF (IOPXP) 402,402,401
  401    CALL XYZ10(XGP(L),YGP(L),ZGP(L),XG,YG,ZG,RL1(L),RL2(L),RL3(L),
     &              RL4(L),IEL,IW,IPSW)
C        COMPUTE THE JACOBIAN MATRIX, ITS IVERSE AND ITS DETERMINANT
C        FOR THE POINT.
  402    CALL JACI31(JI,DETJ,DNL1,DNL2,DNL3,XG,YG,ZG,IEL,MEK,IW,IPSW,
     &               IERR)
C        IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C        FOR THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1.
         IF (IERR) 410,430,430
  410    WRITE(IW,6300)
         IF (IPSW-2) 630,550,550
  430    CONTINUE
C        COMPUTE THE MATRICES B AND D*B (B(3))
         DO 450 J=1,MEK
            B(1)=JI(1,1)*DNL1(J)+JI(1,2)*DNL2(J)+JI(1,3)*DNL3(J)
            B(2)=JI(2,1)*DNL1(J)+JI(2,2)*DNL2(J)+JI(2,3)*DNL3(J)
            B(3)=JI(3,1)*DNL1(J)+JI(3,2)*DNL2(J)+JI(3,3)*DNL3(J)
            DB(J,1,1)=D *B(1)
            DB(J,2,1)=D1*B(1)
            DB(J,3,1)=DB(J,2,1)
            DB(J,4,1)=D2*B(2)
            DB(J,5,1)=D2*B(3)
            DB(J,6,1)=0.0
            DB(J,1,2)=D1*B(2)
            DB(J,2,2)=D *B(2)
            DB(J,3,2)=DB(J,1,2)
            DB(J,4,2)=D2*B(1)
            DB(J,5,2)=0.0
            DB(J,6,2)=DB(J,5,1)
            DB(J,1,3)=D1*B(3)
            DB(J,2,3)=DB(J,1,3)
            DB(J,3,3)=D *B(3)
            DB(J,4,3)=0.0
            DB(J,5,3)=DB(J,4,2)
            DB(J,6,3)=DB(J,4,1)
  450    CONTINUE
C        CALCULATION OF THE STRESS MATRIX SIG(6,NSTRP)
C        SIGMA=(D*B')*V
         DO 490 I=1,MEK
            DO 470 J=1,6
               SIG(J,L)=SIG(J,L)+DB(I,J,1)*V(1,I)
     &                          +DB(I,J,2)*V(2,I)
     &                          +DB(I,J,3)*V(3,I)
  470       CONTINUE
  490    CONTINUE
C        CALCULATE THE INITIAL STRAIN IN THE POINT
         IF (IOPE0) 530,530,495
  495    CALL RN10(RN,RL1(L),RL2(L),RL3(L),RL4(L))
         DO 505 N=1,3
            EPS0(I)=0.0
            DO 500 I=1,MEK
               EPS0(N)=EPS0(N)+RN(I)*EPS0I(N,I)
  500       CONTINUE
  505    CONTINUE
C        CALCULATE  SIGMA=SIGMA-D*EPSO  (TAKE INTO ACCOUNT INITIAL STRAIN)
         SIG(1,L)=SIG(1,L)- D*EPS0(1)-D1*EPS0(2)-D1*EPS0(3)
         SIG(2,L)=SIG(2,L)-D1*EPS0(1)- D*EPS0(2)-D1*EPS0(3)
         SIG(3,L)=SIG(3,L)-D1*EPS0(1)-D1*EPS0(2)- D*EPS0(3)
  530 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 700,550,550
  550 WRITE(IW,6500)
      CALL MPRT30(SIG,6,NSTRP,IW)
      IF (IOPXP) 630,630,590
  590 WRITE(IW,6520)
      DO 600 I1=1,NSTRP
      WRITE(IW,6080) I1,XGP(I1),YGP(I1),ZGP(I1)
  600 CONTINUE
  630 WRITE(IW,6540) IEL
C
C
 6000 FORMAT(////32H ENTERING ITET32 FOR ELEMENT NO:,I7,2H :)
 6020 FORMAT(5X,22HNODAL DISPLACEMENTS V:)
 6040 FORMAT(/5X,34HINITIAL STRAIN EPS0I IN THE NODES:)
 6060 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6080 FORMAT(I9,6X,1P3E12.4)
 6100 FORMAT(5X,21HYOUNG'S MODULUS (E)= ,1PE10.4,5X,25HPOISSON'S NUMBER
     1  (RNY)= ,0PF5.3)
 6120 FORMAT(/5X,51HNUMBER OF STRESS POINTS IN THE TETRAEDRON (NSTRP)= ,
     1    I3,3X,26HLEGAL VALUES ARE 1,4 OR 5.)
C
 6300 FORMAT(///33H *** ERROR RETURN FROM ITET32 ***)
 6320 FORMAT(/17H     ERROR FLAG =,I3)
 6340 FORMAT(5X,'THE VALUE OF NSTRP IS:',I4,'  WHILE IT SHOULD HAVE',
     1' BEEN 1,4 OR 5')
C
 6500 FORMAT(5X,'THE STRESS MATRIX (SIG(6,NSTRP)). (SIG(1)=SIGXX, SIG',
     1'(2)=SIGYY, SIG(3)=SIGZZ',
     2 /5X,'SIG(4)=TAUXY, SIG(5)=TAUXZ,SIG(6)=TAUYZ.) :')
 6520 FORMAT( /,'     STRESS POINT COORDINATES:'
     1        /,'     POINT       XGP         YGP         ZGP')
 6540 FORMAT(/31H LEAVING ITET32 FOR ELEMENT NO:,I7)
C
C
  700 CONTINUE
      RETURN
      END
      SUBROUTINE ITET33(FE,XG,YG,ZG,GI,ISURF,IOPT,RO,NR,INTV,INTT,IEL,IW
     1                 ,IPSW,IERR)
C
C**********************************************************************
C  F I N I T R R L R M R N T  L I B A R Y   SUBROUTINE :  ITET33
C
C     ITET33 CALCULATES THE NODAL FORCES (LOADS), FE, IN A 10 NODES
C     ISOPARAMETRIC TETRAHEDRON DUE TO: 1. GIVEN NODAL ACCELERATIONS
C     IN THE GLOBAL DIRECTIONS. 2. GIVEN NODAL PRESSURE IN GLOBAL
C     COMPONENT FORM. 3. GIVEN NODAL NORMAL-PRESSURE. POINT 2 AND 3
C     IS CALCULATED FOR ONE OR MORE OF THE TETRAHEDRON'S 4 SURFACES,
C     DEPENDING ON THE CORRESPONING VALUE OF ISURF (WITH DIMENSION :
C     ISURF(NO. OF LOADCASES)).
C     THE ROUTINE CALCULATES THE NODAL LOADS FOR NR LOADCASES (SEE THE
C     DIMENSION STATEMENT).
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE RESULTANT NODAL FORCES
C     ARE REFERRED TO THE GLOBAL CARTESIAN COORDINATE SYSTEM
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 25.11.74                LAST UPDATING DATE:
C********************************************************************
C    INPUT:
C     XG    -
C     YG    - GLOBAL, NODAL COORDINATES DEFINING THE GEOMETRY. DIMENSION
C     ZG    - OF XG,YG,ZG IS 10.
C     GI    - GIVEN NODAL ACCELERATIONS, -PRESSURE IN COMPONENT FORM OR
C             -NORMAL PRESSURE. DEPENDING ON IOPT BEEING 1,2 OR 3.
C             DIMENSION GI(30,NR). IN THE COLUMNS OF GI THE VALUES ARE
C             STORED NODEWISE.
C     ISURF - OPTION SPECIFYING THE SURFACE(S) TO BE LOADED WHEN IOPT
C             EQUALS 2 OR 3 (SEE BELOW), DIMENSION ISURF(NR). THE VALUES
C             TO BE GIVEN WILL FOR INSTANCE BE 0101, WHICH MEANS THAT
C             SURFACE NO. 2 AND 4 HAVE LOADS IN THIS LOADCASE.
C     IOPT  - OPTION SPECIFYING WHETHER THE ROUTINE IS TO CALCULATE:
C             1. VOLUME FORCES, 2. SURFACE FORCES FROM PRESSURE IN
C             COMPONENT FORM, 3. SURFACE FORCES FROM NORMAL PRESSURE.
C             THE VALUE BEEING 1,2 OR 3.
C     RO    - MASS PER UNIT VOLUME OF THE MATERIAL.
C     NR    - NUMBER OF LOADCASES TO BE CALCULATED
C     INTV  - NUMBER OF INTEGRATION POINTS IN THE VOLUME OF THE TETRA-
C             HEDRON. TO BE USED FOR IOPT=1. LEGAL VALUE IS 5.
C     INTT  - NUMBER OF INTEGRATION POINTS IN THE SURFACES OF THE TETRA-
C             HEDRON. TO BE USED FOR IOPT=2 AND 3. LEGAL VALUE ARE 1,
C             3,4 AND 7.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER).
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C    OUTPUT:
C     FE    - NODAL ELEMENT FORCES (LOADS) IN THE GLOBAL DIRECTIONS.
C             THE FORCES ARE STORED NODEWISE. DIMENSION FE(30,NR).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN ERROR
C             DETECTED IN THIS PROGRAM OR IN ON OF THE CALLED PROGRAMS.
C**********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FE(30,NR) ,    GI(30,NR) ,    ISURF(NR) ,
     1              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     2              RL1(7)    ,    RL2(7)    ,    RL3(7)    ,
     3                             WK(7)     ,    RN(10)    ,
     4              EM(495)   ,    EML(30)   ,    ISURFR(4) ,
     5              EMR(10,10),    RNTN(6,6,4),   RNTCN(18,6,4),
     6              IER(4,6)
C
      EQUIVALENCE(EM,EML,RNTN,RNTCN)
C
C     SET THE NODENUMBERS FOR THE 4 SURFACES.
C
      DATA((IER(I,J),J=1,6),I=1,4)/
     1                                 3,  4,  5,  8,  9, 10,
     2                                 1,  5,  6,  7,  9, 10,
     3                                 1,  2,  3,  7,  8, 10,
     4                                 1,  2,  3,  4,  5,  6/
C
C
      MEK=10
      NEK=3*MEK
      NDFL=NEK*NR
      NDOF=3
      NSFNOD=6
      NSURF=4
C
      LUMP=0
C
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF(IPSW-2) 50,10,10
   10 WRITE(IW,6000)  IEL
   20 WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060)
      CALL MPRT30(GI,NEK,NR,IW)
      WRITE(IW,6080)
      WRITE(IW,6100) (I,ISURF(I),I=1,NR)
      WRITE(IW,6120) IOPT,RO,NR
      WRITE(IW,6140) INTV,INTT
      IF (IERR) 1150,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,NEK
      DO 70 J=1,NR
      FE(I,J)=0.0
   70 CONTINUE
      DO  90 I=1,NSURF
      ISURFR(I)=0
   90 CONTINUE
      DO 110 I=1,MEK
      RN(I)=0.0
  110 CONTINUE
C
      IF (IOPT-2)  130,170,170
C
  130 CONTINUE
C
C     TEST IF THE VALUE OF INTV IS LEGAL. IF NOT-  *ERROR*
C
      IF (INTV-5) 150,370,150
  150 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) INTV
      IF (IPSW-2) 20,1130,1130
  170 CONTINUE
C
C     VOLUME COORDINATES AND WEIGHTS FOR INTEGRATION IN SURFACE NO. 4
C     (RL4=0). LINEAR, QUADRATIC, CUBIC AND QUINTIC INTEGRATION.
C
C     TEST IF THE VALUE OF INTT HAS ALLOWABLE VALUE. IF NOT-  *ERROR*
C
      IF (INTT-1) 250,270,190
  190 IF (INTT-3) 250,270,210
  210 IF (INTT-4) 250,270,230
  230 IF (INTT-7) 250,270,250
  250 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6360) INTT
      IF (IPSW-2) 20,1130,1130
  270 CONTINUE
C
      GO TO (290,250,310,330,250,250,350),INTT
C
  290 CONTINUE
      RL1(1)=1./3.
      RL2(1)=1./3.
      RL3(1)=1./3.
      WK(1)= 1.*.5
      GO TO 370
  310 CONTINUE
      RL1(1)=.5
      RL2(1)=.5
      RL3(1)=.0
      RL1(2)=.0
      RL2(2)=.5
      RL3(2)=.5
      RL1(3)=.5
      RL2(3)=.0
      RL3(3)=.5
      WK(1) =1./3.*.5
      WK(2) =1./3.*.5
      WK(3) =1./3.*.5
      GO TO 370
C
  330 CONTINUE
      RL1(1)=1./3.
      RL2(1)=1./3.
      RL3(1)=1./3.
      RL1(2)=.6
      RL2(2)=.2
      RL3(2)=.2
      RL1(3)=.2
      RL2(3)=.6
      RL3(3)=.2
      RL1(4)=.2
      RL2(4)=.2
      RL3(4)=.6
      WK(1) =-(27./48.)*.5
      WK(2) =  25./48. *.5
      WK(3) =  25./48. *.5
      WK(4) =  25./48. *.5
      GO TO 370
C
  350 CONTINUE
      ALFA1 =((1.-SQRT(15.))/3.5-1.)/3.
      BETA1 =(1.-ALFA1)/2.
      ALFA2 =((1.+SQRT(15.))/3.5-1.)/3.
      BETA2 =(1.-ALFA2)/2.
      RL1(1)=1./3.
      RL2(1)=1./3.
      RL3(1)=1./3.
      RL1(2)=ALFA1
      RL2(2)=BETA1
      RL3(2)=BETA1
      RL1(3)=BETA1
      RL2(3)=ALFA1
      RL3(3)=BETA1
      RL1(4)=BETA1
      RL2(4)=BETA1
      RL3(4)=ALFA1
      RL1(5)=ALFA2
      RL2(5)=BETA2
      RL3(5)=BETA2
      RL1(6)=BETA2
      RL2(6)=ALFA2
      RL3(6)=BETA2
      RL1(7)=BETA2
      RL2(7)=BETA2
      RL3(7)=ALFA2
      WT1   =(155.+SQRT(15.))/1200.*.5
      WT2   =(155.-SQRT(15.))/1200.*.5
      WK(1) =.225*.5
      WK(2) =WT1
      WK(3) =WT1
      WK(4) =WT1
      WK(5) =WT2
      WK(6) =WT2
      WK(7) =WT2
  370 CONTINUE
C
C     TEST IF THE VALUE OF IOPT IS LEGAL. IF NOT-  *ERROR*
C
      IF (IOPT-1) 410,430,390
  390 IF (IOPT-3) 430,430,410
  410 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6380) IOPT
      IF (IPSW-2) 20,1130,1130
  430 CONTINUE
C
      GO TO (450,710,710),IOPT
C
C     CALCULATE THE LOADS FROM GIVEN ACCELERATIONS IF IOPT=1
C
  450 CONTINUE
C
      CALL ITET35(EM,EML,XG,YG,ZG,RO,INTV,LUMP,IEL,IW,IPSW,IERR)
      IF(IERR)470,490,490
  470 WRITE(IW,6300)
      IF(IPSW-2)1150,1130,1130
  490 CONTINUE
C**** HERE THE MASS MATRIX MAY BE STORED ON FILE IF LATER DYNAMIC ANALYSIS *****
C
C     RESTORE THE CONSISTENT MASS MATRIX IN A 2-DIMENSIONAL ARRAY. THE
C     ARRAY SHOULD HAVE BEEN 30*30, BUT IT IS 10*10 SINCE THE DIAGONAL
C     TERMS IN THE 3*3 #NODE# SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL
C     TERMS IN THE 3*3 MATRIXES ARE ZERO.
C
      IPK=-8
C
      DO 570 I=1,MEK
      DO 550 J=I,MEK
C
      IPK=IPK+9
      EMR(I,J)=EM(IPK)
  550 CONTINUE
  570 CONTINUE
C
C     ADD IN THE SYMMETRICAL PART OF EMR.
C
      DO 610 I=2,MEK
      I1=I-1
      DO 590 J=1,I1
      EMR(I,J)=EMR(J,I)
  590 CONTINUE
  610 CONTINUE
C
C     LOADCASE LOOP
C
      DO 690 I=1,NR
C
C     MULTIPLY THE COMPRESSED MASS MATRIX WITH THE ACCELERATION VECTOR
C     NUMBER I.
C
      DO 670 J=1,MEK
      J1=(J-1)*3
      DO 650 K=1,NDOF
      K1=K+J1
      DO 630 L=1,MEK
      L1=(L-1)*3+K
      FE(K1,I)=FE(K1,I)-EMR(J,L)*GI(L1,I)
  630 CONTINUE
  650 CONTINUE
  670 CONTINUE
  690 CONTINUE
      GO TO 1110
C
C     CALCULATE THE LOADS FROM COMPONENT PRESSURE IF IOPT=2 OR FROM
C     NORMAL PRESSURE IF IOPT=3
C
  710 CONTINUE
C
C     LOADCASE LOOP
C
      DO 1090 I=1,NR
      ISRC=ISURF(I)
C
C     SURFACE LOOP
C
      DO 1070 J=1,NSURF
C
C     TEST THE VALUE OF THE I'TH DIGIT IN ISURF(I).
C
      J1=NSURF-J
      IEX=10**J1
      ISRF=ISRC/IEX
      IF (ISRF-1) 1070,730,1070
  730 ISRC=ISRC-IEX
      IT=ISRF-ISURFR(J)
      IF (IT) 810,810,750
C
C     IF THIS SURFACE HAS NOT BEEN LOADED BEFORE, CALCULATE THE INTEGRAL
C     OF NTN OR NTCN FOR THIS SURFACE.
C
  750 CALL NTN10(RNTN,RNTCN,XG,YG,ZG,IOPT,J,INTT,RL1,RL2,RL3,WK,IER,IEL,
     1           IW,IPSW,IERR)
C
      IF (IERR) 770,790,790
  770 WRITE(IW,6300)
      IF (IPSW-2) 1150,1130,1130
  790 ISURFR(J)=1
  810 CONTINUE
C
C     IF COMPONENT PRESSURE (IOPT=2), MULTIPLY THE CORRECT LOAD INTEN-
C     SITIES FOR THIS SURFACE WITH THE 6*6 MATRIX NTN (IT SHOULD HAVE
C     BEEN 18*18, BUT THE DIAGONAL TERMS IN THE 3*3 #NODE# SUBMATRIXES
C     ARE EQUAL AND THE OFF-DIAGONAL TERMS IN THE 3*3 MATRIXES ARE
C     ZERO).
C
      IF (IOPT-2) 970,890,970
  890 CONTINUE
C
      DO 950 K=1,NSFNOD
      K1=IER(J,K)
      K2=(K1-1)*3
      DO 930 L=1,NDOF
      L1=K2+L
      DO 910 M=1,NSFNOD
      M1=IER(J,M)
      M2=(M1-1)*3
      L2=M2+L
      FE(L1,I)=FE(L1,I)+RNTN(K,M,J)*GI(L2,I)
  910 CONTINUE
  930 CONTINUE
  950 CONTINUE
      GO TO 1070
C
C     IF NORMAL PRESSURE (IOPT=3), MULTIPLY THE CORRECT LOAD-INTENSITIES
C     FOR THIS SURFACE WITH THE 18*6 MATRIX NTCN (IT SHOULD HAVE BEEN
C     18*18, BUT COLUMN NO. 2,3,5,6,8,9,11,12 ETC. ARE ZERO).
C
  970 CONTINUE
C
      DO 1030 K=1,NSFNOD
      K1=IER(J,K)
      K2=(K1-1)*3
      K3=(K-1)*3
      DO 1010 L=1,NDOF
      L1=K2+L
      L2=K3+L
      DO 990 M=1,NSFNOD
      M1=(IER(J,M)-1)*3+1
      FE(L1,I)=FE(L1,I)+RNTCN(L2,M,J)*GI(M1,I)
  990 CONTINUE
 1010 CONTINUE
 1030 CONTINUE
C
C
C
 1070 CONTINUE
 1090 CONTINUE
C
 1110 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2)  1500,1130,1130
 1130 WRITE(IW,6500) IEL
      CALL MPRT30(FE,NEK,NR,IW)
 1150 WRITE(IW,6520) IEL
C
C
 1500 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING ITET33 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,90HTHE ACCELERATION- OR PRESSURE-VECTORS (GI) FOR THE
     1  DIFFERENT LOADCASES. STORED NODEWISE : )
 6080 FORMAT(/5X,64HTHE SURFACE SPECIFICATIONS (ISURF) FOR THE DIFFERENT
     1 LOADCASES :)
 6100 FORMAT(5X,I5,I12)
 6120 FORMAT(/5X,19HLOAD OPTION (IOPT)=,I4,3X,21HSPECIFIC MASS (RO)=  ,1
     1PE10.4,3X,25HNUMBER OF LOADCASES (NR)=,I5)
 6140 FORMAT(/5X,69HNUMBER OF INTEGRATION POINTS IN THE VOLUME OF THE TE
     1TRAHEDRON (INTV)=,I3,3X,/5X,70HNUMBER OF INTEGRATION POINTS IN THE
     2SURFACES OF THE TETRAHEDRON (INTT)=,I3,/5X,65HLEGAL VALUE FOR INTV
     3 IS 5. LEGAL VALUES FOR INTT ARE 1,3,4 AND 7.)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM ITET33 ***)
 6320 FORMAT(/'     ERROR FLAG=',I3)
 6340 FORMAT(/10H     INTV=,I4,3X,22HWHILE LEGAL VALUE IS 5)
 6360 FORMAT(/10H     INTT=,I4,3X,34HWHILE LEGAL VALUES ARE 1,3,4 AND 7)
 6380 FORMAT(/10H     IOPT=,I4,3X,31HWHILE LEGAL VALUES ARE 1,2 OR 3)
C
C
 6500 FORMAT(//,5X,96HTHE FORCE VECTOR (FE) FOR THE SPECIFIED LOADCASES
     1 DUE TO BODY OR SURFACE FORCES FOR ELEMENT NO :,I7)
 6520 FORMAT(/28H LEAVING ITET33 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE ITET34(FEPS0,XG,YG,ZG,YOUNG,RNY,EPS0I,INT,IEL,IW,IPSW,
     1                  IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  ITET34
C
C     ITET34 CALCULATES THE NODAL FORCES (LOADS), FEPS0, IN A 10 NODES
C     ISOPARAMETRIC TETRAHEDRON DUE TO INITIAL STRAIN, FOR ONE LODCASE.
C     SINCE THE DISPLACEMENT FIELD IS DESCRIBED ALONG THE
C     EDGES WITH A SECOND DEGREE POLYNOMIAL, THE INITIAL STRAIN MUST
C     VARY LINEARLY; CONSEQUENTLY ARE THE VALUES IN THE MID-EDGE
C     NODES CALCULATED AS A LINEAR INTERPOLATION BETWEEN THE TWO
C     NABOURING CORNER NODES. THIS IS DONE IN THE ROUTINE.
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE FORCES ARE REFERRED
C     TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 26.08.74
C***********************************************************************
C   INPUT:
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI,ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 10.
C     YOUNG - YOUNG'S MODULUS OF ELASTICITY.
C     RNY   - POISSON'S RATIO.
C     EPS0I - INITIAL STRAIN FOR EACH OF THE CORNER NODES IN THE THREE
C             GLOBAL DIRECTIONS. THE VALUES IN THE MID EDGE NODES ARE
C             FOUND BY LINEAR INTERPOLATION IN THE PROGRAM.
C             DIMENSION IF EPS0I: DIM(3,10). VALUES GIVEN FOR THE MID-
C             EDGE NODES ARE OVERRULED IN THIS PROGRAM.
C     INT   - NUMBER OF INTEGRATION POINTS IN THE TETRAHEDRON. LEGAL
C             VALUES ARE 1,4 AND 5.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NO.)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FEPS0 - NODAL FORCES IN THE GLOBAL DIRECTIONS. THE FORCES ARE
C             STORED NODEWISE. DIMENSION FEPS0(30).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FEPS0(30) ,    EPS0I(30) ,    B(3)      ,
     1              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     2              DNL1(10)  ,    DNL2(10)  ,    DNL3(10)  ,
     3              RL1(5)    ,    RL2(5)    ,    RL3(5)    ,
     4              RL4(5)    ,    WT(5)     ,    RN(10)    ,
     5              JI(3,3)   ,    EPS0(3)   ,
     6              BTD(3,3)  ,    IER(18)
      DOUBLE PRECISION JI
C
C     SET THE RELATION BETWEEN INTERPOLATED NODENUMBERS AND THE
C     NABOURING NODE-NUMBERS. NUMBER OF NODES WHERE THE VALUES WILL BE
C     INTERPOLATED (THE MID-SIDE NODES) ARE 6.
C
      DATA (IER(I),I=1,18)/       2,   1,   3,   4,   3,   5,
     1                            6,   1,   5,   7,   1,  10,
     2                            8,   3,  10,   9,   5,  10/
C
      MEK=10
      NEK=3*MEK
      IONE=1
      IDIM=3
      NOIV=18
C
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) YOUNG,RNY
      WRITE(IW,6080)
      CALL MPRT30(EPS0I,NEK,IONE,IW)
      WRITE(IW,6100) INT
      IF (IERR) 750,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,5
      RL1(I)=0.0
      RL2(I)=0.0
      RL3(I)=0.0
      RL4(I)=0.0
      WT(I) =0.0
   70 CONTINUE
      DO 90 I=1,NEK
      FEPS0(I)=0.0
   90 CONTINUE
      DO 110 I=1,3
      B(I)   =0.0
  110 CONTINUE
      DO 130 I=1,3
      DO 130 J=1,3
      BTD(I,J)=0.0
  130 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX (WITHOUT SHEAR TERMS).
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
C
C     TEST IF THE VALUE OF INT IS LEGAL. IF NOT- *ERROR*
C
      IF (INT-1) 170,150,150
  150 IF (INT-5) 190,190,170
  170 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) INT
      IF (IPSW-2) 20,690,690
  190 CONTINUE
C
C     VOLUME COORDINATES AND THE WEIGHTS FOR NUMERIC INTEGRATION FROM
C     HAMMER MARLOWE AND STROUD. THE VOLUME OF A TETRAHEDRON IS THE
C     VOLUME OF A CUBE/6
C
      GO TO (210,170,170,230,250),INT
  210 CONTINUE
C
      RL1(1)=.25
      RL2(1)=.25
      RL3(1)=.25
      RL4(1)=.25
      WT(1) =1./6.
      GO TO 270
C
  230 CONTINUE
      WT(1) =.25/6.
      WT(2) =.25/6.
      WT(3) =.25/6.
      WT(4) =.25/6.
      ALFA  =.585410196625
      BETA  =.138196601125
      RL1(1)=ALFA
      RL2(1)=BETA
      RL3(1)=BETA
      RL4(1)=BETA
      RL1(2)=BETA
      RL2(2)=ALFA
      RL3(2)=BETA
      RL4(2)=BETA
      RL1(3)=BETA
      RL2(3)=BETA
      RL3(3)=ALFA
      RL4(3)=BETA
      RL1(4)=BETA
      RL2(4)=BETA
      RL3(4)=BETA
      RL4(4)=ALFA
      GO TO 270
C
  250 CONTINUE
      WT(1) =-.80/6.
      WT(2) = .45/6.
      WT(3) = .45/6.
      WT(4) = .45/6.
      WT(5) = .45/6.
      ALFA  = .50000000000000000
      BETA  = .16666666666666666
      RL1(1)= .25
      RL2(1)= .25
      RL3(1)= .25
      RL4(1)= .25
      RL1(2)= ALFA
      RL2(2)= BETA
      RL3(2)= BETA
      RL4(2)= BETA
      RL1(3)= BETA
      RL2(3)= ALFA
      RL3(3)= BETA
      RL4(3)= BETA
      RL1(4)= BETA
      RL2(4)= BETA
      RL3(4)= ALFA
      RL4(4)= BETA
      RL1(5)= BETA
      RL2(5)= BETA
      RL3(5)= BETA
      RL4(5)= ALFA
  270 CONTINUE
C
C     FIND THE VALUES OF THE INITIAL STRAIN IN THE MID-EDGE NODES BY
C     LINEAR INTERPOLATION
C
C
      II=IER(I)
      JJ=IER(I+1)
      KK=IER(I+2)
      IP=(II-1)*3
      JP=(JJ-1)*3
      KP=(KK-1)*3
C
      DO 280 M=1,3
      IPP=IP+M
      JPP=JP+M
      KPP=KP+M
      EPS0I(IPP)=.5*(EPS0I(JPP)+EPS0I(KPP))
  280 CONTINUE
C
C     NUMERIC INTEGRATION IN THE TETRAHEDRON. COMPUTING THE NODAL FORCES
C     DUE TO THE INITIAL STRAIN FOR ONE LOADCASE.
C
      DO 530 K=1,INT
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN1031(DNL1,DNL2,DNL3,RL1(K),RL2(K),RL3(K),RL4(K))
C
C     COMPUTE THE JACOBIAN MATRIX. ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNL3,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO FOR
C     THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1.
C
      IF (IERR) 310,330,330
  310 WRITE(IW,6300)
      IF (IPSW-2) 750,690,690
  330 CONTINUE
C
C     CALCULATE THE 10 TERMS OF THE SHAPE FUNCTION N IN THIS POINT.
C
      CALL RN10(RN,RL1(K),RL2(K),RL3(K),RL4(K))
C
C     THE PRODUCT OF INTEGRATION WEIGHT AND THE JACOBIAN DETERMINANT.
C
      COF=WT(K)*DETJ
C
C     CALCULATE THE INITIAL STRAIN IN THE POINT.
C
      DO 340 I=1,3
      EPS0(I)=0.0
  340 CONTINUE
C
      DO 360 I=1,MEK
      II=(I-1)*3
      DO 350 N=1,3
      NI=II+N
      EPS0(N)=EPS0(N)+RN(I)*EPS0I(NI)
  350 CONTINUE
  360 CONTINUE
C
C     MULTIPLICATION OF THE INITIAL STRAIN WITH COF.
C
      DO 370 I=1,IDIM
      EPS0(I)=EPS0(I)*COF
  370 CONTINUE
C
C     CALCULATE THE MATRIXES B AND BTD'
C
      IPK=0
      DO 430 I=1,MEK
      B(1)=JI(1,1)*DNL1(I)+JI(1,2)*DNL2(I)+JI(1,3)*DNL3(I)
      B(2)=JI(2,1)*DNL1(I)+JI(2,2)*DNL2(I)+JI(2,3)*DNL3(I)
      B(3)=JI(3,1)*DNL1(I)+JI(3,2)*DNL2(I)+JI(3,3)*DNL3(I)
C
      BTD(1,1)=D *B(1)
      BTD(2,1)=D1*B(2)
      BTD(3,1)=D1*B(3)
      BTD(1,2)=D1*B(1)
      BTD(2,2)=D *B(2)
      BTD(3,2)=BTD(3,1)
      BTD(1,3)=BTD(1,2)
      BTD(2,3)=BTD(2,1)
      BTD(3,3)=D *B(3)
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT (K) AND
C     THIS NODE (I) TO THE FORCE VECTOR.
C
      DO 410 J=1,IDIM
      IPK=IPK+1
C
      FEPS0(IPK)=FEPS0(IPK)+BTD(J,1)*EPS0(1)+BTD(J,2)*EPS0(2)+BTD(J,3)*
     1           EPS0(3)
  410 CONTINUE
C
  430 CONTINUE
C
  530 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 770,690,690
  690 CONTINUE
      WRITE (IW,6500)
      CALL MPRT30(EPS0I,NEK,IONE,IW)
      WRITE(IW,6520) IEL
      CALL MPRT30(FEPS0,NEK,IONE,IW)
  750 WRITE(IW,6540) IEL
C
C
  770 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING ITET34 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,24HPOISSON'S NUMBE
     1R (RNY)= ,0PF5.3)
 6080 FORMAT(/5X,48HTHE INITIAL STRAIN VECTOR BEFORE INTERPOLATION :)
 6100 FORMAT(/5X,55HNUMBER OF INTEGRATION POINTS IN THE TETRAHEDRON (INT
     1)= ,I3,3X,25HLEGAL VALUES ARE 1,4 OR 5)
C
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM ITET34 ***)
 6320 FORMAT(/,'     ERROR FLAG=',I3)
 6340 FORMAT(/5X,20HTHE VALUE OF INT IS:,I4,37H   WHILE IT SHOULD HAVE B
     1EEN 1,4 OR 5)
C
C
C
 6500 FORMAT(/5X,55HTHE INITIAL STRAIN VECTOR (EPS0I) AFTER INTERPOLATIO
     1N :)
 6520 FORMAT(//5X,62HTHE FORCE VECTOR (FEPS0) DUE TO INITIAL STRAIN FOR
     1ELEMENT NO:,I7)
 6540 FORMAT(/28H LEAVING ITET34 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE ITET35(EM,EML,XG,YG,ZG,RO,INT,LUMP,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  ITET35
C
C
C     ITET35 CALCULATES THE MASS MATRIX OF AN ISOPARAMETRIC TETRAHEDRON,
C     WITH 10 NODES AND THREE DEGREES OF FREEDOM AT EACH NODE.
C     THE EDGES MAY BE STRAIGHT OR CURVED.
C     THE MASS-MATRIX REFERS TO THE GLOBAL CARTESIAN COORDINATE SYSTEM
C     AND MAY BE CONSISTENT OR LUMPED.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 10.07.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     YG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 10.
C     ZG    -
C     RO    - MASS PER UNIT VOLUME OF THE MATERIAL.
C     INT   - NUMBER OF INTEGRATION POINTS IN THE TERAHEDRON.
C             LEGAL VALUE: 5.
C     LUMP  - SWITCH. LUMP=0, THE PROGRAM CALCULATES A CONSISTENT
C             MASS-MATRIX. LUMP=1, THE PROGRAM CALCULATES A LUMPED
C             MASS-MATRIX.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     EM    - UPPER HALF OF ELEMENT MASS-MATRIX. EM IS A ONE
C             DIMENSIONAL ARRAY WITH DIMENSION: EM(495). THE MASS-
C             MATRIX CONSISTS OF 3*3 SUBMATRIXES. EACH SUBMATRIX IS
C             STORED COLUMNWISE AND THE SUBMATRIXES ARE STORED LINE-
C             WISE.
C     EML   - THE DIAGONAL OF THE LUMPED MASS-MATRIX IF LUMP=1,
C             DIMENSION: EML(30)
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     EM(495)   ,    EML(30)   ,    RN(10)    ,
     1              DNL1(10)  ,    DNL2(10)  ,    DNL3(10)  ,
     2              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     3              RL1(5)    ,    RL2(5)    ,    RL3(5)    ,
     4              RL4(5)    ,    WT(5)     ,
     5              JI(3,3)   ,    BUFMD(10)
C
      DOUBLE PRECISION  JI
C
      IERR=0
      MEK=10
      NEK=3*MEK
      IONE=1
      IDIM=495
      ZM  =0.0
      ZMD =0.0
      EMIJ=0.0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 25 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   25 CONTINUE
      WRITE(IW,6060) RO
      WRITE(IW,6080) INT
      WRITE(IW,6100) LUMP
      IF (IERR) 650,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 40 I=1,10
      BUFMD(I)=0.0
   40 CONTINUE
      DO 50 I=1,495
      EM(I)=0.0
   50 CONTINUE
      DO 70 I=1,30
      EML(I)=0.0
   70 CONTINUE
      DO 90 I=1,10
      RN(I)  =9.0
      DNL1(I)=0.0
      DNL2(I)=0.0
      DNL3(I)=0.0
   90 CONTINUE
      DO 110 I=1,5
      RL1(I)=0.0
      RL2(I)=0.0
      RL3(I)=0.0
      RL4(I)=0.0
      WT (I)=0.0
  110 CONTINUE
C
C     VOLUME COORDINATES FOR CUBIC INTEGRATION FROM HAMMER, MARLOWE
C     AND STROUD.
C
      IF (INT-5) 119,120,119
  119 IERR = -2
      WRITE(IW,6300)
      WRITE(IW,6080) INT
      IF (IPSW-2) 650,590,590
  120 CONTINUE
      ALFA=.50000000000000000
      BETA=.16666666666666666
      RL1(1)=.25
      RL2(1)=.25
      RL3(1)=.25
      RL4(1)=.25
      RL1(2)=ALFA
      RL2(2)=BETA
      RL3(2)=BETA
      RL4(2)=BETA
      RL1(3)=BETA
      RL2(3)=ALFA
      RL3(3)=BETA
      RL4(3)=BETA
      RL1(4)=BETA
      RL2(4)=BETA
      RL3(4)=ALFA
      RL4(4)=BETA
      RL1(5)=BETA
      RL2(5)=BETA
      RL3(5)=BETA
      RL4(5)=ALFA
C
C     WEIGHTS IN CUBIC NUMERIC INTEGRATION. THE VOLUME OF A TETRAHEDRON
C     IS THE GROUND AREA*HEIGTH/3.
C
      WT(1)=-.8/6.
      WT(2)=.45/6.
      WT(3)=.45/6.
      WT(4)=.45/6.
      WT(5)=.45/6.
C
C     COMPUTING THE CONSISTENT OR LUMPED MASS MATRIX BY NUMERIC CUBIC
C     INTEGRATION IN THE TETRAHEDRON (L1,L2,L3 AND L4)
C
      DO 430 M=1,INT
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION.
C
      CALL DN1031(DNL1,DNL2,DNL3,RL1(M),RL2(M),RL3(M),RL4(M))
C     COMPUTE THE JACOBIAN MATRIX, IT'S INVERSE AND IT'S DETERMINANT.
C     ONLY THE DETERMINANT IS USED IN THIS ROUTINE.
C
      CALL JACI31(JI,DETJ,DNL1,DNL2,DNL3,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1
C
      IF (IERR) 170,190,190
  170 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  190 CONTINUE
C
C     THE PRODUCT OF INTEGRATION WEIGHT, THE DETERMINANT AND THE
C     MASS DENSITY.
C
      COF=WT(M)*DETJ*RO
C
C     CALCULATE THE 10 TERMS OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN10(RN,RL1(M),RL2(M),RL3(M),RL4(M))
C
C     CALCULATE THE UPPER TRIANGLE OF EM (ELEMENT MASS MATRIX) IF THIS
C     IS TO BE CONSISTENT MASS MATRIX.
C
      IF (LUMP-1) 210,370,210
  210 CONTINUE
C
      IPK = -8
      DO 270 I=1,MEK
      DO 250 J=I,MEK
      IPK=IPK+9
C
C     PUT THE CONTRIBUTION FROM THIS NODE INTERSECTION (I,J) AND THIS
C     INTEGRATION POINT (M) INTO THE MASS MATRIX.
C
      EM(IPK)=EM(IPK)+COF*RN(I)*RN(J)
C
  250 CONTINUE
  270 CONTINUE
C
      GO TO 420
C
C     CALCULATE THE LUMPED MASS MATRIX IF LUMP=1
C
C     COMPUTE THE TOTAL SUM OF THE MASS AND THE SUM OF THE DIAGONAL
C
  370 CONTINUE
      DO 410 I=1,MEK
      DO 390 J=I,MEK
C
      ZM=ZM+RN(I)*RN(J)*COF
C
  390 CONTINUE
C
      BUFMD(I)=BUFMD(I)+RN(I)*RN(I)*COF
C
  410 CONTINUE
  420 CONTINUE
C
  430 CONTINUE
C
      IF (LUMP-1) 530,475,530
  475 CONTINUE
      DO 480 I=1,MEK
      ZMD=ZMD+BUFMD(I)
  480 CONTINUE
C
C
C     FIND THE TOTAL MASS OF THE ELEMENT, NOT ONLY FOR THE SYMMETRIC
C     PART OF THE MATRIX.
C
      ZM=2.0*ZM-ZMD
C
C     CALCULATE THE SCALED DIAGONAL MATRIX OF M-LUMPED. ZM/ZMD IS THE
C     SCALING FACTOR.
C
      SF=ZM/ZMD
      ICL=0
C
      DO 510 I=1,MEK
C
      EMIJ=SF*BUFMD(I)
C
      DO 490 II=1,3
      ICL=ICL+1
      EML(ICL)=EMIJ
C
  490 CONTINUE
  510 CONTINUE
      GOTO 570
C
  530 CONTINUE
C
C     PUT IN THE EQUAL TERMS IN THE 3*3 #NODE# SUBMATRIXES OF EM (CONS.
C     ELEMENT MASS MATRIX).
C
      IPK=-8
C
      DO 560 I=1,MEK
      DO 550 J=I,MEK
      IPK=IPK+9
C
      EM(IPK+4)=EM(IPK)
      EM(IPK+8)=EM(IPK)
C
  550 CONTINUE
  560 CONTINUE
C
C     PRINT OF OUTPUT ?
C
  570 IF (IPSW-2) 670,590,590
  590 CONTINUE
      WRITE(IW,6500) IEL
      IF (LUMP-1) 610,630,610
  610 CALL MPRT30(EM,IONE,IDIM,IW)
      GO TO 650
  630 CALL MPRT30(EML,IONE,NEK,IW)
  650 CONTINUE
      WRITE(IW,6520) IEL
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING ITET35 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,21HSPECIFIC MASS (RO)=  ,1PE10.4)
 6080 FORMAT(/5X,54HNUMBER OF INTEGRATION POINTS IN THE TETRAHEDRON (INT
     1)=,I3,3X,16HLEGAL VALUE IS 5)
 6100 FORMAT(/5X,19HTHE LUMP SWITCH IS:,I4)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM ITET35 ***)
C
C
 6500 FORMAT(//,5X,35HELEMENT MASS MATRIX FOR ELEMENT NO: ,I7)
 6520 FORMAT(/28H LEAVING ITET35 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE NTN10(RNTN,RNTCN,XG,YG,ZG,IOPT,JS,INTT,RL1,RL2,RL3,WK,
     1                 IER,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  NTN10
C
C     NTN10 CALCULATES THE INTEGRAL OF N TRANSPOSED MULTIPLIED WITH N
C     FOR ONE SPECIFIED SURFACE IN A 10 NODE ISOPARAMETRIC TETRAHEDRON.
C     THE CHOICE OF SURFACE IS DEPENDANT ON THE VALUE OF JS. IF IOPT=3,
C     THEN THE PROGRAM WILL ASSUME THE PRESSURE TO BE NORMAL TO THE
C     SURFACE AND CONSEQUENTLY MULTIPLY THE TERMS IN NTN WITH THE
C     CORRESPONDING DIRECTION COSINES FOR THE SURFACE NORMAL. THIS MEANS
C     THAT THE INTEGRAL WILL BE STORED IN ARRAY RNTN IF IOPT=2 AND IN
C     RNTCN IF IOPT=3.
C
C     FOR IOPT=2 (COMPONENT PRESSURE) THE INTEGRAL SHOULD HAVE BEEN
C     STORED IN ARRAY RNTN(18,18,NSURF), WHERE NSURF IS THE ELEMENT'S
C     NUMBER OF SURFACES, BUT SINCE THE DIAGONAL TERMS IN THE 3*3 'NODE'
C     SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL TERMS IN THE 3*3 MATRI-
C     XES ARE ZERO IT IS SUFFICIENT WITH THE DIMENSION RNTN(6,6,NSURF).
C
C     FOR IOPT=3 (NORMAL PRESSURE) THE INTEGRAL SHOULD HAVE BEEN STORED
C     IN AN ARRAY RNTCN(18,18,NSURF), BUT SINCE COLUMN NO. 2,3,5,6,8,9,
C     11,12 ETC. ARE ZERO, IT IS SUFFICIENT WITH THE DIMENSION
C     RNTCN(18,6,NSURF).
C     IT IS ADVICEABLE TO EQUIVALENCE RNTN AND RNTCN OUTSIDE THIS PRO-
C     GRAM DUE TO THEIR SIZE AND EXCLUSIVENESS.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 29.11.74 / 01      LAST UPDATING DATE:
C***********************************************************************
C   INPUT:
C     XG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. DIMENSION
C     YG    - OF XG,YG,ZG IS 10.
C     ZG    -
C     IOPT  - OPTION. IOPT=2: THE ROUTINE CALCULATES THE INTEGRAL OVER
C             SURFACE NO. JS OF N TRANSPOSED MULTIPLIED WITH N (FOR
C             COMPONENT PRESSURE).
C             IOPT=3: THE ROUTINE CALCULATES THE INTEGRAL OVER SURFACE
C             NO. JS OF N TRANSPOSED MULTIPLIED WITH THE DIRECTION
C             COSINES AND N (FOR NORMAL PRESSURE).
C     JS    - THE TETRAHEDONS SURFACE NUMBER FOR WHICH THE INTEGRAL
C             IS TO BE TAKEN.
C     INTT  - NUMBER OF INTEGRATION POINTS IN THE SPECIFIED SURFACE OF
C             THE TETRAHEDON. LEGAL VALUES ARE 1,3,4 AND 7
C     RL1   - POINTS IN VOLUME COORDINATES WHERE THE INTEGRAL IS TO BE
C     RL2   - SAMPLED (GIVEN FOR SURFACE NO. 4 WHERE RL4=3). DIMENSION:
C     RL3   - RL1(7),RL2(7),RL3(7).
C     WK    - WEIGHT FACTORS FOR THE INTEGRATION. DIM. WK(7).
C     IER   - ARRAY WITH LOCAL ELEMENT NODE NUMBERS FOR EACH OF THE 4
C             SURFACES. DIM. IER(4,6)
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<3: NO PRINT.
C
C   OUTPUT:
C     RNTN  - ARRAY WITH DIMENSION RNTN(6,6,NSURF). RNTN CONTAINS THE
C             INTEGRAL OVER SURFACE NO. JS OF N TRANSPOSED MULTIPLIED
C             WITH N, IF IOPT=2. THE INTEGRAL IS STORED IN PAGE (THE
C             THIRD DIMENSION) NO. JS OF RNTN.
C     RNTCN - ARRAY WITH DIMENSION RNTCN(18,6,NSURF). RNTCN CONTAINS THE
C             INTEGRAL OVER SURFACE NO. JS OF N TRANSPOSED MULTIPLIED
C             WITH THE DIRECTION COSINES AND N, IF IOPT=3. THE INTEGRAL
C             IS STORED IN PAGE NO. JS OF RNTCN.
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN ERROR
C             DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     RNTN(6,6,4),   RNTCN(18,6,4), IER(4,6)  ,
     1              XG(10)    ,    YG(10)    ,    ZG(10)    ,
     2              RL1(7)    ,    RL2(7)    ,    RL3(7)    ,
     3              RK1(7)    ,    RK2(7)    ,    RK3(7)    ,
     4              RK4(7)    ,    WK(7)     ,    RN(10)    ,
     5              DNL1(10)  ,    DNL2(10)  ,    DNL3(10)  ,
     6              V1(3)     ,    V2(3)     ,
     7              DCOSI(3)  ,    JA(3,3)
C
      DOUBLE PRECISION JA
C
C     SET CONSTANTS
C
      NSFNOD=6
      IONE=1
      NSURF=4
      MEK=10
      NSFDOF=NSFNOD*3
      NINTT=7
C
      IERR=0
      NN=0
      MM=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-3) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I =1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) IOPT,JS
      WRITE(IW,6080) INTT
      WRITE(IW,6100)
      CALL MPRT30(RL1,IONE,NINTT,IW)
      CALL MPRT30(RL2,IONE,NINTT,IW)
      CALL MPRT30(RL3,IONE,NINTT,IW)
      WRITE(IW,6120)
      CALL MPRT30(WK,IONE,NINTT,IW)
      WRITE(IW,6140)
      WRITE(IW,6160) ((IER(I,J),J=1,NSFNOD),I=1,NSURF)
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      GOTO(1270,60,100),IOPT
   60 CONTINUE
      DO 90 I=1,NSFNOD
      DO 70 J=1,NSFNOD
      RNTN(I,J,JS)=0.0
   70 CONTINUE
   90 CONTINUE
      GOTO 150
  100 CONTINUE
C
      DO 130 I=1,NSFDOF
      DO 110 J=1,NSFNOD
      RNTCN(I,J,JS)=0.0
  110 CONTINUE
  130 CONTINUE
  150 CONTINUE
C
C     SET THE VALUES FOR THE SPECIFIC SURFACE.
C
      GO TO (200,300,400,500),JS
C
C     SURFACE NO. 1 (L1=0.0)
C
  200 CONTINUE
      MM=3
      NN=2
      DO 230 I=1,NINTT
      RK1(I)=0.0
      RK2(I)=RL1(I)
      RK3(I)=RL2(I)
      RK4(I)=RL3(I)
  230 CONTINUE
      GO TO 570
C
C     SURFACE NO. 2 (L2=0.0)
C
  300 CONTINUE
      MM=1
      NN=3
      DO 330 I=1,NINTT
      RK1(I)=RL1(I)
      RK2(I)=0.0
      RK3(I)=RL2(I)
      RK4(I)=RL3(I)
  330 CONTINUE
      GO TO 570
C
C     SURFACE NO. 3  (L3=0.0)
C
  400 CONTINUE
      MM=2
      NN=1
      DO 430 I=1,NINTT
      RK1(I)=RL1(I)
      RK2(I)=RL2(I)
      RK3(I)=0.0
      RK4(I)=RL3(I)
  430 CONTINUE
      GO TO 570
C
C     SURFACE NO. 4 (L4=0.0)
C
  500 CONTINUE
C
C     CONSERNING THE SURFACE NORMAL, THIS SURFACE WILL HAVE SPECICAL
C     TREATMENT BELOW.
C
      DO 530 I=1,NINTT
      RK1(I)=RL1(I)
      RK2(I)=RL2(I)
      RK3(I)=RL3(I)
      RK4(I)=0.0
  530 CONTINUE
C
  570 CONTINUE
C
C     LINEAR,QUADRATIC,CUBIC OR QUINTIC NUMERIC INTEGRATION OVER THE
C     SPECIFIED TRIANGULAR SURFACE. THE INTEGRAL IS CALCULATED FOR NTN
C     OR NTCN DEPENDING ON THE VALUE OF IOPT (2 OR 3).
C
      DO 970 K=1,INTT
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN1031(DNL1,DNL2,DNL3,RK1(K),RK2(K),RK3(K),RK4(K))
C
C     COMPUTE THE JACOBIAN MATRIX
C
      CALL JACO31(JA,DNL1,DNL2,DNL3,XG,YG,ZG,MEK)
C
C     CALCULATE THE RELATION BETWEEN DA (DIFFERENTIAL OF A (AREA)) AND
C     FOR INSTANCE DL1*DL3 (THE DIFFERENTIAL OF TWO VOLUME COORDINATES
C     IN THE SPECIFIED SURFACE). THIS RELATION IS LATER CALLED THE 'MAP
C     FACTOR'.
C
C     SPECIAL TREATEMENT FOR SURFACE NO. 4:
C
      IF (JS-4) 670,630,670
  630 CONTINUE
      DO 650 I=1,3
      V1(I)=JA(1,I)-JA(3,I)
      V2(I)=JA(2,I)-JA(3,I)
  650 CONTINUE
      GO TO 710
  670 CONTINUE
      DO 690 I=1,3
      V1(I)=JA(MM,I)
      V2(I)=JA(NN,I)
  690 CONTINUE
C
  710 CALL DADCOS(V1,V2,SVXV,DCOSI)
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND 'MAP FACTOR'.
C
      COF=WK(K)*SVXV
C
C     CALCULATE THE VALUES OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN10(RN,RK1(K),RK2(K),RK3(K),RK4(K))
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT IN THE
C     SPECIFIED SURFACE OF NTN IF THE LOADS CONNECTED TO THIS
C     CALCULATION ARE COMPNENT PRESSURE (IOPT=2)
C
      IF (IOPT-2) 830,730,830
  730 CONTINUE
C
      DO 770 I=1,NSFNOD
      II=IER(JS,I)
      DO 750 J=I,NSFNOD
      JJ=IER(JS,J)
C
      RNTN(I,J,JS)=RNTN(I,J,JS)+COF*RN(II)*RN(JJ)
C
  750 CONTINUE
  770 CONTINUE
      GO TO 970
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT IN THE
C     SPECIFIED SURFACE OF NTCN IF LOADS CONNECTED TO THIS CALCULATION
C     ARE NORMAL PRESSURE (IOPT=3).
  830 CONTINUE
      DO 890 I=1,NSFNOD
      NI=(I-1)*3
      II=IER(JS,I)
      DO 870 J=I,NSFNOD
      JJ=IER(JS,J)
C
      RNTCNI=COF*RN(II)*RN(JJ)
C
C     MULTIPLY THE TERM WITH THE CORRESPONDING DIRECTION COSINE.
C
      DO 850 N=1,3
      NII=NI+N
      RNTCN(NII,J,JS)=RNTCN(NII,J,JS)+RNTCNI*DCOSI(N)
C
  850 CONTINUE
  870 CONTINUE
  890 CONTINUE
C
  970 CONTINUE
C
      IF (IOPT-2) 1050,990,1050
C
C     IF IOPT=2, ADD IN THE SYMMETRIC PART OF RNTN
C
  990 CONTINUE
      DO 1030 I=2,NSFNOD
      I1=I-1
      DO 1010 J=1,I1
      RNTN(I,J,JS)=RNTN(J,I,JS)
 1010 CONTINUE
 1030 CONTINUE
      GO TO 1130
C
C     IF IOPT=3, ADD IN THE SYMMETRIC PART OF RNTCN.
C
 1050 CONTINUE
      DO 1110 I=2,NSFNOD
      I1=I-1
      I2=(I-1)*3
      DO 1090 J=1,I1
      J2=(J-1)*3
      DO 1070 N=1,3
      NI=I2+N
      NJ=J2+N
C
      RNTCN(NI,J,JS)=RNTCN(NJ,I,JS)
C
 1070 CONTINUE
 1090 CONTINUE
 1110 CONTINUE
C
 1130 CONTINUE
C
C     PRINT OF OUTPUT ?
      IF (IPSW-3) 1270,1150,1150
 1150 CONTINUE
      WRITE(IW,6500) JS,IEL
      IF (IOPT-2) 1210,1170,1210
 1170 CONTINUE
      DO 1190 I=1,NSFNOD
      WRITE(IW,6520) (RNTN(I,J,JS),J=1,NSFNOD)
 1190 CONTINUE
      GO TO 1250
 1210 DO 1230 I=1,NSFDOF
      WRITE(IW,6520) (RNTCN(I,J,JS),J=1,NSFNOD)
 1230 CONTINUE
 1250 WRITE(IW,6540) IEL,JS
C
C
 1270 CONTINUE
C
C
 6000 FORMAT(///28H ENTERING NTN10 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,'PRESSURE OPTION (COMPONENT (2) OR NORMAL(3)) (IOPT)',
     1'=',I4,3X,'SURFACE NO. (JS)=',I4)
 6080 FORMAT(/5X,51HNUMBER OF INTEGRATION POINTS IN ONE SURFACE (INTT)=,
     1I4)
 6100 FORMAT(/5X,59HVOLUME COORDINATES L1,L2,L3 AND FOR THE INTEGRATION
     1 POINTS:)
 6120 FORMAT(/5X,40HWEIGHTS FOR THE INTEGRATION POINTS (WK):)
 6140 FORMAT(/5X,87HTHE ARRAY (IER) CONTAINING THE LOCAL NODES CONNECTED
     1TO EACH OF THE ELEMENT'S SURFACES :)
 6160 FORMAT(5X,6I8)
C
 6500 FORMAT(//5X,14HPAGE NO. (JS):,I3,3X,49HOF THE ARRAY RNTN OR RNTCN
     1FOR ELEMENT NO. (IEL):,I7)
 6520 FORMAT(5X,1P6E12.4)
 6540 FORMAT(//,30H LEAVING NTN10 FOR ELEMENT NO:,I7,3X,11HSURFACE NO:,
     1I4)
C
      RETURN
      END
      SUBROUTINE RN10(RN,RL1,RL2,RL3,RL4)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  RN10
C
C
C     RN10 CALCULATES THE 10 TERMS IN THE SHAPE FUNCTION FOR A GIVEN
C     POINT IN THE L1,L2,L3, AND L4 COORDINATE SYSTEM WITHIN A
C     TEN NODES ISOPARAMETRIC TETRAHEDRON.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION :05.07.74 / 01      LAST UPDATING DATE :
C
C***********************************************************************
C
C
C   INPUT:
C
C     RL1   -
C     RL2   - TRIANGULAR VOLUME COORDINATES FOR THE POINT IN THE
C     RL3   - TETRAHEDRON
C     RL4   -
C
C   OUTPUT:
C     RN    - AN ARRAY CONTAINING THE 10 TERMS OF THE SHAPE FUNCTION.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     RN(10)
C
C
C
C     CALCULATE THE VALUE THE SHAPE FUNCTION IN THE POINT.
C
C     CORNER NODES:
      RN( 1)=RL1*(2.*RL1-1.)
      RN( 3)=RL2*(2.*RL2-1.)
      RN( 5)=RL3*(2.*RL3-1.)
      RN(10)=RL4*(2.*RL4-1.)
C     MID SIDE NODES:
      RN( 2)=4.*RL1*RL2
      RN( 4)=4.*RL2*RL3
      RN( 6)=4.*RL3*RL1
      RN( 7)=4.*RL1*RL4
      RN( 8)=4.*RL2*RL4
      RN( 9)=4.*RL3*RL4
C
C
      RETURN
      END
      SUBROUTINE XYZ10(X,Y,Z,XG,YG,ZG,RL1,RL2,RL3,RL4,IEL,IW,IPSW)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  XYZ10
C
C
C     YXZ10 CALCULATES THE GLOBAL COORDINATES FOR POINTS IN AN ISO-
C     PARAMETRIC TETRAHEDRON WITH 10 NODES.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 09.05.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C    INPUT:
C
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY OF THE
C     ZG    - ELEMENT. DIMENSION OF XG,YG AND ZG IS 10.
C     RL1   -
C     RL2   - TRIANGULAR VOLUME COORDINATES FOR THE POINT IN THE
C     RL3   - TETRAHEDRON
C     RL4   -
C     IEL   - ELEMENT IDENTIFICATION
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. NO PRINT WHEN IPSW<3.
C
C
C   OUTPUT:
C
C     X     -
C     Y     - GLOBAL COORDINATES FOR THE POINT IN THE TETRAHEDRON.
C     Z     -
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     XG(10)    ,    YG(10)    ,    ZG(10)    ,    RN(10)
C
      MEK=10
C
C     PRINT OF INPUT ?
C
      IF(IPSW-3) 50,10,10
   10 CONTINUE
      WRITE (IW,6000) IEL
      WRITE (IW,6020)
      DO 30 I1=1,MEK
      WRITE (IW,6040) I1,XG(I1),YG(I1),ZG(I1)
   30 CONTINUE
      WRITE (IW,6060) RL1,RL2,RL3,RL4
   50 CONTINUE
C
C     CALCULATE THE VALUE THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN10(RN,RL1,RL2,RL3,RL4)
C
C     NULLIFY  X,Y  AND Z
C
      X=0.0
      Y=0.0
      Z=0.0
C
C     CALCULATE THE X,Y AND Z COORDINATES IN THE POINT
C
      DO 70 I=1,MEK
      X=X+RN(I)*XG(I)
      Y=Y+RN(I)*YG(I)
      Z=Z+RN(I)*ZG(I)
   70 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-3) 110,90,90
   90 WRITE (IW,6120) X,Y,Z
      WRITE (IW,6140) IEL
  110 CONTINUE
C
 6000 FORMAT(///31H ENTERING XYZ10 FOR ELEMENT NO:,I7)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:',
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,35HTRIANGULAR VOLUME COORDINATES: RL1=,F7.4,3X,4HRL2=,
     1     F7.4,3X,4HRL3=,F7.4,3X,4HRL4=,F7.4)
 6120 FORMAT(/5X,40HTHE GLOBAL COORDINATES IN THE POINT:  X=,1PE12.5,3X,
     1     2HY=,1PE12.5,3X,2HZ=,1PE12.5)
 6140 FORMAT(/30H LEAVING XYZ10 FOR ELEMENT NO:,I7)
C
      RETURN
      END
