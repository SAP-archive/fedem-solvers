C     SPDX-FileCopyrightText: 2023 SAP SE
C
C     SPDX-License-Identifier: Apache-2.0
C
C     This file is part of FEDEM - https://openfedem.org
C
      SUBROUTINE IHEX31(EK,XG,YG,ZG,YOUNG,RNY,IEL,INT1,IW,IPSW,IERR)
C
C     ******************************************************************
C
C         E L E M E N T  L I B R A R Y  SUBROUTINE IHEX31
C
C           IHEX31 COMPUTES THE STIFFNESS MATRIX OF AN ISOPARAMETRIC
C           HEXAHEDRON WITH 20 NODES THE STIFFNESS MATRIX IS REFERRED
C           TO THE GLOBAL CARTESIAN COORDINATE SYSTEM
C
C           PROGRAMMED BY : J.H.WERGELAND    DNV
C
C           DATE/VERSION  :30.11.73/01
C
C     ******************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     EK(1890)      ,DNXI(20)      ,DNET(20)      ,
     1              DNZE(20)      ,JI(3,3)       ,
     2              HI(4)         ,WT(4,4)       ,XV(4,4)       ,
     3              XI(4)         ,ET(4)         ,ZE(4)         ,
     5              XG(20)        ,YG(20)        ,ZG(20)        ,
     6              B(20,3)       ,DB(20,6,3)    ,EKIJ(3,3)
C
C
      DOUBLE PRECISION JI
C
C     NULLIFY ARRAYS
C
      MEK=20
      NEK=3*MEK
      DO 10 I1=1,1890
      EK(I1)=0.
   10 CONTINUE
C
      DO 40 I1=1,4
      DO 30 J1=1,4
      XV(I1,J1)=0.
      WT(I1,J1)=0.
   30 CONTINUE
   40 CONTINUE
C
C     PRINT ?
C
      IF (IPSW-2) 65,50,50
   50 WRITE(IW,6000) IEL
      WRITE(IW,6010)
      DO 60 I1=1,20
      WRITE(IW,6020) I1,XG(I1),YG(I1),ZG(I1)
   60 CONTINUE
      WRITE(IW,6030) YOUNG,RNY
      WRITE(IW,6040) INT1
   65 CONTINUE
C
C     CONSTANTS IN ELASTICTY MATRIX
C
      A=YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      A1=A*RNY/(1.-RNY)
      A2=(1.-2.*RNY)/(2.*(1.-RNY))*A
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,2)=-0.577350269
      XV(2,2)=-XV(1,2)
      XV(1,3)=-0.774596669
      XV(3,3)=-XV(1,3)
      XV(1,4)=-0.861136312
      XV(2,4)=-0.339981043
      XV(3,4)=-XV(2,4)
      XV(4,4)=-XV(1,4)
C
C     WEIGHING FUNCTION IN GAUSSIAN QUADRATURE INTEGRATION
C
      WT(1,1)=2.
      WT(1,2)=1.
      WT(2,2)=1.
      WT(1,3)=0.555555556
      WT(2,3)=0.888888889
      WT(3,3)=WT(1,3)
      WT(1,4)=0.347854845
      WT(2,4)=0.652145155
      WT(3,4)=WT(2,4)
      WT(4,4)=WT(1,4)
C
      DO 70 I=1,4
      XI(I)=XV(I,INT1)
      ET(I)=XV(I,INT1)
      ZE(I)=XV(I,INT1)
      HI(I)=WT(I,INT1)
   70 CONTINUE
C
C
C     THE GAUSSIAN QUADRATURE INTEGRATION COMPUTING THE STIFFNESS MATRIX
C
C
      DO 290 L=1,INT1
      DO 280 M=1,INT1
      DO 270 N=1,INT1
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION
C
C-OLD CALL DN2031(DNXI,DNET,DNZE,XI,ET,ZE)
      CALL DN2031(DNXI,DNET,DNZE,XI(N),ET(M),ZE(L))
C
C
C     COMPUTE THE JACOBIAN MATRIX, ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNXI,DNET,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
      IF(IERR)320,200,320
C
  200 CONTINUE
C
C     COMPUTE THE ARRAY B AND DB
C
      DO 210 I=1,MEK
C
      B(I,1)=JI(1,1)*DNXI(I)+JI(1,2)*DNET(I)+JI(1,3)*DNZE(I)
      B(I,2)=JI(2,1)*DNXI(I)+JI(2,2)*DNET(I)+JI(2,3)*DNZE(I)
      B(I,3)=JI(3,1)*DNXI(I)+JI(3,2)*DNET(I)+JI(3,3)*DNZE(I)
C
      DB(I,1,1)=B(I,1)*A
      DB(I,2,1)=B(I,1)*A1
      DB(I,3,1)=DB(I,2,1)
      DB(I,4,1)=B(I,2)*A2
C-OLD DB(I,5,1)=B(I,3)*A2
C-OLD DB(I,6,1)=0.
      DB(I,5,1)=0.
      DB(I,6,1)=B(I,3)*A2
      DB(I,1,2)=B(I,2)*A1
      DB(I,2,2)=B(I,2)*A
      DB(I,3,2)=DB(I,1,2)
      DB(I,4,2)=B(I,1)*A2
C-OLD DB(I,5,2)=0.
C-OLD DB(I,6,2)=DB(I,5,1)
      DB(I,5,2)=DB(I,6,1)
      DB(I,6,2)=0.
      DB(I,1,3)=B(I,3)*A1
      DB(I,2,3)=DB(I,1,3)
      DB(I,3,3)=B(I,3)*A
      DB(I,4,3)=0.
      DB(I,5,3)=DB(I,4,1)
      DB(I,6,3)=DB(I,4,2)
C
  210 CONTINUE
C
      COF=HI(L)*HI(M)*HI(N)*DETJ
      DO 215 I=1,MEK
      B(I,1)=COF*B(I,1)
      B(I,2)=COF*B(I,2)
      B(I,3)=COF*B(I,3)
  215 CONTINUE
C
C     CALCULATE UPPER DIAGONAL OF EK
C
      IPK=0
      DO 260 I=1,MEK
      DO 250 J=I,MEK
C
C
      EKIJ(1,1)=B(I,1)*DB(J,1,1)+B(I,2)*DB(J,4,1)+B(I,3)*DB(J,6,1)
      EKIJ(2,1)=B(I,2)*DB(J,2,1)+B(I,1)*DB(J,4,1)+B(I,3)*DB(J,5,1)
      EKIJ(3,1)=B(I,3)*DB(J,3,1)+B(I,2)*DB(J,5,1)+B(I,1)*DB(J,6,1)
      EKIJ(1,2)=B(I,1)*DB(J,1,2)+B(I,2)*DB(J,4,2)+B(I,3)*DB(J,6,2)
      EKIJ(2,2)=B(I,2)*DB(J,2,2)+B(I,1)*DB(J,4,2)+B(I,3)*DB(J,5,2)
      EKIJ(3,2)=B(I,3)*DB(J,3,2)+B(I,2)*DB(J,5,2)+B(I,1)*DB(J,6,2)
      EKIJ(1,3)=B(I,1)*DB(J,1,3)+B(I,2)*DB(J,4,3)+B(I,3)*DB(J,6,3)
      EKIJ(2,3)=B(I,2)*DB(J,2,3)+B(I,1)*DB(J,4,3)+B(I,3)*DB(J,5,3)
      EKIJ(3,3)=B(I,3)*DB(J,3,3)+B(I,2)*DB(J,5,3)+B(I,1)*DB(J,6,3)
C
      DO 240 II=1,3
      DO 230 JJ=1,3
      IPK=IPK+1
      EK(IPK)=EK(IPK)+EKIJ(JJ,II)
  230 CONTINUE
  240 CONTINUE
C
  250 CONTINUE
  260 CONTINUE
C
  270 CONTINUE
  280 CONTINUE
  290 CONTINUE
C
C     PRINT ?
C
      IF(IPSW-2)340,300,300
  300 CONTINUE
      WRITE(IW,6160) IEL
      CALL MPRT30(EK,1,1890,IW)
      IF(IERR)320,330,320
  320 CONTINUE
      WRITE(IW,6060)
      WRITE(IW,6070) IERR
      WRITE(IW,6080) IEL
      WRITE(IW,6090) IEL
      GO TO 340
  330 CONTINUE
      WRITE(IW,6090) IEL
  340 CONTINUE
C
 6000 FORMAT(////29H ENTERING IHEX31 FOR ELEMENT ,I7,2H :)
 6010 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6020 FORMAT(I9,6X,1P3E12.4)
 6030 FORMAT(/5X,21HYOUNGS MODULUS (E)=  ,1PE10.4,5X,24HPOISSONS NUMBER
     2 (RNY)=  ,0PF5.3)
 6040 FORMAT(/5X,57HNUMBER OF INTEGRATION POINTS IN EACH DIRECTION (INT1
     2) =  ,I1)
 6060 FORMAT(///33H *** ERROR RETURN FROM IHEX31 *** )
 6070 FORMAT(/17H     ERROR FLAG =,I3)
 6080 FORMAT(/13H     ELEMENT ,I7,11H   IN ERROR)
 6090 FORMAT(/28H LEAVING IHEX31 FOR ELEMENT ,I7)
 6160 FORMAT(//33H     ELEMENT STIFFNESS MATRIX NO.,I7)
      RETURN
      END
      SUBROUTINE IHEX32(SIG,XGP,YGP,ZGP,V,EPS0I,XG,YG,ZG,YOUNG,RNY,
     1                  NSTRXI,NSTRET,NSTRZE,IOPXP,IOPE0,
     2                  IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C   F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IHEX32
C
C
C     IHEX32 CALCULATES THE STRESSES IN POINTS SPECIFIED WITH NSTRXI,
C     NSTRET AND NSTRZE, INSIDE AN ISOPARAMETRIC HEXAHEDRON.
C     THE NUMBER OF STRESS POINTS IS NSTRXI*NSTRET*NSTRZE,
C     OR 27 (THE NODAL POINTS) IF NSTRXI*NSTRET*NSTRZE IS ZERO.
C     IHEX32 CALCULATES ALSO THE GLOBAL COORDINATES ZGP, YGP AND ZGP
C     IN THE STRESS POINTS.
C     THE STRESSES ARE REFERRED TO THE GLOBAL CARTESIAN COORDINATE
C     SYSTEM, ACCORDING TO: SIGM=D(EPS-EPS0) WHERE EPS0 IS INITIAL
C     STRAIN, AND: EPS=B'*V
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 15.05.74 / 01       LAST UPDATING DATE:
C
C     REVISED BY: Knut Morten Okstad  21.05 2010
C                 Reinstated stress evaluation in Gauss points again.
C                 Evaluation at nodes is now performed if any of the
C                 arguments NSTRXI, NSTRET, NSTRZE is zero.
C
C***********************************************************************
C
C   INPUT:
C
C     V     - THE DISPLACEMENTS U,V AND W IN THE 20 NODES OF THE
C             ELEMENT. STORED IN A ONE DIMENSIONAL ARRAY:(U1,V1,W1,
C             U2,V2,W2,------ U20,V20,W20). DIMENSION OF V IS 60.
C     EPS0I - INITIAL STRAIN IN THE THREE GLOBAL DIRECTIONS. E.G.:
C             (ALFAX*T,ALFAY*T,ALFAZ*T) FOR THE NODES. THE VALUE IN THE
C             MIDDLE NODES SHOULD BE THE MEAN VALUE OF THE TWO
C             NEIGHBOURING NODES. DIMENSION OF EPS0I IS 60.
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY OF THE
C     ZG    - ELEMENT. DIMENSION OF XG,YG AND ZG IS 20.
C     YOUNG - YOUNGS MODULUS OF ELASTICITY.
C     RNY   - POISSONS RATIO.
C     NSTRXI- NUMBER OF STRESS POINTS IN THE XI DIRECTION.
C             LEGAL VALUES ARE 0,1,2,3 AND 4.
C     NSTRET- NUMBER OF STRESS POINTS IN THE ETA DIRECTION.
C             LEGAL VALUES ARE 0,1,2,3 AND 4.
C     NSTRZE- NUMBER OF STRESS POINTS IN THE ZETA DIRECTION.
C             LEGAL VALUES ARE 0,1,2,3 AND 4.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT- UNLESS ERROR.
C
C   OUTPUT:
C
C     SIG   - THE STRESSES COLUMNWISE FOR ALL THE STRESS-POINTS. THE
C             STRESSES ARE: SIGMX, SIGMY, SIGMZ, TAUXY, TAUXZ, TAUYZ.
C             SIG HAS THE DIMENSION: (6,NSTRXI*NSTRET*NSTRZE)
C     XGP   -
C     YGP   - GLOBAL COORDINATES FOR THE STRESS-POINTS. XGP, YGP AND
C     ZGP   - ZGP HAS THE DIMENSION: (NSTRXI*NSTRET*NSTRZE).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR WAS DETECTED.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     SIG(6,64) ,    XGP(64)   ,    YGP(64)   ,
     1              ZGP(64)   ,    V(60)     ,    EPS0(3)   ,
     2              XG(20)    ,    YG(20)    ,    ZG(20)    ,
     3              B(3)      ,    JI(3,3)   ,
     4              DNXI(20)  ,    DNET(20)  ,    DNZE(20)  ,
     5              XI(4)     ,    ET(4)     ,    ZE(4)     ,
     6              DB(20,6,3),    XV(4,4)   ,    RN(20)    ,
     7              EPS0I(60)
C
      DOUBLE PRECISION JI
C
      IERR=0
      MEK=20
      NSTR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 CONTINUE
      WRITE(IW,6020)
      CALL MPRT30(V,60,1,IW)
      IF (IOPE0) 22,22,21
   21 WRITE(IW,6040)
      CALL MPRT30(EPS0I,60,1,IW)
   22 WRITE(IW,6060)
      DO 25 I1=1,MEK
      WRITE(IW,6080) I1,XG(I1),YG(I1),ZG(I1)
   25 CONTINUE
      WRITE(IW,6100) YOUNG,RNY
      WRITE(IW,6120) NSTRXI,NSTRET,NSTRZE
      IF (IERR) 630,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 90 I=1,4
      DO 90 J=1,4
      XV(I,J)=0.0
   90 CONTINUE
C
      DO 130 I=1,6
      DO 130 J=1,27
      SIG(I,J)=0.0
  130 CONTINUE
C
C     CONSTANTS IN ELASTICITY MATRIX.
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
      D2=D*(1.-2.*RNY)/(2.*(1.-RNY))
C
C     TEST FOR LEGAL VALUE OF NSTRXI,NSTRET OR NSTRZE. IF NOT-  *ERROR*
C
      IF (NSTRXI)   200,150,150
  150 IF (NSTRXI-4) 160,160,200
  160 IF (NSTRET)   200,170,170
  170 IF (NSTRET-4) 180,180,200
  180 IF (NSTRZE)   200,190,190
  190 IF (NSTRZE-4) 210,210,200
  200 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) NSTRXI,NSTRET,NSTRZE
      IF (IPSW-2) 20,550,550
  210 CONTINUE
C
C     SET THE NORMALIZED COORDINATES FOR THE STRESS POINTS.
C     THE POINTS ARE 1,2,3 OR 4 GAUSS POINTS.
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C     CHOOSE THE XI,ETA AND ZETA COORDINATES FOR THE STRESS-POINTS.
C
      NSTR = NSTRXI*NSTRET*NSTRZE
      IF (NSTR) 230,230,220
C
  220 CONTINUE
      NXI = NSTRXI
      NETA = NSTRET
      NZETA = NSTRZE
      DO 225 I = 1,4
         XI(I) = XV(I,NSTRXI)
         ET(I) = XV(I,NSTRET)
         ZE(I) = XV(I,NSTRZE)
  225 CONTINUE
      GOTO 400
C
C     SET THE NORMALIZED COORDINATES FOR THE 27 NODAL STRESS POINTS.
C     20 OF THESE POINTS ARE IDENTICAL WITH THE 20 NODAL POINTS.
C
  230 NSTR = 27
      NXI = 3
      NETA = 3
      NZETA = 3
      DO 235 I = 1,3
         XI(I) = I - 2.0
         ET(I) = XI(I)
         ZE(I) = XI(I)
  235 CONTINUE
C
  400 CONTINUE
      N=0
C
C     CALCULATES THE STRESS-MATRIX SIG(6,NSTR) FOR THE ELEMENT.
C
      DO 530  M=1,NZETA
      DO 520  L=1,NETA
      DO 510  K=1,NXI
C
C     CALCULATE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION FOR THIS
C     STRESS-POINT.
C
      CALL DN2031(DNXI,DNET,DNZE,XI(K),ET(L),ZE(M))
C
C     CALCULATES THE GLOBAL COORDINATES FOR THE STRESS-POINTS.
C
      N=N+1
      IF (IOPXP) 402,402,401
  401 CALL XYZ20(XGP(N),YGP(N),ZGP(N),XG,YG,ZG,XI(K),ET(L),ZE(M),IEL,IW,
     1           IPSW)
C
C     COMPUTE THE JACOBIAN MATRIX, ITS INVERSE AND ITS DETERMINANT
C     FOR THE POINT.
C
  402 CALL JACI31(JI,DETJ,DNXI,DNET,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1.
C
      IF (IERR) 410,430,430
  410 WRITE(IW,6300)
      IF (IPSW-2) 630,550,550
  430 CONTINUE
C
C     COMPUTE THE MATRIXES B AND D*B  (B(3))
C
      DO 450 J=1,MEK
C
      B(1)=JI(1,1)*DNXI(J)+JI(1,2)*DNET(J)+JI(1,3)*DNZE(J)
      B(2)=JI(2,1)*DNXI(J)+JI(2,2)*DNET(J)+JI(2,3)*DNZE(J)
      B(3)=JI(3,1)*DNXI(J)+JI(3,2)*DNET(J)+JI(3,3)*DNZE(J)
C
      DB(J,1,1)=D *B(1)
      DB(J,2,1)=D1*B(1)
      DB(J,3,1)=DB(J,2,1)
      DB(J,4,1)=D2*B(2)
      DB(J,5,1)=D2*B(3)
      DB(J,6,1)=0.0
C
      DB(J,1,2)=D1*B(2)
      DB(J,2,2)=D *B(2)
      DB(J,3,2)=DB(J,1,2)
      DB(J,4,2)=D2*B(1)
      DB(J,5,2)=0.0
      DB(J,6,2)=DB(J,5,1)
C
      DB(J,1,3)=D1*B(3)
      DB(J,2,3)=DB(J,1,3)
      DB(J,3,3)=D *B(3)
      DB(J,4,3)=0.0
      DB(J,5,3)=DB(J,4,2)
      DB(J,6,3)=DB(J,4,1)
C
  450 CONTINUE
C
C     CALCULATION OF THE STRESS MATRIX SIG(6,NSTRXI*NSTRET*NSTRZE)
C     SIGMA=(D*B')*V
C
      DO 490 I=1,MEK
      I1=(I-1)*3+1
      I2=I1+1
      I3=I2+1
C
      DO 470 J=1,6
C
      SIG(J,N)=SIG(J,N)+DB(I,J,1)*V(I1)+DB(I,J,2)*V(I2)+DB(I,J,3)*V(I3)
C
  470 CONTINUE
  490 CONTINUE
C
C     CALCULATE THE INITIAL STRAIN IN THE POINT.
C
      IF (IOPE0) 510,510,495
  495 CALL RN20(RN,XI(K),ET(L),ZE(M))
C
      DO 505 NN=1,3
      EPS0(I)=0.0
      DO 500 I=1,MEK
      EPS0(NN)=EPS0(NN)+RN(I)*EPS0I((I-1)*3+NN)
  500 CONTINUE
  505 CONTINUE
C
C     CALCULATE SIGMA=SIGMA-D*EPS0   (TAKE INTO ACCOUNT INITIAL STRAIN)
C
      SIG(1,N)=SIG(1,N)-D *EPS0(1)-D1*EPS0(2)-D1*EPS0(3)
      SIG(2,N)=SIG(2,N)-D1*EPS0(1)-D *EPS0(2)-D1*EPS0(3)
      SIG(3,N)=SIG(3,N)-D1*EPS0(1)-D1*EPS0(2)-D *EPS0(3)
C
  510 CONTINUE
  520 CONTINUE
  530 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 700,550,550
  550 WRITE(IW,6500)
      CALL MPRT30(SIG,6,NSTR,IW)
      IF (IOPXP) 630,630,590
  590 WRITE(IW,6520)
      DO 600 I1=1,NSTR
      WRITE(IW,6080) I1,XGP(I1),YGP(I1),ZGP(I1)
  600 CONTINUE
  630 WRITE(IW,6540) IEL
C
C
C
 6000 FORMAT(////32H ENTERING IHEX32 FOR ELEMENT NO.,I7,2H :)
 6020 FORMAT(/5X,22HNODAL DISPLACEMENTS V:)
 6040 FORMAT(/5X,34HINITIAL STRAIN EPS0I IN THE NODES:)
 6060 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6080 FORMAT(I9,6X,1P3E12.4)
 6100 FORMAT(/5X,21HYOUNG'S MODULUS (E)= ,1PE10.4,5X,23HPOISSON'S NUMBER
     1 (RNY)= ,0PF5.3)
 6120 FORMAT(/5X,53HNUMBER OF STRESS POINTS IN THE XI-DIRECTION (NSTRXI)
     1=,I3,3X,30HIN THE ETA-DIRECTION (NSTRET)=,I3,/5X,31HIN THE ZETA-DI
     2RECTION (NSTRZE)=,I3,3X,29HLEGAL VALUES ARE 1,2,3 AND 4.)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IHEX32 ***)
 6320 FORMAT(/17H     ERROR FLAG =,I3)
 6340 FORMAT(/5X,20HTHE VALUE OF NSTRXI=,I4,3X, 7HNSTRET=,I4,3X, 7HNSTRZ
     1E=,I4,3X,35HWHILE LEGAL VALUES ARE 1,2,3 AND 4.)
C
C
 6500 FORMAT(/5X,91HTHE STRESS-MATRIX (SIG(6,NSTRXI*NSTRET*NSTRZE)). (SI
     1G(1)=SIGXX, SIG(2)=SIGYY, SIG(3)=SIGZZ,/5X,44HSIG(4)=TAUXY, SIG(5)
     2=TAUXZ, SIG(6)=TAUYZ.) :)
 6520 FORMAT( /,'     STRESS POINT COORDINATES:'
     1        /,'     POINT       XGP         YGP         ZGP')
 6540 FORMAT(/31H LEAVING IHEX32 FOR ELEMENT NO:,I7)
C
C
  700 CONTINUE
      RETURN
      END
      SUBROUTINE IHEX33(FE,XG,YG,ZG,GI,ISURF,IOPT,RO,NR,INTXI,INTET
     1                 ,INTZE,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IHEX33
C
C     IHEX33 CALCULATES THE NODAL FORCES (LOADS), FE, IN A 20 NODES
C     ISOPARAMETRIC HEXAHEDRON DUE TO: 1. GIVEN NODAL ACCELERATIONS
C     IN THE GLOBAL DIRECTIONS. 2. GIVEN NODAL PRESSURE IN GLOBAL
C     COMPONENT FORM. 3.GIVEN NODAL NORMAL-PRESSURE. POINT 2 AND 3
C     IS CALCULATED FOR ONE OR MORE OF THE HEXAHEDRON'S 6 SURFACES,
C     DEPENDING ON THE CORRESPONDING VALUE OF ISURF (WITH DIMENSION :
C     ISURF(NO OF LOADCASES)).
C     THE ROUTINE CALCULATES THE NODAL LOADS FOR NR LOADCASES
C     (SEE THE DIMENSION STATEMENTS)
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE RESULTANT NODAL
C     FORCES ARE REFERRED TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 05.09.74           LAST UPDATING DATE:
C***********************************************************************
C   INPUT:
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. DIMENSION
C     ZG    - OF XG,YG,ZG IS 20.
C     GI    - GIVEN NODAL ACCELERATIONS, -PRESSURE  IN COMPONENT FORM
C             OR -NORMAL PRESSURE, DEPENDANT ON IOPT BEEING 1,2 OR 3.
C             DIMENSION GI(60,NR).  IN THE COLUMNS OF GI THE VALUES ARE
C             STORED NODEWISE.
C     ISURF  - OPTION SPECIFYING THE SURFACE(S) TO BE LOADED WHEN IOPT
C             EQUALS 2 OR 3 (SEE BELOW). DIMENSION ISURF(NR). THE
C             VALUES TO BE GIVEN WILL FOR INSTANCE BE 010110, WHICH
C             MEANS THAT SURFACE NO 2,4 AND 5 HAVE LOADS IN THIS
C             LOADCASE.
C     IOPT  - OPTION SPECIFYING WHETHER THE ROUTINE IS TO CALCULATE
C             1. VOLUME FORCES, 2. SURFACE FORCES FROM PRESSURE IN
C             COMPONENT FORM, 3. SURFACE FORCES FROM NORMAL PRESSURE.
C             THE VALUE BEEING 1,2 OR 3
C     RO    - MASS PER UNIT VOLUME OF THE MATERIAL
C     NR    - NUMBER OF LOADCASES TO BE CALCULATED.
C     INTXI - NUMBER OF INTEGRATION POINTS IN THE XI, ETA AND ZETA
C     INTET - DIRECTION. LEGAL VALUES ARE 2,3 AND 4 (ONLY 3 AND 4 IF
C     INTZE - IOPT=1).
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FE    - NODAL ELEMENT FORCES (LOADS) IN THE GLOBAL DIRECTIONS.
C             THE FORCES ARE STORED NODEWISE. DIMENSION FE(60,NR)
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FE(60,NR) ,    GI(60,NR) ,    ISURF(NR) ,
     1              XG(20)    ,    YG(20)    ,    ZG(20)    ,
     2              XI(4)     ,    ET(4)     ,    ZE(4)     ,
     3              WTXI(4)   ,    WTET(4)   ,    WTZE(4)   ,
     4              XV(4,4)   ,    WT(4,4)   ,    RN(20)    ,
     5              EM(1890)  ,    EML(60)   ,    ISURFR(6) ,
     6              EMR(20,20),    RNTN(8,8,6),   RNTCN(24,8,6),
     7              IER(6,8)
C
      EQUIVALENCE(EMR,EML,RNTN,RNTCN)
C
C     SET THE NODENUMBERS FOR THE 6 SURFACES.
C
      DATA((IER(I,J),J=1,8),I=1,6)/
     1                                1,  7,  8,  9, 12, 13, 19, 20,
     2                                3,  4,  5, 10, 11, 15, 16, 17,
     3                                1,  2,  3,  9, 10, 13, 14, 15,
     4                                5,  6,  7, 11, 12, 17, 18, 19,
     5                                1,  2,  3,  4,  5,  6,  7,  8,
     6                               13, 14, 15, 16, 17, 18, 19, 20/
C
C
      MEK=20
      NEK=3*MEK
      NDFL=NEK*NR
      IONE=1
      NDOF=3
      NSFNOD=8
      NSURF=6
C
      LUMP=0
C
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
   20 WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060)
      CALL MPRT30(GI,NEK,NR,IW)
      WRITE(IW,6080)
      WRITE(IW,6100) (I,ISURF(I),I=1,NR)
      WRITE(IW,6120) IOPT,RO,NR
      WRITE(IW,6140) INTXI,INTET,INTZE
      IF (IERR) 950,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,4
      XI(I)  =0.0
      ET(I)  =0.0
      ZE(I)  =0.0
      WTXI(I)=0.0
      WTET(I)=0.0
      WTZE(I)=0.0
   70 CONTINUE
      DO 90 I=1,NEK
      DO 90 J=1,NR
      FE(I,J)=0.0
   90 CONTINUE
      DO 110 I=1,NSURF
      ISURFR(I)=0
  110 CONTINUE
      DO 130 I=1,4
      DO 130 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
  130 CONTINUE
      DO 150 I=1,MEK
      RN(I)=0.0
  150 CONTINUE
C
C     ABSCISSAES IN GAUSSIAN QUADRATURE INTEGRATION.
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION
C
      WT(1,2)=1.0
      WT(2,2)=1.0
C
      WT(1,3)= .555555555555556
      WT(2,3)= .888888888888888
      WT(3,3)= .555555555555556
C
      WT(1,4)= .347854845137454
      WT(2,4)= .652145154862546
      WT(3,4)= .652145154862546
      WT(4,4)= .347854845137454
C
C     CHOOSE ABSCISSAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUES
C     OF INTXI,INTET AND INTZE.
C
      DO 290 I=1,4
      XI(I)  =XV(I,INTXI)
      ET(I)  =XV(I,INTET)
      ZE(I)  =XV(I,INTZE)
      WTXI(I)=WT(I,INTXI)
      WTET(I)=WT(I,INTET)
      WTZE(I)=WT(I,INTZE)
  290 CONTINUE
C
C     TEST IF THE VALUE OF IOPT IS LEGAL. IF NOT- *ERROR*
C
      IF (IOPT-1) 330,310,310
  310 IF (IOPT-3) 350,350,330
  330 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6340) IOPT
      IF (IPSW-2) 20,950,950
  350 CONTINUE
C
      GO TO (370,650,650),IOPT
C
C     CALCULATE THE LOADS FROM GIVEN ACCELERATIONS IF IOPT=1.
C
  370 CONTINUE
C
C     CALCULATE THE MASS MATRIX AND CHECK THAT NEITHER INTXI,INTET OR
C     INTZE EQUALS 2
C
      IF (INTXI-2) 430,430,390
  390 IF (INTET-2) 430,430,410
  410 IF (INTZE-2) 430,430,450
  430 IERR=-1
      WRITE(IW,6300)
      WRITE(IW,6320) IERR
      WRITE(IW,6360) INTXI,INTET,INTZE
      IF (IPSW-2) 20,950,950
  450 CONTINUE
C
      CALL IHEX35(EM,EML,XG,YG,ZG,RO,INTXI,INTET,INTZE,LUMP,IEL,IW,IPSW,
     1            IERR)
      IF(IERR)440,445,445
  440 WRITE(IW,6300)
      IF(IPSW-2)1000,950,950
  445 CONTINUE
C
C**** HERE THE MASS MATRIX MAY BE STORED ON FILE IF LATER DYNAMIC ANALYSIS *****
C
C     RESTORE THE CONSISTENT MASS MATRIX IN A 2-DIMENSIONAL ARRAY. THE
C     ARRAY SHOULD HAVE BEEN 60*60, BUT IT IS 20*20 SINCE THE DIAGONAL
C     TERMS IN THE 3*3 NODE SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL
C     TERMS IN THE  3*3 MATRIXES ARE ZERO.
C
C
      IPK=-8
C
      DO 490 I=1,MEK
      DO 470 J=I,MEK
C
      IPK=IPK+9
C
C
      EMR(I,J)=EM(IPK)
  470 CONTINUE
  490 CONTINUE
C
C     ADD IN THE SYMMETRICAL PART OF EMR.
C
      DO 530 I=2,MEK
      I1=I-1
      DO 510 J=1,I1
      EMR(I,J)=EMR(J,I)
  510 CONTINUE
  530 CONTINUE
C
C     LOADCASE LOOP
C
      DO 630 I=1,NR
C
C     MULTIPLY THE COMPRESSED MASS MATRIX WITH THE ACCELERATION VECTOR NO I
C
      DO 590 J=1,MEK
      DO 570 K=1,NDOF
      J1=(J-1)*3+K
      DO 550 L=1,MEK
      L1=(L-1)*3+K
      FE(J1,I)=FE(J1,I)-EMR(J,L)*GI(L1,I)
  550 CONTINUE
  570 CONTINUE
  590 CONTINUE
  630 CONTINUE
      GO TO 930
  650 CONTINUE
C
C     CALCULATE THE LOADS FROM COMPONENT PRESSURE IF IOPT=2 OR FROM
C     NORMAL PRESSURE IF IOPT=3.
C
C     LOADCASE LOOP
C
      DO 910 I=1,NR
      ISRC=ISURF(I)
C     SURFACE LOOP
C
      DO 890 J=1,NSURF
C
C     TEST FOR THE VALUE OF THE I TH DIGIT IN ISURF.
C
      J1=NSURF-J
      IEX=10**J1
      ISRF=ISRC/IEX
      IF (ISRF-1) 890,670,890
  670 ISRC=ISRC-IEX
      IT=ISRF-ISURFR(J)
      IF (IT)  710,710,690
C
C     IF THIS SURFACE HAS NOT BEEN LOADED BEFORE, CALCULATE THE INTEGRAL
C     OF  NTN OR NTCN FOR THIS SURFACE.
C
  690 CALL NTN20(RNTN,RNTCN,XG,YG,ZG,IOPT,J,INTXI,INTET,INTZE,XI,ET,ZE,
     1           WTXI,WTET,WTZE,IER,IEL,IW,IPSW,IERR)
      IF (IERR) 700,705,705
  700 WRITE(IW,6300)
      IF (IPSW-2) 1000,950,950
  705 CONTINUE
      ISURFR(J)=1
  710 CONTINUE
C
C     IF COMPONENT PRESSURE (IOPT=2)
C     MULTIPLY THE CORRECT LOAD-INTENSITIES FOR THIS SURFACE WITH THE
C     8*8 MATRIX NTN (IT SHOULD HAVE BEEN 24*24, BUT THE DIAGONAL TERMS
C     IN THE 3*3 #NODE# SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL TERMS
C     IN THE 3*3 MATRIXES ARE ZERO).
C
      IF (IOPT-2) 810,730,810
  730 CONTINUE
C
      DO 790 K=1,NSFNOD
      K1=IER(J,K)
      K2=(K1-1)*3
      DO 770 L=1,NDOF
      L1=K2+L
      DO 750 M=1,NSFNOD
      M1=IER(J,M)
      M2=(M1-1)*3
      L2=M2+L
      FE(L1,I)=FE(L1,I)+RNTN(K,M,J)*GI(L2,I)
  750 CONTINUE
  770 CONTINUE
  790 CONTINUE
      GOTO 890
C
C     IF NORMAL PRESSURE (IOPT=3) MULTIPLY THE CORRECT LOAD-INTENSITIES
C     FOR THIS SURFACE WITH THE 24*8 MATRIX NTCN (IT SHOULD HAVE BEEN
C     24*24, BUT COLUMN NO. 2,3,5,6,8,9,11,12 ETC. ARE ZERO).
C
  810 CONTINUE
      DO 870 K=1,NSFNOD
      K1=IER(J,K)
      K2=(K1-1)*3
      K3=(K-1)*3
      DO 850 L=1,NDOF
      L1=K2+L
      L2=K3+L
      DO 830 M=1,NSFNOD
      M1=(IER(J,M)-1)*3+1
      FE(L1,I)=FE(L1,I)+RNTCN(L2,M,J)*GI(M1,I)
C
  830 CONTINUE
  850 CONTINUE
  870 CONTINUE
C
C
C
  890 CONTINUE
  910 CONTINUE
C
  930 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 1050,950,950
  950 CONTINUE
      WRITE(IW,6500) IEL
      CALL MPRT30(FE,NEK,NR,IW)
 1000 WRITE(IW,6520) IEL
C
C
 1050 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IHEX33 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,'THE ACCELERATION- OR PRESSURE-VECTORS (GI) FOR THE',
     1  'DIFFERENT LOADCASES. STORED NODEWISE : ')
 6080 FORMAT(/5X,'THE SURFACE SPECIFICATIONS (ISURF) FOR THE DIFFERENT',
     1 'LOADCASES :')
 6100 FORMAT(I5,I12)
 6120 FORMAT(/5X,19HLOAD OPTION (IOPT)=,I4,3X,21HSPECIFIC MASS (RO)=  ,1
     1PE10.4,3X,25HNUMBER OF LOADCASES (NR)=,I5)
 6140 FORMAT(/5X,57HNUMBER OF INTEGRATION POINTS IN THE XI-DIRECTION (IN
     1TXI)=,I3,3X,29HIN THE ETA-DIRECTION (INTET)=,I3,/5X,30HIN THE ZETA
     2-DIRECTION (INTZE)=,I3,3X,51HLEGAL VALUES ARE 2,3 AND 4 (ONLY 3 AN
     3D 4 IF IOPT=1))
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IHEX33 ***)
 6320 FORMAT(/17H     ERROR FLAG =,I3)
 6340 FORMAT(/10H     IOPT=,I4,3X,32HWHILE LEGAL VALUES ARE 1,2 OR 3.)
 6360 FORMAT(/11H     INTXI=,I4,3X, 6HINTET=,I4,3X, 6HINTET=,I4,3X,/,76H
     1AT LEAST ONE OF THESE VALUES IS EQUAL TO TWO. THIS IS NOT LEGAL WH
     2EN IOPT=1 )
C
C
 6500 FORMAT(//,5X,96HTHE FORCE VECTOR (FE) FOR THE SPECIFIED LOADCASES
     1 DUE TO BODY OR SURFACE FORCES FOR ELEMENT NO :,I7)
 6520 FORMAT(/28H LEAVING IHEX33 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE IHEX34(FEPS0,XG,YG,ZG,YOUNG,RNY,EPS0I,INTXI,INTET,INTZE
     1                 ,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C  F I I I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IHEX34
C
C     IHEX34 CALCULATES NODAL FORCES (LOADS), FEPSO, IN A 20 NODES
C     ISOPARAMETRIC HEXAHEDRON DUE TO INITIAL STRAIN, FOR ONE LOADCASE.
C     SINCE THE DISPLACEMENT FIELD IS DESCRIBED ALONG THE
C     EDGES WITH A SECOND DEGREE POLYNOMIAL, THE INITIAL STRAIN MUST
C     VARY LINEARLY; CONSEQUENTLY ARE THE VALUES IN THE MID-EDGE
C     NODES CALCULATED AS A LINEAR INTERPOLATION BETWEEN THE TWO
C     NEIGHBOURING CORNER NODES. THIS IS DONE IN THE ROUTINE.
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE FORCES ARE REFERRED
C     TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 19.08.74 / 01      LAST UPDATING DATE:
C***********************************************************************
C   INPUT:
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 20, (I=1,20)
C     YOUNG - YOUNG'S MODULUS OF ELASTICITY
C     RNY   - POISSON'S RATIO
C     EPS0I - INITIAL STRAIN FOR EACH OF THE CORNER NODES IN THREE
C             GLOBAL DIRECTIONS. THE VALUES IN THE MID-EDGE NODES
C             ARE FOUND BY LINEAR INTERPOLATION IN THE PROGRAM.
C             DIMENSION OF EPS0I: DIM(60).   VALUES GIVEN FOR THE MID-
C             EDGE NODES ARE DELETED IN THIS PROGRAM.
C     INTXI -
C     INTET - NUMBER OF INTEGRATION POINTS IN THE XI, ETA AND ZETA
C     INTZE - DIRECTION. LEGAL VALUES ARE 2,3 AND 4.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FEPS0 - NODAL FORCES IN THE GLOBAL DIRECTIONS. THE FORCES ARE
C             STORED NODEWISE. DIMENSION FEPS0(60).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1:AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FEPS0(60) ,    EPS0I(60) ,    B(3)      ,
     1              XG(20)    ,    YG(20)    ,    ZG(20)    ,
     2              DNXI(20)  ,    DNET(20)  ,    DNZE(20)  ,
     3              XI(4)     ,    ET(4)     ,    ZE(4)     ,
     4              WTXI(4)   ,    WTET(4)   ,    WTZE(4)   ,
     5              XV(4,4)   ,    BTD(3,3)  ,
     6              JI(3,3)   ,    RN(20)    ,    EPS0(3)   ,
     7              WT(4,4)   ,    IER(36)
      DOUBLE PRECISION JI
C
C     SET THE RELATION BETWEEN INTERPOLATED NODENUMBERS AND THE
C     NABOURING NODE-NUMBERS. NUMBER OF NODES WHERE THE VALUES WILL BE
C     INTERPOLATED (THE MID-SIDE NODES) ARE 12.
C
      DATA (IER(I),I=1,36)/       2,   1,   3,   4,   3,   5,
     1                            6,   5,   7,   8,   7,   1,
     2                            9,   1,  13,  10,   3,  15,
     3                           11,   5,  17,  12,   7,  19,
     4                           14,  13,  15,  16,  15,  17,
     5                           18,  17,  19,  20,  19,  13/
C
      MEK=20
      NEK=3*MEK
      IONE=1
      IDIM=3
      NOIV=36
C
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040)  I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) YOUNG,RNY
      WRITE(IW,6080)
      CALL MPRT30(EPS0I,NEK,IONE,IW)
      WRITE(IW,6100) INTXI,INTET,INTZE
      IF (IERR) 650,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,4
      XI(I)  =0.0
      ET(I)  =0.0
      ZE(I)  =0.0
      WTXI(I)=0.0
      WTET(I)=0.0
      WTZE(I)=0.0
   70 CONTINUE
      DO 90 I=1,NEK
      FEPS0(I)=0.0
   90 CONTINUE
      DO 110 I=1,4
      DO 110 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
  110 CONTINUE
      DO 130 I=1,3
      B(I)=0.0
  130 CONTINUE
      DO 150 I=1,3
      DO 150 J=1,3
      BTD(I,J)=0.0
  150 CONTINUE
C
C     CONSTANTS IN ELASICITY MATRIX (WITHOUT SHEAR TERMS).
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION.
C
      WT(1,2)=1.0
      WT(2,2)=1.0
C
      WT(1,3)=.555555555555556
      WT(2,3)=.888888888888888
      WT(3,3)=.555555555555556
C
      WT(1,4)=.347854845137454
      WT(2,4)=.652145154862546
      WT(3,4)=.652145154862546
      WT(4,4)=.347854845137454
C
C     CHOOSE ABSISSAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUES
C     OF INTXI,INTET AND INTZE.
C
      DO 170 I=1,4
      XI(I)=XV(I,INTXI)
      ET(I)=XV(I,INTET)
      ZE(I)=XV(I,INTZE)
C
      WTXI(I)=WT(I,INTXI)
      WTET(I)=WT(I,INTET)
      WTZE(I)=WT(I,INTZE)
  170 CONTINUE
C
C     FIND THE VALUES OF THE INITIAL STRAIN IN THE MID-EDGE NODES BY
C     LINEAR INTERPOLATION
C
C
      II=IER(I)
      JJ=IER(I+1)
      KK=IER(I+2)
      IP=(II-1)*3
      JP=(JJ-1)*3
      KP=(KK-1)*3
C
      DO 180 M=1,3
      IPP=IP+M
      JPP=JP+M
      KPP=KP+M
      EPS0I(IPP)=.5*(EPS0I(JPP)+EPS0I(KPP))
  180 CONTINUE
C
C     GAUSSIAN INTEGRATION IN THE XI,ETA AND ZETA DIRECTION. COMPUTING
C     THE NODAL FORCES DUE TO THE INITIAL STRAIN FOR ONE LOADCASE.
C
      DO 470  M=1,INTZE
      DO 450  L=1,INTET
      DO 430  K=1,INTXI
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN2031(DNXI,DNET,DNZE,XI(K),ET(L),ZE(M))
C
C     COMPUTE THE JACOBIAN MATRIX, ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNXI,DNET,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO FOR
C     THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1.
C
      IF (IERR) 210,230,230
  210 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  230 CONTINUE
C
C     CALCULATE THE 20 TERMS OF THE SHAPE FUNCTION N IN THIS POINT.
C
      CALL RN20(RN,XI(K),ET(L),ZE(M))
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND THE JACOBIAN DETERMINANT.
C
      COF=WTXI(K)*WTET(L)*WTZE(M)*DETJ
C
C     CALCULATE THE INITIAL STRAIN IN THE POINT.
C
      DO 240 I=1,3
      EPS0(I)=0.0
  240 CONTINUE
C
      DO 270 I=1,MEK
      II=(I-1)*3
      DO 250 N=1,3
      NI=II+N
      EPS0(N)=EPS0(N)+RN(I)*EPS0I(NI)
  250 CONTINUE
  270 CONTINUE
C
C     MULTIPLICATION OF THE INITIAL STRAIN WITH COF.
C
      EPS0(1)=EPS0(1)*COF
      EPS0(2)=EPS0(2)*COF
      EPS0(3)=EPS0(3)*COF
C
C     CALCULATE THE MATRIXES  B AND BTD'.
C
      IPK=0
      DO 330 I=1,MEK
C
      B(1)=JI(1,1)*DNXI(I)+JI(1,2)*DNET(I)+JI(1,3)*DNZE(I)
      B(2)=JI(2,1)*DNXI(I)+JI(2,2)*DNET(I)+JI(2,3)*DNZE(I)
      B(3)=JI(3,1)*DNXI(I)+JI(3,2)*DNET(I)+JI(3,3)*DNZE(I)
C
      BTD(1,1)=D *B(1)
      BTD(2,1)=D1*B(2)
      BTD(3,1)=D1*B(3)
      BTD(1,2)=D1*B(1)
      BTD(2,2)=D *B(2)
      BTD(3,2)=BTD(3,1)
      BTD(1,3)=BTD(1,2)
      BTD(2,3)=BTD(2,1)
      BTD(3,3)=D *B(3)
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT (K,L,M) AND
C     THIS NODE (I) TO THE FORCE VECTOR.
      DO 310 J=1,3
      IPK=IPK+1
      FEPS0(IPK)=FEPS0(IPK)+BTD(J,1)*EPS0(1)+BTD(J,2)*EPS0(2)+BTD(J,3)*
     1           EPS0(3)
  310 CONTINUE
C
  330 CONTINUE
C
  430 CONTINUE
  450 CONTINUE
  470 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 670,590,590
  590 CONTINUE
      WRITE(IW,6500)
      CALL MPRT30(EPS0I,IDIM,MEK,IW)
      WRITE(IW,6520) IEL
      CALL MPRT30(FEPS0,NEK,IONE,IW)
  650 WRITE(IW,6540) IEL
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IHEX34 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,23HPOISSONS NUMBER
     1 (RNY)= ,0PF5.3)
 6080 FORMAT(/5X,48HTHE INITIAL STRAIN VECTOR BEFORE INTERPOLATION :)
 6100 FORMAT(/5X,57HNUMBER OF INTEGRATION POINTS IN THE XI-DIRECTION (IN
     1TXI)=,I3,3X,29HIN THE ETA-DIRECTION (INTET)=,I3,/5X,30HIN THE ZETA
     2-DIRECTION (INTZE)=,I3,3X,26HLEGAL VALUES ARE 2,3 AND 4)
C
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IHEX34 ***)
C
C
 6500 FORMAT(/5X,55HTHE INITIAL STRAIN VECTOR (EPS0I) AFTER INTERPOLATIO
     1N :)
 6520 FORMAT(//5X,63HTHE FORCE VECTOR (FEPS0) DUE TO INITIAL STRAIN  FOR
     1 ELEMENT NO:,I7)
 6540 FORMAT(/28H LEAVING IHEX34 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE IHEX35(EM,EML,XG,YG,ZG,RO,INTXI,INTET,INTZE,LUMP,IEL,
     1                  IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IHEX35
C
C
C     IHEX35 CALCULATES THE MASS MATRIX OF AN ISOPARAMETRIC HEXAHEDRON,
C     WITH 20 NODES AND THREE DEGREES OF FREEDOM AT EACH NODE.
C     THE EDGES MAY BE STRAIGHT OR CURVED.
C     THE MASS-MATRIX REFERS TO THE GLOBAL CARTESIAN COORDINATE SYSTEM
C     AND MAY BE CONSISTENT OR LUMPED.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 21.05.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 20.
C     RO    - MASS PER UNIT VOLUME OF THE MATERIAL.
C     INTXI -
C     INTET - NUMBER OG INTERGRATION POINTS IN THE XI,ETA AND ZETA
C     INTZE - DIRECTION. LEGAL VALUES ARE 3 OR 4
C     LUMP  - SWITCH. LUMP=0, THE PROGRAM CALCULATES A CONSISTENT
C             MASS MATRIX. LUMP=1, THE PROGRAM CALCULATES A LUMPED
C             MASS MATRIX.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C
C     EM    - UPPER HALF OF ELEMENT MASS-MATRIX M. EM IS A ONE
C             DIMENSIONAL ARRAY WITH DIMENSION: EM(1890). THE MASS-
C             MATRIX CONSISTS OF 3X3 SUBMATRIXES. EACH SUBMATRIX IS
C             STORED COLUMNWISE AND THE SUBMATRIXES ARE STORED LINE-
C             WISE.
C     EML   - THE DIAGONAL OF THE LUMPED MASS-MATRIX IF LUMP=1,
C             DIMENSION: EML(60)
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     EM(1890)  ,    DNXI(20)  ,    DNET(20)  ,
     1              DNZE(20)  ,    JI(3,3)   ,
     2              XV(4,4)   ,    WT(4,4)   ,    XI(4)     ,
     3              ET(4)     ,    ZE(4)     ,    WTXI(4)   ,
     4              WTET(4)   ,    WTZE(4)   ,    XG(20)    ,
     5              YG(20)    ,    ZG(20)    ,    BUFMD(20) ,
     6              RN(20)    ,    EML(60)
      DOUBLE PRECISION JI
      IERR=0
C!!!
      IPK=0
C!!!
      MEK=20
      NEK=60
      IONE=1
      IDIM=1890
      ZM= 0.0
      ZMD=0.0
      EMIJ=0.0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 30,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 25 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   25 CONTINUE
      WRITE(IW,6060) RO
      WRITE(IW,6080) INTXI,INTET,INTZE
      WRITE(IW,6100) LUMP
      IF (IERR) 650,30,30
   30 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 50 I=1,4
      XI(I)=0.0
      ET(I)=0.0
      ZE(I)=0.0
      WTXI(I)=0.0
      WTET(I)=0.0
      WTZE(I)=0.0
   50 CONTINUE
C
      DO 70 I=1,1890
      EM(I)=0.0
   70 CONTINUE
C
      DO 80 I=1,60
      EML(I)=0.0
   80 CONTINUE
C
      DO 90 I=1,4
      DO 90 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
   90 CONTINUE
C
      DO 110 I=1,MEK
      BUFMD(I)=0.0
  110 CONTINUE
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION.
C
      WT(1,3)=.555555555555556
      WT(2,3)=.888888888888888
      WT(3,3)=.555555555555556
C
      WT(1,4)=.347854845137454
      WT(2,4)=.652145154862546
      WT(3,4)=.652145154862546
      WT(4,4)=.347854845137454
C
C     CHOOSE ABSCISSAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUES
C     OF INTXI,INTET AND INTZE.
C
      DO 130  I=1,4
      XI(I)=XV(I,INTXI)
      ET(I)=XV(I,INTET)
      ZE(I)=XV(I,INTZE)
C
      WTXI(I)=WT(I,INTXI)
      WTET(I)=WT(I,INTET)
      WTZE(I)=WT(I,INTZE)
  130 CONTINUE
C
C     GAUSSIAN INTEGRATION IN THE XI,ETA AND ZETA DIRECTION.
C     COMPUTING THE CONSISTENT OR LUMPED MASS MATRIX.
C
      DO 470 M=1,INTZE
      DO 450 L=1,INTET
      DO 430 K=1,INTXI
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION
C
      CALL DN2031(DNXI,DNET,DNZE,XI(K),ET(L),ZE(M))
C
C     COMPUTE THE JACOBIAN MATRIX, IT'S INVERSE AND IT'S DETERMINANT.
C     ONLY THE DETERMINANT IS USED IN THIS ROUTINE.
C
      CALL JACI31(JI,DETJ,DNXI,DNET,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO
C     FOR THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1
C
      IF (IERR) 170,190,190
  170 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  190 CONTINUE
C
C     THE PRODUCT OF INTEGRATION WEIGHTS, THE DETERMINANT AND THE
C     MASS DENSITY.
C
      COF=WTXI(K)*WTET(L)*WTZE(M)*DETJ*RO
C
C     CALCULATE THE VALUES OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL  RN20(RN,XI(K),ET(L),ZE(M))
C
C     CALCULATE THE UPPER TRIANGLE OF EM (ELEMENT MASS MATRIX) IF THIS
C     IS TO BE A CONSISTENT MASS MATRIX.
C
C
      IF (LUMP-1) 210,370,210
  210 CONTINUE
C!!!
      IPK = -8
C!!!
      DO 270 I=1,MEK
      DO 250 J=I,MEK
      IPK=IPK+9
C
C     PUT THE CONTRIBUTION FROM THIS NODE INTERSECTION (I,J) AND THIS
C     INTERGRATION POINT (K,L,M) INTO THE MASS MATRIX.
C
      EM(IPK)=EM(IPK)+COF*RN(I)*RN(J)
C
  250 CONTINUE
  270 CONTINUE
C
      GO TO 420
C
C     CALCULATE THE TOTAL SUM OF THE MASS, THE SUM OF THE DIAGONAL,
C     IF LUMP=1.
C
  370 CONTINUE
      DO 410 I=1,MEK
      DO 390 J=I,MEK
C
      ZM=ZM+RN(I)*RN(J)*COF
C
  390 CONTINUE
C
      BUFMD(I)=BUFMD(I)+RN(I)*RN(I)*COF
C
  410 CONTINUE
C
  420 CONTINUE
C
  430 CONTINUE
  450 CONTINUE
  470 CONTINUE
C
      IF (LUMP-1) 530,475,530
  475 CONTINUE
      DO 480 I=1,MEK
      ZMD=ZMD+BUFMD(I)
  480 CONTINUE
C
C
C     FIND THE TOTAL MASS OF THE ELEMENT, NOT ONLY FOR THE SYMMETRIC
C     PART OF THE MATRIX.
C
      ZM=2.0*ZM-ZMD
C
C     CALCULATE THE SCALED DIAGONAL MATRIX OF M-LUMPED. ZM/ZMD IS THE
C     SCALING FACTOR.
C
      SF=ZM/ZMD
      ICL=0
C
      DO 510 I=1,MEK
C
      EMIJ=SF*BUFMD(I)
C
      DO 490 II=1,3
      ICL=ICL+1
      EML(ICL)=EMIJ
  490 CONTINUE
  510 CONTINUE
      GOTO 570
C
  530 CONTINUE
C
C     PUT IN THE EQUAL TERMS IN THE 3*3 #NODE# SUBMATRIXES OF EM (CONS.
C     ELEMENT MASS MATRIX).
C
      IPK=-8
C
      DO 560 I=1,MEK
      DO 550 J=I,MEK
      IPK=IPK+9
      IPM=IPK
C
      DO 540 II=1,2
      IPM=IPM+4
      EM(IPM)=EM(IPK)
  540 CONTINUE
C
  550 CONTINUE
  560 CONTINUE
C
C     PRINT OF OUTPUT ?
C
  570 IF(IPSW-2)670,590,590
  590 CONTINUE
      WRITE(IW,6500) IEL
      IF (LUMP-1) 610,630,610
  610 CALL MPRT30(EM,IONE,IDIM,IW)
      GO TO 650
  630 CALL MPRT30(EML,IONE,NEK,IW)
  650 CONTINUE
      WRITE(IW,6520) IEL
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IHEX35 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,21HSPECIFIC MASS (RO)=  ,1PE10.4)
 6080 FORMAT(/5X,57HNUMBER OF INTEGRATION POINTS IN THE XI DIRECTION (IN
     1TXI)=,I3,3X,29HIN THE ETA-DIRECTION (INTET)=,I3,/5X,30HIN THE ZETA
     2-DIRECTION (INTZE)=,I3,3X,24HLEGAL VALUES ARE 3 AND 4)
 6100 FORMAT(/5X,19HTHE LUMP SWITCH IS:,I4)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IHEX35 ***)
C
C
 6500 FORMAT(//,5X,35HELEMENT MASS MATRIX FOR ELEMENT NO: ,I7)
 6520 FORMAT(/28H LEAVING IHEX35 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE IHXL34(FEPS0,XG,YG,ZG,YOUNG,RNY,EPS0I,NR,INTXI,INTET,
     1                 INTZE,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C  F I I I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  IHEX34
C
C     IHXL34 CALCULATES NODAL FORCES (LOADS), FEPS0, IN A 20 NODES
C     ISOPARAMETRIC HEXAHEDRON DUE TO INITIAL STRAIN, FOR NR LOADCASES.
C     THIS ROUTINE SHOULD BE USED WHEN LARGE NUMBER OF LOADCASES WITH
C     LOAD FROM INITIAL STRAIN FOR THE ELEMENT. THE INITIAL COST AND
C     NEED OF SPACE FOR ARRAYS ARE LARGER THAN FOR IHEX34, BUT THE COST
C     PER ADDITIONAL LOADCASE IS SMALLER THAN FOR IHEX34.
C     SINCE THE DISPLACEMENT FIELD IS DESCRIBED ALONG THE
C     EDGES WITH A SECOND DEGREE POLYNOMIAL, THE INITIAL STRAIN MUST
C     VARY LINEARLY; CONSEQUENTLY ARE THE VALUES IN THE MID-EDGE
C     NODES CALCULATED AS A LINEAR INTERPOLATION BETWEEN THE TWO
C     NEIGHBOURING CORNER NODES. THIS IS DONE IN THE ROUTINE.
C
C     THE EDGES MAY BE STRAIGHT OR CURVED AND THE FORCES ARE REFERRED
C     TO THE GLOBAL CARTESIAN COORDINATE SYSTEM.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 19.08.74 / 01      LAST UPDATING DATE:
C***********************************************************************
C   INPUT:
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. XG(I)=XI,
C     ZG    - YG(I)=YI, ZG(I)=ZI. DIMENSION OF XG,YG,ZG IS 20, (I=1,20)
C     YOUNG - YOUNG'S MODULUS OF ELASTICITY
C     RNY   - POISSON'S RATIO
C     EPS0I - INITIAL STRAIN FOR EACH OF THE CORNER NODES IN THREE
C             GLOBAL DIRECTIONS. THE VALUES IN THE MID-EDGE NODES
C             ARE FOUND BY LINEAR INTERPOLATION IN THE PROGRAM.
C             DIMENSION OF EPS0I: DIM(60,NR). VALUES GIVEN FOR THE MID-
C             EDGE NODES ARE DELETED IN THIS PROGRAM.
C     NR    - NUMBER OF LOADCASES TO BE CALCULATED IN THE ROUTINE.
C     INTXI -
C     INTET - NUMBER OF INTEGRATION POINTS IN THE XI, ETA AND ZETA
C     INTZE - DIRECTION. LEGAL VALUES ARE 2,3 AND 4.
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<2: NO PRINT.
C
C   OUTPUT:
C     FEPS0 - NODAL FORCES IN THE GLOBAL DIRECTIONS. THE FORCES ARE
C             STORED NODEWISE. DIMENSION FEPS0(60,NR).
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1:AN
C             ERROR DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED
C             PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     FEPS0(60,NR),  EPS0I(60,NR),  B(3)      ,
     1              XG(20)    ,    YG(20)    ,    ZG(20)    ,
     2              DNXI(20)  ,    DNET(20)  ,    DNZE(20)  ,
     3              XI(4)     ,    ET(4)     ,    ZE(4)     ,
     4              WTXI(4)   ,    WTET(4)   ,    WTZE(4)   ,
     5              XV(4,4)   ,    BTD(3,3)  ,
     6              JI(3,3)   ,    RN(20)    ,    IER(36)   ,
     7              WT(4,4)   ,    BTDN(60,60)
      DOUBLE PRECISION JI
C
C     SET THE RELATION BETWEEN INTERPOLATED NODENUMBERS AND THE
C     NABOURING NODE-NUMBERS. NUMBER OF NODES WHERE THE VALUES WILL BE
C     INTERPOLATED (THE MID-SIDE NODES) ARE 12.
C
      DATA (IER(I),I=1,36)/       2,   1,   3,   4,   3,   5,
     1                            6,   5,   7,   8,   7,   1,
     2                            9,   1,  13,  10,   3,  15,
     3                           11,   5,  17,  12,   7,  19,
     4                           14,  13,  15,  16,  15,  17,
     5                           18,  17,  19,  20,  19,  13/
      MEK=20
      NEK=3*MEK
      NDFL=NEK*NR
      NEK2=NEK*NEK
      NOIV=36
C
      IERR=0
C
C     PRINT OF INPUT ?
C
      IF (IPSW-2) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040)  I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) YOUNG,RNY
      WRITE(IW,6080)
      CALL MPRT30(EPS0I,NEK,NR,IW)
      WRITE(IW,6090) NR
      WRITE(IW,6100) INTXI,INTET,INTZE
      IF (IERR) 650,50,50
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      DO 70 I=1,4
      XI(I)  =0.0
      ET(I)  =0.0
      ZE(I)  =0.0
      WTXI(I)=0.0
      WTET(I)=0.0
      WTZE(I)=0.0
   70 CONTINUE
      DO 90 I=1,NEK
      DO 90 J=1,NR
      FEPS0(I,J)=0.0
   90 CONTINUE
      DO 110 I=1,4
      DO 110 J=1,4
      XV(I,J)=0.0
      WT(I,J)=0.0
  110 CONTINUE
      DO 130 I=1,3
      B(I)=0.0
  130 CONTINUE
      DO 150 I=1,3
      DO 150 J=1,3
      BTD(I,J)=0.0
  150 CONTINUE
C
      DO 160 I=1,NEK
      DO 160 J=1,NEK
      BTDN(I,J)=0.0
  160 CONTINUE
C     CONSTANTS IN ELASICITY MATRIX (WITHOUT SHEAR TERMS).
C
      D =YOUNG*(1.-RNY)/((1.+RNY)*(1.-2.*RNY))
      D1=D*RNY/(1.-RNY)
C
C     ABSCISSA IN GAUSSIAN QUADRATURE INTEGRATION
C
      XV(1,2)=-.577350269189626
      XV(2,2)= .577350269189626
C
      XV(1,3)=-.774596669241483
      XV(2,3)=0.0
      XV(3,3)= .774596669241483
C
      XV(1,4)=-.861136311594053
      XV(2,4)=-.339981043584856
      XV(3,4)= .339981043584856
      XV(4,4)= .861136311594053
C
C
C     WEIGHT FACTORS FOR GAUSSIAN INTEGRATION.
C
      WT(1,2)=1.0
      WT(2,2)=1.0
C
      WT(1,3)=.555555555555556
      WT(2,3)=.888888888888888
      WT(3,3)=.555555555555556
C
      WT(1,4)=.347854845137454
      WT(2,4)=.652145154862546
      WT(3,4)=.652145154862546
      WT(4,4)=.347854845137454
C
C     CHOOSE ABSISSAES AND WEIGHTS. THESE ARE DEPENDANT ON THE VALUES
C     OF INTXI,INTET AND INTZE.
C
      DO 170 I=1,4
      XI(I)=XV(I,INTXI)
      ET(I)=XV(I,INTET)
      ZE(I)=XV(I,INTZE)
C
      WTXI(I)=WT(I,INTXI)
      WTET(I)=WT(I,INTET)
      WTZE(I)=WT(I,INTZE)
  170 CONTINUE
C
C     GAUSSIAN INTEGRATION IN THE XI,ETA AND ZETA DIRECTION. COMPUTING
C     THE MATRIX BTDN(60,60).
C
      DO 470  M=1,INTZE
      DO 450  L=1,INTET
      DO 430  K=1,INTXI
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION IN THE POINT
C
      CALL DN2031(DNXI,DNET,DNZE,XI(K),ET(L),ZE(M))
C
C     COMPUTE THE JACOBIAN MATRIX, ITS INVERSE AND ITS DETERMINANT
C
      CALL JACI31(JI,DETJ,DNXI,DNET,DNZE,XG,YG,ZG,IEL,MEK,IW,IPSW,IERR)
C
C     IF THE DETERMINANT OF THE JACOBIAN MATRIX (DETJ) EQUALS ZERO FOR
C     THIS POINT IN THE ELEMENT, THEN THE RETURN VALUE OF IERR=-1.
C
      IF (IERR) 210,230,230
  210 WRITE(IW,6300)
      IF (IPSW-2) 650,590,590
  230 CONTINUE
C
C     CALCULATE THE 20 TERMS OF THE SHAPE FUNCTION N IN THIS POINT.
C
      CALL RN20(RN,XI(K),ET(L),ZE(M))
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND THE JACOBIAN DETERMINANT.
C
      COF=WTXI(K)*WTET(L)*WTZE(M)*DETJ
C
C     MULTIPLICATION OF THE INVERTED JACOBI MATRIX WITH COF.
C
      DO 270 N=1,3
      DO 250 NN=1,3
      JI(NN,N)=JI(NN,N)*COF
  250 CONTINUE
  270 CONTINUE
C
C     CALCULATE THE MATRIXES B, BTD' AND BTD'N.
C
      DO 330 I=1,MEK
      IP=(I -1)*3
C
      B(1)=JI(1,1)*DNXI(I)+JI(1,2)*DNET(I)+JI(1,3)*DNZE(I)
      B(2)=JI(2,1)*DNXI(I)+JI(2,2)*DNET(I)+JI(2,3)*DNZE(I)
      B(3)=JI(3,1)*DNXI(I)+JI(3,2)*DNET(I)+JI(3,3)*DNZE(I)
C
      BTD(1,1)=D *B(1)
      BTD(2,1)=D1*B(2)
      BTD(3,1)=D1*B(3)
      BTD(1,2)=D1*B(1)
      BTD(2,2)=D *B(2)
      BTD(3,2)=BTD(3,1)
      BTD(1,3)=BTD(1,2)
      BTD(2,3)=BTD(2,1)
      BTD(3,3)=D *B(3)
C
C     CALCULATE THE CONTRIBUTION TO THE MATRIX BTD'N FROM THIS
C     INTEGRATION POINT.
C
      DO 310 J=1,MEK
      JP=(J-1)*3
      DO 290 N=1,3
      JPP=JP+N
      DO 280 NN=1,3
      IPP=IP+NN
C
      BTDN(IPP,JPP)=BTDN(IPP,JPP)+BTD(NN,N)*RN(J)
C
  280 CONTINUE
  290 CONTINUE
C
  310 CONTINUE
  330 CONTINUE
C
  430 CONTINUE
  450 CONTINUE
  470 CONTINUE
C
C     LOADCASE LOOP.
C
      DO 570 LN=1,NR
C
C     FIND THE VALUES OF THE INITIAL STRAIN IN THE MID-EDGE NODES BY
C     LINEAR INTERPOLATION.
C
C
      II=IER(I)
      JJ=IER(I+1)
      KK=IER(I+2)
      IP=(II-1)*3
      JP=(JJ-1)*3
      KP=(KK-1)*3
C
      DO 480 M=1,3
      IPP=IP+M
      JPP=JP+M
      KPP=KP+M
      EPS0I(IPP,LN)=.5*(EPS0I(JPP,LN)+EPS0I(KPP,LN))
  480 CONTINUE
C
C     CALCULATE THE FORCE VECTOR (FEPS0) FROM THIS LOADCASE DUE TO THE
C     INITIAL NODAL STRAIN VECTOR EPS0I NUMBER LN.
C
      DO 550 I=1,NEK
      DO 530 J=1,NEK
      FEPS0(I,LN)=FEPS0(I,LN)+BTDN(I,J)*EPS0I(J,LN)
  530 CONTINUE
  550 CONTINUE
C
  570 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-2) 670,590,590
  590 CONTINUE
      WRITE(IW,6500)
      CALL MPRT30(EPS0I,NEK,NR,IW)
      WRITE(IW,6520) IEL
      CALL MPRT30(FEPS0,NEK,NR,IW)
  650 WRITE(IW,6540) IEL
C
C
  670 CONTINUE
C
C
 6000 FORMAT(///29H ENTERING IHXL34 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,22HYOUNG'S MODULUS (E)=  ,1PE10.4,5X,23HPOISSONS NUMBER
     1 (RNY)= ,0PF5.3)
 6080 FORMAT(/5X,51HTHE INITIAL STRAIN VECTOR(S) BEFORE INTERPOLATION :)
 6090 FORMAT(/5X,25HNUMBER OF LOADCASES (NR)=,I5)
 6100 FORMAT(/5X,57HNUMBER OF INTEGRATION POINTS IN THE XI-DIRECTION (IN
     1TXI)=,I3,3X,29HIN THE ETA-DIRECTION (INTET)=,I3,/5X,30HIN THE ZETA
     2-DIRECTION (INTZE)=,I3,3X,26HLEGAL VALUES ARE 2,3 AND 4)
C
C
 6300 FORMAT(///33H *** ERROR RETURN FROM IHXL34 ***)
C
C
 6500 FORMAT(/5X,58HTHE INITIAL STRAIN VECTOR(S) (EPS0I) AFTER INTERPOLA
     1TION :)
 6520 FORMAT(//5X,65HTHE FORCE VECTOR(S) (FEPS0) DUE TO INITIAL STRAIN F
     1OR ELEMENT NO:,I7)
 6540 FORMAT(/28H LEAVING IHXL34 FOR ELEMENT ,I7)
C
      RETURN
      END
      SUBROUTINE NTN20(RNTN,RNTCN,XG,YG,ZG,IOPT,JS,INTXI,INTET,INTZE,XI,
     1                 ET,ZE,WTXI,WTET,WTZE,IER,IEL,IW,IPSW,IERR)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  NTN20
C
C     NTN20 CALCULATES THE INTEGRAL OF N TRANSPOSED MULTIPLIED WITH N
C     FOR ONE SPECIFIED SURFACE IN A 20 NODE ISOPARAMETRIC HEXAHEDRON.
C     THE CHOISE OF SURFACE IS DEPENDANT ON THE VALUE OF JS. IF IOPT=3,
C     THEN THE PROGRAM WILL ASSUME THE PRESSURE TO BE NORMAL TO THE
C     SURFACE AND MULTIPLY THE VALUES WITH THE DIRECTION COSINES FOR
C     THE SURFACE. THIS MEANS THAT THE INTEGRAL WILL BE STORED IN ARRAY
C     RNTN IF IOPT=2 AND IN RNTCN IF IOPT=3.
C
C     FOR IOPT=2 (COMPONENT PRESSURE) THE INTEGRAL SHOULD HAVE BEEN
C     STORED IN AN ARRAY RNTN(24,24,NSURF), WHERE NSURF IS THE ELEMENT'S
C     NUMBER OF SURFACES, BUT SINCE THE DIAGONAL TERMS IN THE 3*3 #NODE#
C     SUBMATRIXES ARE EQUAL AND THE OFF-DIAGONAL TERMS IN THE 3*3 MATRI-
C     XES ARE ZERO IT IS SUFFICIENT WITH THE DIMENSION RNTN(8,8,NSURF).
C
C     FOR IOPT=3 (NORMAL PRESSURE) THE INTEGRAL SHOULD HAVE BEEN STORED
C     IN AN ARRAY RNTCN(24,24,NSURF), BUT SINCE COLUMN NO 2,3,5,6,8,9,
C     11,12 ETC. ARE ZERO, IT IS SUFFICIENT WITH THE DIMENSION
C     RNTCN(24,8,NSURF).
C     IT IS ADVICEABLE TO EQUIVALENCE RNTN AND RNTCN OUTSIDE THIS PROGR-
C     AM DUE TO THEIR SIZE AND EXCLUSIVENESS.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 15.10.74 / 01      LAST UPDATING DATE :
C***********************************************************************
C   INPUT:
C     XG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY. DIMENSION
C     YG    - OF XG, YG, ZG IS 20.
C     ZG    -
C     IOPT  - OPTION. IOPT=2: THE ROUTINE CALCULATES THE INTEGRAL OVER
C             SURFACE NO JS OF N TRANSPOSED MULTIPLIED WITH N (FOR COMP-
C             ONENT PRESSURE).
C             IOPT=3: THE ROUTINE CALCULATES THE INTEGRAL OVER SURFACE
C             NO JS OF N TRANSPOSED MULTIPLIED WITH THE DIRECTION
C             COSINES AND N (FOR NORMAL PRESSURE).
C     JS    - THE HEXAHEDRON'S SURFACE NUMBER FOR WHICH THE INTEGRAL
C             IS TO BE TAKEN.
C     INTXI -
C     INTET - NUMBER OF INTEGRATION POINTS IN THE XI, ETA AND ZETA
C     INTZE - DIRECTION. LEGAL VALUES ARE 2,3 AND 4.
C     XI    -
C     ET    - POINTS IN NORMALIZED COORDINATES WHERE THE NUMERIC INTEG-
C     ZE    - RAL IS TO BE SAMPLED. DIMENSION: XI(4),ET(4),ZE(4)
C     WTXI  -
C     WTET  - WEIGHT FACTORS FOR THE INTEGRATION. DIM. WTXI(4), WTET(4),
C     WTZE  - WTZE(4).
C     IER   - ARRAY WITH LOCAL ELEMENT NODE NUMBERS FOR EACH OF THE 6
C             SURFACES. THERE IS ONE LINE WITH 8 NODENUMBERS FOR EACH
C             OF THE SURFACES. DIM. IER(6,8)
C     IEL   - ELEMENT IDENTIFICATION (E.G. ELEMENT NUMBER)
C     IW    - WRITE UNIT. E.G. WRITE(IW,6010)
C     IPSW  - PRINT SWITCH. IPSW<3: NO PRINT.
C
C   OUTPUT:
C     RNTN  - ARRAY WITH DIMENSION RNTN(8,8,NSURF). RNTN CONTAINS THE
C             INTEGRAL OVER SURFACE NO JS OF N TRANSPOSED MULTIPLIED
C             WITH N, IF IOPT=2. THE INTEGRAL IS STORED IN PAGE (THE
C             THIRD DIMENSION) NO JS OF RNTN.
C     RNTCN - ARRAY WITH DIMENSION RNTCN(24,8,NSURF). RNTCN CONTAINS THE
C             INTEGRAL OVER SURFACE NO JS OF N TRANSPOSED MULTIPLIED
C             WITH THE DIRECTION COSINES AND N, IF IOPT=3. THE INTEGRAL
C             IS STORED IN PAGE NO JS OF RNTCN.
C     IERR  - ERROR FLAG. IERR=0: NO ERRORS DETECTED. IERR=-1: AN ERROR
C             DETECTED IN THIS PROGRAM OR IN ONE OF THE CALLED PROGRAMS.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     RNTN(8,8,6),   RNTCN(24,8,6), IER(6,8)  ,
     1              XG(20)    ,    YG(20)    ,    ZG(20)    ,
     2              XI(4)     ,    ET(4)     ,    ZE(4)     ,
     3              K1(4)     ,    K2(4)     ,    K3(4)     ,
     4              WTXI(4)   ,    WTET(4)   ,    WTZE(4)   ,
     5              WT1(4)    ,    WT2(4)    ,    WT3(4)    ,
     6              DNXI(20)  ,    DNET(20)  ,    DNZE(20)  ,
     7              RN(20)    ,    V1(3)     ,    V2(3)     ,
     8              DCOSI(3)  ,    JA(3,3)
C
      DOUBLE PRECISION JA,K1,K2,K3
C
      IERR=0
      NSFNOD=8
      IONE=1
      NSURF=6
      MEK=20
      NINT=4
      NSFDOF=NSFNOD*3
C
C     PRINT OF INPUT ?
C
      IF (IPSW-3) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I=1,MEK
      WRITE(IW,6040) I,XG(I),YG(I),ZG(I)
   30 CONTINUE
      WRITE(IW,6060) IOPT,JS
      WRITE(IW,6080) INTXI,INTET,INTZE
      WRITE(IW,6100)
      CALL MPRT30(XI,NINT,IONE,IW)
      CALL MPRT30(ET,NINT,IONE,IW)
      CALL MPRT30(ZE,NINT,IONE,IW)
      WRITE(IW,6120)
      CALL MPRT30(WTXI,NINT,IONE,IW)
      CALL MPRT30(WTET,NINT,IONE,IW)
      CALL MPRT30(WTZE,NINT,IONE,IW)
      WRITE(IW,6140)
      WRITE(IW,6150) ((IER(I,J),J=1,NSFNOD),I=1,NSURF)
   50 CONTINUE
C
C     NULLIFY ARRAYS
C
      GOTO(1170,60,100),IOPT
   60 CONTINUE
      DO 90 I=1,NSFNOD
      DO 70 J=1,NSFNOD
      RNTN(I,J,JS)=0.0
   70 CONTINUE
   90 CONTINUE
      GOTO 150
  100 CONTINUE
C
      DO 130 I=1,NSFDOF
      DO 110 J=1,NSFNOD
      RNTCN(I,J,JS)=0.0
  110 CONTINUE
  130 CONTINUE
  150 CONTINUE
C
C     FIND OUT WHETHER JS (THE SURFACE NUMBER) IS ODD OR EVEN
C
      RJ=JS/2.
      JT=INT(RJ)
      RJ=RJ-JT
C
C     RJ HAS NOW THE VALUE 0.5 (JS IS ODD) OR 0.0 (JS IS EVEN)
C
C
C     SET THE VALUES FOR THE SPECIFIC SURFACE.
C
      GO TO (200,210,300,310,400,410),JS
C
C     FOR THIS SURFACE XI=-OR+1.
C
  200 CONTINUE
      MM=2
      NN=3
      GO TO 220
  210 CONTINUE
      MM=3
      NN=2
  220 CONTINUE
      INT1=1
      INT2=INTET
      INT3=INTZE
      K1(1) =1.-RJ*4.
      WT1(1)=1.
      DO 230 I=1,4
      K2(I) =ET(I)
      K3(I) =ZE(I)
      WT2(I)=WTET(I)
      WT3(I)=WTZE(I)
  230 CONTINUE
      GO TO 450
C
C
C     FOR THIS SURFACE ETA=-OR+1.
C
  300 CONTINUE
      MM=3
      NN=1
      GO TO 320
  310 CONTINUE
      MM=1
      NN=3
  320 CONTINUE
      INT1=INTXI
      INT2=1
      INT3=INTZE
      K2(1) =1.-RJ*4.
      WT2(1)=1.
      DO 330 I=1,4
      K1(I) =XI(I)
      K3(I) =ZE(I)
      WT1(I)=WTXI(I)
      WT3(I)=WTZE(I)
  330 CONTINUE
      GO TO 450
C
C
C     FOR THIS SURFACE ZETA=-OR+1.
C
  400 CONTINUE
      MM=1
      NN=2
      GO TO 420
  410 CONTINUE
      MM=2
      NN=1
  420 CONTINUE
      INT1=INTXI
      INT2=INTET
      INT3=1
      K3(1) =1.-RJ*4.
      WT3(1)=1.
      DO 430 I=1,4
      K1(I) =XI(I)
      K2(I) =ET(I)
      WT1(I)=WTXI(I)
      WT2(I)=WTET(I)
  430 CONTINUE
C
  450 CONTINUE
C
C     GAUSSIAN INTEGRATION OVER THE SPECIFIED SURFACE OF NTN OR NTCN,
C     DEPENDING ON THE VALUE OF IOPT (2 OR 3). THIS INTEGRATION IS
C     PERFORMED IN TWO DIMENSIONS, SINCE INT1,INT2 OR INT3 IS EQUAL TO 1
C
      DO 850 M=1,INT3
      DO 830 L=1,INT2
      DO 810 K=1,INT1
C
C     COMPUTE THE PARTIAL DERIVATIVES OF THE SHAPE FUNCTION.
C
      CALL DN2031(DNXI,DNET,DNZE,K1(K),K2(L),K3(M))
C
C     COMPUTE THE JACOBIAN MATRIX
C
      CALL JACO31(JA,DNXI,DNET,DNZE,XG,YG,ZG,MEK)
C
C     CALCULATE THE RELATION BETWEEN DA (DIFFERENTIAL OF A) AND FOR
C     INSTANCE DXI*DZETA (THE DIFFERENTIAL OF THE TWO NORMALIZED
C     COORDINATES IN THE SPECIFIED SURFACE). THIS RELATION IS LATER
C     CALLED THE MAP FACTOR.
C
      DO 510 I=1,3
      V1(I)=JA(MM,I)
      V2(I)=JA(NN,I)
  510 CONTINUE
C
      CALL DADCOS(V1,V2,SVXV,DCOSI)
C
C     THE PRODUCT OF INTEGRATION WEIGHTS AND THE MAP FACTOR.
C
      COF=WT1(K)*WT2(L)*WT3(M)*SVXV
C
C     CALCULATE THE VALUES OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN20(RN,K1(K),K2(L),K3(M))
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT IN THE
C     SPECIFIED SURFACE OF NTN IF THE LOADS CONNECTED TO THIS
C     CALCULATION ARE COMPONENT PRESSURE (IOPT=2).
C
      IF (IOPT-2) 650,530,650
  530 CONTINUE
C
      DO 590 I=1,NSFNOD
      II=IER(JS,I)
      DO 570 J=I,NSFNOD
      JJ=IER(JS,J)
C
      RNTN(I,J,JS)=RNTN(I,J,JS)+COF*RN(II)*RN(JJ)
C
  570 CONTINUE
  590 CONTINUE
C
      GO TO 810
C
C
C     CALCULATE THE CONTRIBUTION FROM THIS INTEGRATION POINT IN THE
C     SPECIFIED SURFACE OF NTCN IF THE LOADS CONNECTED TO THIS
C     CALCULATION ARE NORMAL PRESSURE (IOPT=3).
C
  650 CONTINUE
      DO 710 I=1,NSFNOD
      II=IER(JS,I)
      DO 690 J=I,NSFNOD
      JJ=IER(JS,J)
C
      RNTCNI=COF*RN(II)*RN(JJ)
C
C     MULTIPLY THE TERM WITH THE CORRESPONDING DIRECTION COSINE.
C
      DO 670 N=1,3
      NI=(I-1)*3+N
C
      RNTCN(NI,J,JS)=RNTCN(NI,J,JS)+RNTCNI*DCOSI(N)
C
  670 CONTINUE
  690 CONTINUE
  710 CONTINUE
C
  810 CONTINUE
  830 CONTINUE
  850 CONTINUE
C
      IF (IOPT-2) 950,870,950
C
C     IF IOPT=2 ADD IN THE SYMMETRIC PART OF RNTN
C
  870 CONTINUE
      DO 910 I=2,NSFNOD
      I1=I-1
      DO 890 J=1,I1
      RNTN(I,J,JS)=RNTN(J,I,JS)
  890 CONTINUE
  910 CONTINUE
      GO TO 1030
C
C     IF IOPT=3 ADD IN THE SYMMETRIC PART OF RNTCN.
C
  950 CONTINUE
      DO 1010 I=2,NSFNOD
      I1=I-1
      DO 990  J=1,I1
      DO 970  N=1,3
      NI=(I-1)*3+N
      NJ=(J-1)*3+N
C
      RNTCN(NI,J,JS)=RNTCN(NJ,I,JS)
C
  970 CONTINUE
  990 CONTINUE
 1010 CONTINUE
C
 1030 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF (IPSW-3) 1170,1050,1050
 1050 CONTINUE
      WRITE(IW,6500) JS,IEL
      IF (IOPT-2) 1110,1070,1110
 1070 CONTINUE
      DO 1090 I=1,NSFNOD
      WRITE(IW,6520) (RNTN(I,J,JS),J=1,NSFNOD)
 1090 CONTINUE
      GO TO 1150
 1110 DO 1130 I=1,NSFDOF
      WRITE(IW,6520) (RNTCN(I,J,JS),J=1,NSFNOD)
 1130 CONTINUE
 1150 WRITE(IW,6540) IEL,JS
C
C
 1170 CONTINUE
C
C
 6000 FORMAT(///28H ENTERING NTN20 FOR ELEMENT , I7,2H :)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,53HPRESSURE OPTION (COMPONENT (2) OR NORMAL (3)) (IOPT)
     1=,I4,3X,16HSURFACE NO (JS)=,I4)
 6080 FORMAT(/5X,'NUMBER OF INTEGRATION POINTS IN THE XI,ETA AND ZETA',
     1 'DIRECTION (INTXI)=',I3,3X,' (INTET)=',I3,3X,' (INTZE)=',I3)
 6100 FORMAT(/5X,89HTHE NORMALIZED COORDINATES FOR THE INTEGRATION POINT
     1S IN THE XI, ETA AND ZETA DIRECTION :)
 6120 FORMAT(/5X,96HTHE WEIGHTS FOR NUMERIC INTEGRATION IN THE XI, ETA A
     1ND ZETA DIRECTION (WTXI), (WTET) AND (WTZE):)
 6140 FORMAT(/5X,87HTHE ARRAY (IER) CONTAINING THE LOCAL NODES CONNECTED
     1TO EACH OF THE ELEMENT'S SURFACES :)
 6150 FORMAT(5X,8I8)
C
 6500 FORMAT(//5X,13HPAGE NO (JS):,I3,3X,42HOF THE ARRAY RNTN OR RNTCN F
     1OR ELEMENT NO:,I7)
 6520 FORMAT(5X,1P6E12.4)
 6540 FORMAT(/30H LEAVING NTN20 FOR ELEMENT NO:,I7,3X,11HSURFACE NO:,I4)
C
      RETURN
      END
      SUBROUTINE RN20(RN,XI,ET,ZE)
C
C***********************************************************************
C
C  F I N I T E  E L M E N T  L I B R A R Y  SUBROUTINE :  RN20
C
C
C     RN20 CALCULATES THE 20 TERMS IN THE SHAPE FUNCTION FOR A GIVEN
C     POINT IN THE XI,ETA AND ZETA COORDINATE SYSTEM WITHEIN A TWENTY
C     NODES ISOPARAMETRIC HEXAHEDRON.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION :04.07.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XI    -
C     ET    - NORMALIZED (CURVILINEAR) COORDINATES FOR THE POINT IN
C     ZE    - THE HEXAHEDRON.
C
C   OUTPUT:
C
C     RN    - AN ARRAY CONTAINING THE 20 TERMS OF THE SHAPE FUNCTION
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     RN(20)
C
C
C
C     CALCULATE THE VALUE OF THE SHAPE FUNCTION IN THE POINT.
C
      XIP=1.+XI
      XIM=1.-XI
      ETP=1.+ET
      ETM=1.-ET
      ZEP=1.+ZE
      ZEM=1.-ZE
      XIXI=XI*XI
      ETET=ET*ET
      ZEZE=ZE*ZE
C
C     CORNER NODES:
      RN( 1)=.125*XIM*ETM*ZEM*((-1.)*XI-ET-ZE-2.)
      RN( 3)=.125*XIP*ETM*ZEM*((+1.)*XI-ET-ZE-2.)
      RN( 5)=.125*XIP*ETP*ZEM*((+1.)*XI+ET-ZE-2.)
      RN( 7)=.125*XIM*ETP*ZEM*((-1.)*XI+ET-ZE-2.)
      RN(13)=.125*XIM*ETM*ZEP*((-1.)*XI-ET+ZE-2.)
      RN(15)=.125*XIP*ETM*ZEP*((+1.)*XI-ET+ZE-2.)
      RN(17)=.125*XIP*ETP*ZEP*((+1.)*XI+ET+ZE-2.)
      RN(19)=.125*XIM*ETP*ZEP*((-1.)*XI+ET+ZE-2.)
C
C     MID SIDE NODES WHERE XII=0:
C
      RN( 2)=.25*(1.-XIXI)*ETM*ZEM
      RN( 6)=.25*(1.-XIXI)*ETP*ZEM
      RN(14)=.25*(1.-XIXI)*ETM*ZEP
      RN(18)=.25*(1.-XIXI)*ETP*ZEP
C
C     MID SIDE NODES WHERE ETAI=0:
C
      RN( 4)=.25*(1.-ETET)*XIP*ZEM
      RN( 8)=.25*(1.-ETET)*XIM*ZEM
      RN(16)=.25*(1.-ETET)*XIP*ZEP
      RN(20)=.25*(1.-ETET)*XIM*ZEP
C
C     MID SIDE NODES WHERE ZETAI=0:
C
      RN( 9)=.25*(1.-ZEZE)*XIM*ETM
      RN(10)=.25*(1.-ZEZE)*XIP*ETM
      RN(11)=.25*(1.-ZEZE)*XIP*ETP
      RN(12)=.25*(1.-ZEZE)*XIM*ETP
C
C
C
      RETURN
      END
      SUBROUTINE XYZ20(XGP,YGP,ZGP,XG,YG,ZG,XI,ET,ZE,IEL,IW,IPSW)
C
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE :  XYZ20
C
C
C     XYZ20 CALCULATES THE GLOBAL COORDINATES FOR POINTS IN AN ISO-
C     PARAMETRIC HEXAHEDRON WITH 20 NODES.
C
C     PROGRAMMED BY: H.F. KLEM
C
C     DATE/VERSION : 20.05.74 / 01      LAST UPDATING DATE:
C
C***********************************************************************
C
C   INPUT:
C
C     XG    -
C     YG    - GLOBAL NODAL COORDINATES DEFINING THE GEOMETRY OF THE
C     ZG    - ELEMENT. DIMENSION OF XG,YG AND ZG IS 20.
C     XI    -
C     ET    - NORMALIZED COORDINATES FOR THE POINT IN THE HEXAHEDRON.
C     ZE    -
C
C   OUTPUT:
C
C     XGP    -
C     YGP    - GLOBAL COORDINATES FOR THE POINT IN THE HEXAHEDRON.
C     ZGP    -
C
C***********************************************************************
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION     XG(1)     ,    YG(1)     ,    ZG(1)     ,    RN(20)
C
      MEK=20
C
C     PRINT OF INPUT ?
C
      IF (IPSW-3) 50,10,10
   10 CONTINUE
      WRITE(IW,6000) IEL
      WRITE(IW,6020)
      DO 30 I1=1,MEK
      WRITE(IW,6040) I1,XG(I1),YG(I1),ZG(I1)
   30 CONTINUE
      WRITE(IW,6060) XI,ET,ZE
   50 CONTINUE
C
C     CALCULATE THE VALUE OF THE SHAPE FUNCTION IN THE POINT.
C
      CALL RN20(RN,XI,ET,ZE)
C
C     NULLIFY X,Y AND Z
C
      XGP=0.0
      YGP=0.0
      ZGP=0.0
C
C     CALCULATE THE X-,Y- AND Z-COORDINATES IN THE POINT.
C
      DO 70 I=1,MEK
      XGP=XGP+RN(I)*XG(I)
      YGP=YGP+RN(I)*YG(I)
      ZGP=ZGP+RN(I)*ZG(I)
   70 CONTINUE
C
C     PRINT OF OUTPUT ?
C
      IF(IPSW-3) 110,90,90
   90 WRITE(IW,6120)  XGP,YGP,ZGP
      WRITE(IW,6140)  IEL
  110 CONTINUE
C
C
 6000 FORMAT(///31H ENTERING XYZ20 FOR ELEMENT NO:,I7)
 6020 FORMAT(//,'     NODAL POINT COORDINATES:'
     1        /,'     NODE        XG          YG          ZG')
 6040 FORMAT(I9,6X,1P3E12.4)
 6060 FORMAT(/5X,27HNORMALIZED COORDINATES: XI=,F7.4,3X, 4HETA=,F7.4,
     1     5HZETA=,F7.4)
 6120 FORMAT(/5X,40HTHE GLOBAL COORDINATES IN THE POINT:  X=,1PE12.5,3X,
     1     2HY=,1PE12.5,3X, 2HZ=,1PE12.5)
 6140 FORMAT(/30H LEAVING XYZ20 FOR ELEMENT NO:,I7)
C
      RETURN
      END
      SUBROUTINE  DN2031(DNXI,DNET,DNZE,XI,ET,ZE)
C***********************************************************************
C
C  F I N I T E  E L E M E N T  L I B R A R Y  SUBROUTINE : DN2031
C
C     DN2031 CALCULATES THE TERMS IN THE PARTIAL DERIVATIVES OF THE
C     SHAPE FUNCTION WITH RESPECT TO XI,ETA AND ZETA, FOR A POINT
C     WITHIN A 20 NODES ISOPARAMETRIC HEXAHEDRON.
C
C     PROGRAMMED BY: B. AAMODT AND H.F. KLEM
C
C     DATE/VERSION : 12.07.74 / 02      LAST UPDATING DATE:
C***********************************************************************
C   INPUT:
C     XI    - COORDINATES IN THE XI,ETA AND ZETA DIRECTION FOR THE
C     ET    - POINT WHERE THE DERIVATIVES OF THE SHAPE FUNCTION ARE
C     ZE    - TAKEN.
C   OUTPUT:
C     DNXI  - THE DERIVATIVES OF THE SHAPE FUNCTION WITH RESPECT TO XI,
C     DNET  - ETA,
C     DNZE  - AND ZETA.
C***********************************************************************
C
      IMPLICIT NONE
      DOUBLE PRECISION  DNXI(20), DNET(20), DNZE(20), XI, ET, ZE
      DOUBLE PRECISION  XII(20) , ETI(20) , ZEI(20)
      INTEGER           I
C
      XII( 1)=-1.
      XII( 2)= 0.
      XII( 3)= 1.
      XII( 4)= 1.
      XII( 5)= 1.
      XII( 6)= 0.
      XII( 7)=-1.
      XII( 8)=-1.
      XII( 9)=-1.
      XII(10)= 1.
      XII(11)= 1.
      XII(12)=-1.
      XII(13)=-1.
      XII(14)= 0.
      XII(15)= 1.
      XII(16)= 1.
      XII(17)= 1.
      XII(18)= 0.
      XII(19)=-1.
      XII(20)=-1.
C
      ETI( 1)=-1.
      ETI( 2)=-1.
      ETI( 3)=-1.
      ETI( 4)= 0.
      ETI( 5)= 1.
      ETI( 6)= 1.
      ETI( 7)= 1.
      ETI( 8)= 0.
      ETI( 9)=-1.
      ETI(10)=-1.
      ETI(11)= 1.
      ETI(12)= 1.
      ETI(13)=-1.
      ETI(14)=-1.
      ETI(15)=-1.
      ETI(16)= 0.
      ETI(17)= 1.
      ETI(18)= 1.
      ETI(19)= 1.
      ETI(20)= 0.
C
      ZEI( 1)=-1.
      ZEI( 2)=-1.
      ZEI( 3)=-1.
      ZEI( 4)=-1.
      ZEI( 5)=-1.
      ZEI( 6)=-1.
      ZEI( 7)=-1.
      ZEI( 8)=-1.
      ZEI( 9)= 0.
      ZEI(10)= 0.
      ZEI(11)= 0.
      ZEI(12)= 0.
      ZEI(13)= 1.
      ZEI(14)= 1.
      ZEI(15)= 1.
      ZEI(16)= 1.
      ZEI(17)= 1.
      ZEI(18)= 1.
      ZEI(19)= 1.
      ZEI(20)= 1.
C
      DO 5 I=1,20
      GO TO (1,2,1,3,1,2,1,3,4,4,4,4,1,2,1,3,1,2,1,3),I
C
C     CORNER NODES
C
    1 CONTINUE
      DNXI(I)=.125*XII(I)*(1.+ET*ETI(I))*(1.+ZE*ZEI(I))*
     1       (2.*XI*XII(I)+ET*ETI(I)+ZE*ZEI(I)-1.)
      DNET(I)=.125*ETI(I)*(1.+XI*XII(I))*(1.+ZE*ZEI(I))*
     1       (XI*XII(I)+2.*ET*ETI(I)+ZE*ZEI(I)-1.)
      DNZE(I)=.125*ZEI(I)*(1.+XI*XII(I))*(1.+ET*ETI(I))*
     1       (XI*XII(I)+ET*ETI(I)+2.*ZE*ZEI(I)-1.)
      GO TO 5
C
C     MID-SIDE NODES WHERE XII=0
C
    2 CONTINUE
      DNXI(I)=-.5*XI*(1.+ET*ETI(I))*(1.+ZE*ZEI(I))
      DNET(I)=.25*ETI(I)*(1.-XI*XI)*(1.+ZE*ZEI(I))
      DNZE(I)=.25*ZEI(I)*(1.-XI*XI)*(1.+ET*ETI(I))
      GO TO 5
C
C     MID-SIDE NODES WHERE ETI=0
C
    3 CONTINUE
      DNXI(I)=.25*XII(I)*(1.-ET*ET)*(1.+ZE*ZEI(I))
      DNET(I)=-.5*ET*(1.+XI*XII(I))*(1.+ZE*ZEI(I))
      DNZE(I)=.25*ZEI(I)*(1.+XI*XII(I))*(1.-ET*ET)
      GO TO 5
C
C     MID-SIDE NODES WHERE ZEI=0
C
    4 CONTINUE
      DNXI(I)=.25*XII(I)*(1.+ET*ETI(I))*(1.-ZE*ZE)
      DNET(I)=.25*ETI(I)*(1.+XI*XII(I))*(1.-ZE*ZE)
      DNZE(I)=-.5*ZE*(1.+XI*XII(I))*(1.+ET*ETI(I))
C
    5 CONTINUE
C
      RETURN
      END
